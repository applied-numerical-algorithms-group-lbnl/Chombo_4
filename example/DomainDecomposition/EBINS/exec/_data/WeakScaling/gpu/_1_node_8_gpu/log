max_step        = 10
max_time        = 10
checkpoint interval = -1
plotfile   interval = -1
defining geometry
nx       = 64
defining geometry
maxGrid  = 32
max_step        = 10
max_time        = 10
checkpoint interval = -1
plotfile   interval = -1
defining geometry
nx       = 64
defining geometry
maxGrid  = 32
creating grid hierarchy
max_step        = 10
max_time        = 10
checkpoint interval = -1
plotfile   interval = -1
defining geometry
nx       = 64
creating grid hierarchy
max_step        = 10
max_time        = 10
checkpoint interval = -1
plotfile   interval = -1
defining geometry
nx       = 64
defining geometry
maxGrid  = 32
creating grid hierarchy
creating implicit function
all regular geometry
creating geometry service
defining geometry
maxGrid  = 32
creating grid hierarchy
creating implicit function
all regular geometry
creating geometry service
creating implicit function
all regular geometry
creating geometry service
creating implicit function
all regular geometry
creating geometry service
done with creating geometry service
making dictionary
done with creating geometry service
making dictionary
done with creating geometry service
making dictionary
inititializing data
using backward Euler for parabolic solver
==============================================
tolerance       = 1e-12
maxIter         = 27
blob cen        = 0.3
geom cen        = 0
max vel mag     = 1
max vel rad     = 0.25
max_step        = 10
inititializing data
using backward Euler for parabolic solver
==============================================
tolerance       = 1e-12
inititializing data
using backward Euler for parabolic solver
==============================================
tolerance       = 1e-12
maxIter         = 27
blob cen        = 0.3
geom cen        = 0
max vel mag     = 1
max vel rad     = 0.25
max_step        = 10
max_time        = 10
viscosity       = 0.01
==============================================
initializing solver 
max_time        = 10
viscosity       = 0.01
==============================================
initializing solver 
maxIter         = 27
blob cen        = 0.3
geom cen        = 0
max vel mag     = 1
max vel rad     = 0.25
max_step        = 10
max_time        = 10
viscosity       = 0.01
==============================================
initializing solver 
done with creating geometry service
making dictionary
inititializing data
using backward Euler for parabolic solver
==============================================
tolerance       = 1e-12
maxIter         = 27
blob cen        = 0.3
geom cen        = 0
max vel mag     = 1
max vel rad     = 0.25
max_step        = 10
max_time        = 10
viscosity       = 0.01
==============================================
initializing solver 
max_step        = 10
max_time        = 10
checkpoint interval = -1
plotfile   interval = -1
defining geometry
nx       = 64
defining geometry
maxGrid  = 32
creating grid hierarchy
max_step        = 10
max_time        = 10
checkpoint interval = -1
plotfile   interval = -1
defining geometry
nx       = 64
defining geometry
maxGrid  = 32
creating grid hierarchy
creating implicit function
all regular geometry
creating geometry service
creating implicit function
all regular geometry
creating geometry service
max_step        = 10
max_time        = 10
checkpoint interval = -1
plotfile   interval = -1
defining geometry
nx       = 64
defining geometry
maxGrid  = 32
creating grid hierarchy
creating implicit function
all regular geometry
creating geometry service
max_step        = 10
max_time        = 10
checkpoint interval = -1
plotfile   interval = -1
defining geometry
nx       = 64
defining geometry
maxGrid  = 32
creating grid hierarchy
creating implicit function
all regular geometry
creating geometry service
done with creating geometry service
making dictionary
done with creating geometry service
making dictionary
inititializing data
inititializing data
using backward Euler for parabolic solver
==============================================
tolerance       = 1e-12
maxIter         = 27
blob cen        = 0.3
geom cen        = 0
max vel mag     = 1
max vel rad     = 0.25
max_step        = 10
max_time        = 10
using backward Euler for parabolic solver
==============================================
tolerance       = 1e-12
maxIter         = 27
blob cen        = 0.3
viscosity       = 0.01
==============================================
initializing solver 
geom cen        = 0
max vel mag     = 1
max vel rad     = 0.25
max_step        = 10
max_time        = 10
viscosity       = 0.01
==============================================
initializing solver 
done with creating geometry service
making dictionary
inititializing data
using backward Euler for parabolic solver
==============================================
tolerance       = 1e-12
maxIter         = 27
blob cen        = 0.3
geom cen        = 0
max vel mag     = 1
max vel rad     = 0.25
max_step        = 10
max_time        = 10
viscosity       = 0.01
==============================================
done with creating geometry service
making dictionary
initializing solver 
inititializing data
using backward Euler for parabolic solver
==============================================
tolerance       = 1e-12
maxIter         = 27
blob cen        = 0.3
geom cen        = 0
max vel mag     = 1
max vel rad     = 0.25
max_step        = 10
max_time        = 10
viscosity       = 0.01
==============================================
initializing solver 
EBINS::defineInternals defining parabolic solvers
EBINS::defineInternals defining Helmoltz solver for velocity
EBINS::defineInternals defining parabolic solvers
EBINS::defineInternals defining Helmoltz solver for velocity
EBINS::defineInternals defining parabolic solvers
EBINS::defineInternals defining Helmoltz solver for velocity
EBINS::defineInternals defining parabolic solvers
EBINS::defineInternals defining Helmoltz solver for velocity
EBINS::defineInternals defining parabolic solvers
EBINS::defineInternals defining parabolic solvers
EBINS::defineInternals defining Helmoltz solver for velocity
EBINS::defineInternals defining parabolic solvers
EBINS::defineInternals defining Helmoltz solver for velocity
EBINS::defineInternals defining Helmoltz solver for velocity
EBINS::defineInternals defining parabolic solvers
EBINS::defineInternals defining Helmoltz solver for velocity
EBINS::defineInternals defining Helmoltz solver for species
EBINS::defineInternals defining Helmoltz solver for species
EBINS::defineInternals defining Helmoltz solver for species
EBINS::defineInternals defining Helmoltz solver for species
EBINS::defineInternals defining Helmoltz solver for species
EBINS::defineInternals defining Helmoltz solver for species
EBINS::defineInternals defining Helmoltz solver for species
EBINS::defineInternals defining Helmoltz solver for species
EBINS::defineInternals defining EBBackwrdEuler solver for velo
EBINS::defineInternals defining EBBackwrdEuler solver for spec
EBINS::defineInternals defining advection operator
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : done with
EBINS::defineInternals defining EBBackwrdEuler solver for velo
EBINS::defineInternals defining EBBackwrdEuler solver for spec
EBINS::defineInternals defining advection operator
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : done with
EBINS::defineInternals defining EBBackwrdEuler solver for velo
EBINS::defineInternals defining EBBackwrdEuler solver for velo
EBINS::defineInternals defining EBBackwrdEuler solver for spec
EBINS::defineInternals defining EBBackwrdEuler solver for spec
EBINS::defineInternals defining advection operator
EBINS::defineInternals defining advection operator
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : done with
EBAdvection::fillkappa : done with
EBINS::defineInternals defining EBBackwrdEuler solver for velo
EBINS::defineInternals defining EBBackwrdEuler solver for spec
EBINS::defineInternals defining advection operator
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : done with
EBINS::defineInternals defining EBBackwrdEuler solver for velo
EBINS::defineInternals defining EBBackwrdEuler solver for spec
EBINS::defineInternals defining advection operator
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : done with
EBINS::defineInternals defining EBBackwrdEuler solver for velo
EBINS::defineInternals defining EBBackwrdEuler solver for spec
EBINS::defineInternals defining advection operator
EBINS::defineInternals defining EBBackwrdEuler solver for velo
EBINS::defineInternals defining EBBackwrdEuler solver for spec
EBINS::defineInternals defining advection operator
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : done with
EBAdvection::fillkappa : done with
EBAdvection::constructor leaving
EBINS::defineInternals defining projection operators
EBAdvection::constructor leaving
EBINS::defineInternals defining projection operators
EBAdvection::constructor leaving
EBINS::defineInternals defining projection operators
EBAdvection::constructor leaving
EBINS::defineInternals defining projection operators
EBAdvection::constructor leaving
EBINS::defineInternals defining projection operators
EBAdvection::constructor leaving
EBINS::defineInternals defining projection operators
EBAdvection::constructor leaving
EBINS::defineInternals defining projection operators
EBAdvection::constructor leaving
EBINS::defineInternals defining projection operators
EBINS::defineInternals defining advection operator
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : done with
EBINS::defineInternals defining advection operator
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : done with
EBINS::defineInternals defining advection operator
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : done with
EBINS::defineInternals defining advection operator
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : done with
EBINS::defineInternals defining advection operator
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : done with
EBAdvection::constructor leaving
EBINS::defineInternals defining advection operator
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : done with
EBINS::defineInternals defining advection operator
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : done with
EBINS::defineInternals defining advection operator
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : done with
EBAdvection::constructor leaving
EBAdvection::constructor leaving
EBAdvection::constructor leaving
EBAdvection::constructor leaving
after EBINS constructor
going into initialize data 
zero velocity in the interior (potential flow ic)
calling initializespot for scalar 
just making all the species spots
Standard Treb pressure initializtion:
initializing pressure with (I-P)(v*).
(gphi out of initial projection).    
startiing run
inside run
projecting initial velocity
We are starting from scratch so we are projecting the initial velocity.
EBCCProjector::project: |input velo|max = (0@(0 ,0 ,0 ),0@(0 ,0 ,0 ),0@(0 ,0 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 64@(0 ,0 ,0 )
EBMultigrid::solve tol = 1e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 6.400e+01@ (0 ,0 ,0 )
EBMultigrid::solve iter = 1, |resid| = 4.323e+00@ (0 ,63,63), rate = 1.481e+01
EBMultigrid::solve iter = 2, |resid| = 1.583e-01@ (0 ,63,63), rate = 2.730e+01
after EBINS constructor
going into initialize data 
zero velocity in the interior (potential flow ic)
calling initializespot for scalar 
just making all the species spots
Standard Treb pressure initializtion:
initializing pressure with (I-P)(v*).
(gphi out of initial projection).    
startiing run
inside run
projecting initial velocity
We are starting from scratch so we are projecting the initial velocity.
EBMultigrid::solve iter = 3, |resid| = 5.225e-03@ (0 ,0 ,0 ), rate = 3.030e+01
EBAdvection::constructor leaving
EBCCProjector::project: |input velo|max = (0@(0 ,0 ,0 ),0@(0 ,0 ,0 ),0@(0 ,0 ,0 )EBCCProjector::project: |input velo|max)
after EBINS constructor
going into initialize data 
zero velocity in the interior (potential flow ic)
calling initializespot for scalar 
just making all the species spots
Standard Treb pressure initializtion:
initializing pressure with (I-P)(v*).
(gphi out of initial projection).    
startiing run
inside run
projecting initial velocity
We are starting from scratch so we are projecting the initial velocity.
EBAdvection::constructor leaving
EBCCProjector::project: |kappa DiVU|max  = 64@(0 ,0 ,0 )
EBCCProjector::project: |input velo|max = (0@(0 ,0 ,0 ),0@(0 ,0 ,0 ),0@(0 ,0 ,0 )EBCCProjector::project: |input velo|max)
EBAdvection::constructor leaving
after EBINS constructor
going into initialize data 
zero velocity in the interior (potential flow ic)
calling initializespot for scalar 
just making all the species spots
Standard Treb pressure initializtion:
initializing pressure with (I-P)(v*).
(gphi out of initial projection).    
startiing run
inside run
projecting initial velocity
We are starting from scratch so we are projecting the initial velocity.
EBMultigrid::solve tol = 1e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 6.400e+01@ (0 ,0 ,0 )
EBCCProjector::project: |input velo|max = (0@(0 ,0 ,0 ),0@(0 ,0 ,0 ),0@(0 ,0 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 4, |resid| = 1.652e-04@ (0 ,0 ,0 ), rate = 3.163e+01
EBCCProjector::project: |kappa DiVU|max  = 64@(0 ,0 ,0 )
EBMultigrid::solve tol = 1e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 6.400e+01@ (0 ,0 ,0 )
EBCCProjector::project: |kappa DiVU|max  = 64@(0 ,0 ,0 )
EBMultigrid::solve tol = 1e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 6.400e+01@ (0 ,0 ,0 )
EBMultigrid::solve iter = 1, |resid| = 4.323e+00@ (0 ,63,63), rate = 1.481e+01
after EBINS constructor
going into initialize data 
zero velocity in the interior (potential flow ic)
calling initializespot for scalar 
just making all the species spots
Standard Treb pressure initializtion:
initializing pressure with (I-P)(v*).
(gphi out of initial projection).    
startiing run
inside run
projecting initial velocity
We are starting from scratch so we are projecting the initial velocity.
EBMultigrid::solve iter = 5, |resid| = 5.315e-06@ (0 ,63,0 ), rate = 3.108e+01
EBCCProjector::project: |input velo|max = (0@(0 ,0 ,0 ),0@(0 ,0 ,0 ),0@(0 ,0 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 1, |resid| = 4.323e+00@ (0 ,63,63), rate = 1.481e+01
EBCCProjector::project: |kappa DiVU|max  = 64@(0 ,0 ,0 )
EBMultigrid::solve tol = 1e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 6.400e+01@ (0 ,0 ,0 )
EBMultigrid::solve iter = 1, |resid| = 4.323e+00@ (0 ,63,63), rate = 1.481e+01
EBMultigrid::solve iter = 2, |resid| = 1.583e-01@ (0 ,63,63), rate = 2.730e+01
EBMultigrid::solve iter = 3, |resid| = 5.225e-03@ (0 ,0 ,0 ), rate = 3.030e+01
EBMultigrid::solve iter = 1, |resid| = 4.323e+00@ (0 ,0 ,0 ), rate = 1.481e+01
EBMultigrid::solve iter = 2, |resid| = 1.583e-01@ (0 ,0 ,0 ), rate = 2.730e+01
after EBINS constructor
going into initialize data 
zero velocity in the interior (potential flow ic)
calling initializespot for scalar 
just making all the species spots
Standard Treb pressure initializtion:
initializing pressure with (I-P)(v*).
(gphi out of initial projection).    
startiing run
inside run
projecting initial velocity
We are starting from scratch so we are projecting the initial velocity.
EBMultigrid::solve iter = 4, |resid| = 1.652e-04@ (0 ,63,63), rate = 3.163e+01
EBMultigrid::solve iter = 6, |resid| = 1.843e-07@ (0 ,0 ,63), rate = 2.884e+01
EBCCProjector::project: |input velo|max = (0@(0 ,0 ,0 ),0@(0 ,0 ,0 ),0@(0 ,0 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 2, |resid| = 1.583e-01@ (0 ,63,63), rate = 2.730e+01
EBCCProjector::project: |kappa DiVU|max  = 64@(0 ,0 ,0 )
EBMultigrid::solve tol = 1e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 6.400e+01@ (0 ,0 ,0 )
EBMultigrid::solve iter = 5, |resid| = 5.315e-06@ (0 ,63,0 ), rate = 3.108e+01
after EBINS constructor
going into initialize data 
zero velocity in the interior (potential flow ic)
calling initializespot for scalar 
just making all the species spots
Standard Treb pressure initializtion:
initializing pressure with (I-P)(v*).
(gphi out of initial projection).    
startiing run
inside run
projecting initial velocity
We are starting from scratch so we are projecting the initial velocity.
after EBINS constructor
going into initialize data 
zero velocity in the interior (potential flow ic)
calling initializespot for scalar 
just making all the species spots
Standard Treb pressure initializtion:
initializing pressure with (I-P)(v*).
(gphi out of initial projection).    
startiing run
inside run
projecting initial velocity
We are starting from scratch so we are projecting the initial velocity.
EBCCProjector::project: |input velo|max = (0@(0 ,0 ,0 ),0@(0 ,0 ,0 ),0@(0 ,0 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 1, |resid| = 4.323e+00@ (0 ,63,63), rate = 1.481e+01
EBCCProjector::project: |input velo|max = (0@(0 ,0 ,0 ),0@(0 ,0 ,0 ),0@(0 ,0 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 2, |resid| = 1.583e-01@ (0 ,63,63), rate = 2.730e+01
EBMultigrid::solve iter = 3, |resid| = 5.225e-03@ (0 ,0 ,0 ), rate = 3.030e+01
EBMultigrid::solve iter = 3, |resid| = 5.225e-03@ (0 ,0 ,0 ), rate = 3.030e+01
EBMultigrid::solve iter = 7, |resid| = 6.421e-09@ (0 ,63,0 ), rate = 2.870e+01
EBCCProjector::project: |kappa DiVU|max  = 64@(0 ,0 ,0 )
EBMultigrid::solve iter = 6, |resid| = 1.843e-07@ (0 ,63,0 ), rate = 2.884e+01
EBMultigrid::solve tol = 1e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 6.400e+01@ (0 ,0 ,0 )
EBCCProjector::project: |kappa DiVU|max  = 64@(0 ,0 ,0 )
EBMultigrid::solve tol = 1e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 6.400e+01@ (0 ,0 ,0 )
EBMultigrid::solve iter = 2, |resid| = 1.583e-01@ (0 ,63,63), rate = 2.730e+01
EBMultigrid::solve iter = 3, |resid| = 5.225e-03@ (0 ,0 ,0 ), rate = 3.030e+01
EBMultigrid::solve iter = 4, |resid| = 1.652e-04@ (0 ,63,63), rate = 3.163e+01
EBMultigrid::solve iter = 4, |resid| = 1.652e-04@ (0 ,63,63), rate = 3.163e+01
EBMultigrid::solve iter = 8, |resid| = 2.260e-10@ (0 ,0 ,63), rate = 2.841e+01
EBMultigrid::solve iter = 7, |resid| = 6.422e-09@ (0 ,0 ,63), rate = 2.870e+01
EBMultigrid::solve iter = 1, |resid| = 4.323e+00@ (0 ,63,63), rate = 1.481e+01
EBMultigrid::solve iter = 3, |resid| = 5.225e-03@ (0 ,0 ,0 ), rate = 3.030e+01
EBMultigrid::solve iter = 1, |resid| = 4.323e+00@ (0 ,63,63), rate = 1.481e+01
EBMultigrid::solve iter = 8, |resid| = 2.269e-10@ (0 ,63,0 ), rate = 2.830e+01
EBMultigrid::solve iter = 4, |resid| = 1.652e-04@ (0 ,0 ,0 ), rate = 3.163e+01
EBMultigrid::solve iter = 5, |resid| = 5.315e-06@ (0 ,0 ,63), rate = 3.108e+01
EBMultigrid::solve iter = 5, |resid| = 5.315e-06@ (0 ,0 ,63), rate = 3.108e+01
EBMultigrid:solve: final     |resid| = 9.550e-12@ (3 ,22,47)
EBCCProjector::project: |phi|max  = 9.922e-01@(0 ,57,63)
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 2, |resid| = 1.583e-01@ (0 ,0 ,0 ), rate = 2.730e+01
EBMultigrid::solve iter = 4, |resid| = 1.652e-04@ (0 ,63,63), rate = 3.163e+01
EBMultigrid::solve iter = 2, |resid| = 1.583e-01@ (0 ,0 ,0 ), rate = 2.730e+01
EBMultigrid:solve: final     |resid| = 9.550e-12@ (7 ,42,57)
EBCCProjector::project: |phi|max  = 9.922e-01@(0 ,57,63)
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 5, |resid| = 5.315e-06@ (0 ,0 ,63), rate = 3.108e+01
EBMultigrid::solve iter = 6, |resid| = 1.843e-07@ (0 ,0 ,63), rate = 2.884e+01
EBLevelCCProjector::project:|gph|max = (3.125e+01@(0 ,56,62),5.684e-14@(0 ,63,1 ),5.684e-14@(1 ,0 ,63)EBLevelCCProjector::project:|gph|max)
EBMultigrid::solve iter = 6, |resid| = 1.843e-07@ (0 ,63,0 ), rate = 2.884e+01
maxvel = 3.125e+01, dx = 1.562e-02, dt = 2.500e-04
We are starting from scratch so we are  initializing  pressure.
Since there is no Stokes flow initialization and the number of pressure iterations == 0, 
we are using the initial projection's pressure gradient as the initial  pressure.
step = 0, time = 0.000e+00 dt = 2.500e-04
advancing velocity and pressure fields 
EBLevelCCProjector::project:|gph|max = (3.125e+01@(0 ,58,60),5.684e-14@(0 ,0 ,62),5.684e-14@(0 ,1 ,63)EBLevelCCProjector::project:|gph|max)
EBMultigrid::solve iter = 3, |resid| = 5.225e-03@ (0 ,63,63), rate = 3.030e+01
EBMultigrid::solve iter = 5, |resid| = 5.315e-06@ (0 ,0 ,63), rate = 3.108e+01
EBMultigrid::solve iter = 3, |resid| = 5.225e-03@ (0 ,0 ,0 ), rate = 3.030e+01
maxvel = 3.125e+01, dx = 1.562e-02, dt = 2.500e-04
We are starting from scratch so we are  initializing  pressure.
Since there is no Stokes flow initialization and the number of pressure iterations == 0, 
we are using the initial projection's pressure gradient as the initial  pressure.
step = 0, time = 0.000e+00 dt = 2.500e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 6, |resid| = 1.843e-07@ (0 ,0 ,63), rate = 2.884e+01
EBMultigrid::solve iter = 7, |resid| = 6.421e-09@ (0 ,0 ,63), rate = 2.870e+01
EBMultigrid::solve iter = 7, |resid| = 6.421e-09@ (0 ,0 ,63), rate = 2.871e+01
EBMultigrid::solve iter = 4, |resid| = 1.652e-04@ (0 ,0 ,0 ), rate = 3.163e+01
EBMultigrid::solve iter = 6, |resid| = 1.843e-07@ (0 ,63,0 ), rate = 2.884e+01
EBMultigrid::solve iter = 4, |resid| = 1.652e-04@ (0 ,0 ,0 ), rate = 3.163e+01
EBMultigrid::solve iter = 7, |resid| = 6.421e-09@ (0 ,0 ,63), rate = 2.871e+01
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.164e+01@ (63,58,51)
EBMultigrid::solve iter = 8, |resid| = 2.251e-10@ (0 ,0 ,63), rate = 2.853e+01
EBMultigrid::solve iter = 8, |resid| = 2.256e-10@ (0 ,0 ,63), rate = 2.847e+01
EBMultigrid::solve iter = 5, |resid| = 5.315e-06@ (0 ,63,0 ), rate = 3.108e+01
EBMultigrid::solve iter = 7, |resid| = 6.421e-09@ (0 ,63,0 ), rate = 2.871e+01
EBMultigrid::solve iter = 5, |resid| = 5.315e-06@ (0 ,0 ,63), rate = 3.108e+01
EBMultigrid::solve iter = 8, |resid| = 2.269e-10@ (0 ,63,0 ), rate = 2.829e+01
EBMultigrid::solve iter = 1, |resid| = 3.855e-01@ (0 ,0 ,0 ), rate = 8.209e+01
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.164e+01@ (63,4 ,3 )
EBMultigrid:solve: final     |resid| = 9.550e-12@ (8 ,26,3 )
EBCCProjector::project: |phi|max  = 9.922e-01@(0 ,4 ,0 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid:solve: final     |resid| = 1.000e-11@ (2 ,38,21)
EBCCProjector::project: |phi|max  = 9.922e-01@(0 ,1 ,13)
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid:solve: final     |resid| = 9.095e-12@ (10,62,11)
EBCCProjector::project: |phi|max  = 9.922e-01@(0 ,4 ,0 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 6, |resid| = 1.843e-07@ (0 ,63,0 ), rate = 2.884e+01
EBMultigrid::solve iter = 8, |resid| = 2.260e-10@ (0 ,0 ,63), rate = 2.841e+01
EBMultigrid::solve iter = 6, |resid| = 1.843e-07@ (0 ,0 ,63), rate = 2.884e+01
EBMultigrid::solve iter = 2, |resid| = 7.104e-03@ (0 ,0 ,0 ), rate = 5.427e+01
EBLevelCCProjector::project:|gph|max = (3.125e+01@(0 ,0 ,5 ),4.974e-14@(1 ,63,0 ),5.684e-14@(1 ,63,0 )EBLevelCCProjector::project:|gph|max)
EBLevelCCProjector::project:|gph|max = (3.125e+01@(0 ,0 ,13),4.974e-14@(1 ,0 ,63),5.684e-14@(1 ,63,0 )EBLevelCCProjector::project:|gph|max)
EBMultigrid::solve iter = 1, |resid| = 3.855e-01@ (0 ,63,63), rate = 8.209e+01
EBLevelCCProjector::project:|gph|max = (3.125e+01@(0 ,3 ,5 ),6.395e-14@(1 ,0 ,63),5.684e-14@(0 ,62,0 )EBLevelCCProjector::project:|gph|max)
maxvel = 3.125e+01, dx = 1.562e-02, dt = 2.500e-04
We are starting from scratch so we are  initializing  pressure.
Since there is no Stokes flow initialization and the number of pressure iterations == 0, 
we are using the initial projection's pressure gradient as the initial  pressure.
step = 0, time = 0.000e+00 dt = 2.500e-04
advancing velocity and pressure fields 
maxvel = 3.125e+01, dx = 1.562e-02, dt = 2.500e-04
We are starting from scratch so we are  initializing  pressure.
Since there is no Stokes flow initialization and the number of pressure iterations == 0, 
we are using the initial projection's pressure gradient as the initial  pressure.
step = 0, time = 0.000e+00 dt = 2.500e-04
advancing velocity and pressure fields 
maxvel = 3.125e+01, dx = 1.562e-02, dt = 2.500e-04
We are starting from scratch so we are  initializing  pressure.
Since there is no Stokes flow initialization and the number of pressure iterations == 0, 
we are using the initial projection's pressure gradient as the initial  pressure.
step = 0, time = 0.000e+00 dt = 2.500e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 7, |resid| = 6.421e-09@ (0 ,0 ,63), rate = 2.870e+01
EBMultigrid:solve: final     |resid| = 9.550e-12@ (12,27,56)
EBMultigrid::solve iter = 7, |resid| = 6.420e-09@ (0 ,0 ,63), rate = 2.871e+01
EBMultigrid::solve iter = 3, |resid| = 1.804e-04@ (0 ,63,63), rate = 3.937e+01
EBCCProjector::project: |phi|max  = 9.922e-01@(0 ,63,60)
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 2, |resid| = 7.104e-03@ (0 ,0 ,0 ), rate = 5.427e+01
EBLevelCCProjector::project:|gph|max = (3.125e+01@(0 ,63,60),5.684e-14@(0 ,63,1 ),5.684e-14@(1 ,0 ,63)EBLevelCCProjector::project:|gph|max)
maxvel = 3.125e+01, dx = 1.562e-02, dt = 2.500e-04
We are starting from scratch so we are  initializing  pressure.
Since there is no Stokes flow initialization and the number of pressure iterations == 0, 
we are using the initial projection's pressure gradient as the initial  pressure.
step = 0, time = 0.000e+00 dt = 2.500e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 3, |resid| = 1.804e-04@ (0 ,0 ,0 ), rate = 3.937e+01
EBMultigrid::solve iter = 8, |resid| = 2.256e-10@ (0 ,63,0 ), rate = 2.847e+01
EBMultigrid::solve iter = 4, |resid| = 5.107e-06@ (0 ,63,63), rate = 3.533e+01
EBMultigrid::solve iter = 8, |resid| = 2.265e-10@ (0 ,0 ,63), rate = 2.835e+01
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.164e+01@ (63,5 ,14)
mac projecting advection velocity
mac projecting advection velocity
EBMultigrid::solve iter = 4, |resid| = 5.107e-06@ (0 ,0 ,0 ), rate = 3.533e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.164e+01@ (63,12,19)
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.164e+01@ (63,53,58)
mac projecting advection velocity
EBMultigrid::solve iter = 1, |resid| = 3.855e-01@ (0 ,0 ,0 ), rate = 8.209e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.164e+01@ (63,29,2 )
EBMultigrid::solve iter = 5, |resid| = 1.571e-07@ (59,0 ,63), rate = 3.251e+01
EBMultigrid:solve: final     |resid| = 9.550e-12@ (12,50,32)
EBMultigrid:solve: final     |resid| = 1.182e-11@ (6 ,48,30)
EBCCProjector::project: |phi|max  = 9.922e-01@(0 ,12,1 )
Using the ***average of MAC gradients*** for the CC gradient.
EBCCProjector::project: |phi|max  = 9.922e-01@(0 ,2 ,0 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 1, |resid| = 3.855e-01@ (0 ,0 ,0 ), rate = 8.209e+01
EBMultigrid::solve iter = 5, |resid| = 1.571e-07@ (59,63,0 ), rate = 3.251e+01
EBMultigrid::solve iter = 1, |resid| = 3.855e-01@ (0 ,0 ,0 ), rate = 8.209e+01
EBMultigrid::solve iter = 1, |resid| = 3.855e-01@ (0 ,63,63), rate = 8.209e+01
EBMultigrid::solve iter = 2, |resid| = 7.104e-03@ (0 ,0 ,0 ), rate = 5.427e+01
EBMultigrid::solve iter = 6, |resid| = 4.850e-09@ (59,0 ,63), rate = 3.238e+01
EBLevelCCProjector::project:|gph|max = (3.125e+01@(0 ,0 ,2 ),5.684e-14@(0 ,0 ,62),5.684e-14@(0 ,1 ,63)EBLevelCCProjector::project:|gph|max)
EBLevelCCProjector::project:|gph|max = (3.125e+01@(0 ,11,2 ),5.684e-14@(0 ,60,0 ),5.329e-14@(0 ,63,2 )EBLevelCCProjector::project:|gph|max)
EBMultigrid::solve iter = 6, |resid| = 4.850e-09@ (59,0 ,63), rate = 3.238e+01
EBMultigrid::solve iter = 2, |resid| = 7.104e-03@ (0 ,63,63), rate = 5.427e+01
maxvel = 3.125e+01, dx = 1.562e-02, dt = 2.500e-04
We are starting from scratch so we are  initializing  pressure.
maxvel = 3.125e+01, dx = 1.562e-02, dt = 2.500e-04
We are starting from scratch so we are  initializing  pressure.
Since there is no Stokes flow initialization and the number of pressure iterations == 0, 
we are using the initial projection's pressure gradient as the initial  pressure.
Since there is no Stokes flow initialization and the number of pressure iterations == 0, 
we are using the initial projection's pressure gradient as the initial  pressure.
step = 0, time = 0.000e+00 dt = 2.500e-04
advancing velocity and pressure fields 
step = 0, time = 0.000e+00 dt = 2.500e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 2, |resid| = 7.104e-03@ (0 ,0 ,0 ), rate = 5.427e+01
EBMultigrid::solve iter = 2, |resid| = 7.104e-03@ (0 ,0 ,0 ), rate = 5.427e+01
EBMultigrid::solve iter = 3, |resid| = 1.804e-04@ (0 ,0 ,0 ), rate = 3.937e+01
EBMultigrid::solve iter = 7, |resid| = 1.491e-10@ (59,0 ,63), rate = 3.254e+01
EBMultigrid::solve iter = 7, |resid| = 1.491e-10@ (59,63,0 ), rate = 3.254e+01
EBMultigrid::solve iter = 3, |resid| = 1.804e-04@ (0 ,63,63), rate = 3.937e+01
EBMultigrid::solve iter = 3, |resid| = 1.804e-04@ (0 ,63,63), rate = 3.937e+01
EBMultigrid::solve iter = 3, |resid| = 1.804e-04@ (0 ,0 ,0 ), rate = 3.937e+01
EBMultigrid::solve iter = 4, |resid| = 5.107e-06@ (0 ,0 ,0 ), rate = 3.533e+01
EBMultigrid:solve: final     |resid| = 4.565e-12@ (59,0 ,63)
EBMultigrid:solve: final     |resid| = 4.572e-12@ (59,63,0 )
EBMultigrid::solve iter = 4, |resid| = 5.107e-06@ (0 ,0 ,0 ), rate = 3.533e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.606e+00@ (0 ,63,63)
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.606e+00@ (0 ,63,63)
mac projecting advection velocity
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.164e+01@ (63,18,3 )
EBMultigrid::solve iter = 5, |resid| = 1.571e-07@ (59,63,0 ), rate = 3.251e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.164e+01@ (63,60,57)
EBMultigrid::solve iter = 4, |resid| = 5.107e-06@ (0 ,0 ,0 ), rate = 3.533e+01
EBMultigrid::solve iter = 5, |resid| = 1.571e-07@ (59,0 ,63), rate = 3.251e+01
EBMultigrid::solve iter = 4, |resid| = 5.107e-06@ (0 ,0 ,0 ), rate = 3.533e+01
EBMultigrid:solve: final     |resid| = 3.375e-14@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.410e-05@ (1 ,1 ,1 )
EBMultigrid:solve: final     |resid| = 3.375e-14@ (2 ,63,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.410e-05@ (1 ,62,1 )
EBMultigrid::solve iter = 1, |resid| = 3.855e-01@ (0 ,0 ,0 ), rate = 8.209e+01
EBMultigrid::solve iter = 6, |resid| = 4.850e-09@ (59,0 ,63), rate = 3.238e+01
EBMultigrid::solve iter = 1, |resid| = 3.855e-01@ (0 ,0 ,0 ), rate = 8.209e+01
EBMultigrid:solve: final     |resid| = 1.600e-18@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.410e-05@ (1 ,62,1 )
EBMultigrid::solve iter = 5, |resid| = 1.571e-07@ (59,0 ,63), rate = 3.251e+01
EBMultigrid::solve iter = 6, |resid| = 4.850e-09@ (59,63,0 ), rate = 3.238e+01
EBMultigrid::solve iter = 5, |resid| = 1.571e-07@ (59,0 ,63), rate = 3.251e+01
EBMultigrid:solve: final     |resid| = 1.599e-18@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.410e-05@ (1 ,1 ,1 )
EBMultigrid::solve iter = 6, |resid| = 4.850e-09@ (59,0 ,63), rate = 3.238e+01
EBMultigrid::solve iter = 2, |resid| = 7.104e-03@ (0 ,63,63), rate = 5.427e+01
EBMultigrid::solve iter = 7, |resid| = 1.491e-10@ (59,0 ,63), rate = 3.254e+01
EBMultigrid::solve iter = 2, |resid| = 7.104e-03@ (0 ,0 ,0 ), rate = 5.427e+01
EBMultigrid:solve: final     |resid| = 1.600e-18@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (3.093e+01@(0 ,61,61),2.369e-05@(1 ,62,62),2.369e-05@(1 ,62,62)EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 1.032e+03@(0 ,61,61)
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.032e+03@ (0 ,61,61)
EBMultigrid::solve iter = 7, |resid| = 1.491e-10@ (59,0 ,63), rate = 3.254e+01
EBMultigrid:solve: final     |resid| = 1.601e-18@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 6, |resid| = 4.850e-09@ (59,0 ,63), rate = 3.238e+01
EBMultigrid::solve iter = 7, |resid| = 1.491e-10@ (59,0 ,63), rate = 3.254e+01
EBCCProjector::project: |input velo|max = (3.093e+01@(0 ,61,61),2.369e-05@(1 ,62,62),2.369e-05@(1 ,62,62)EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 1.032e+03@(0 ,61,61)
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.032e+03@ (0 ,61,61)
EBMultigrid::solve iter = 3, |resid| = 1.804e-04@ (0 ,0 ,0 ), rate = 3.937e+01
EBMultigrid:solve: final     |resid| = 4.572e-12@ (59,63,0 )
EBMultigrid::solve iter = 3, |resid| = 1.804e-04@ (0 ,63,63), rate = 3.937e+01
EBMultigrid::solve iter = 1, |resid| = 2.150e+01@ (0 ,0 ,0 ), rate = 4.801e+01
EBMultigrid:solve: final     |resid| = 4.572e-12@ (59,0 ,63)
EBMultigrid::solve iter = 7, |resid| = 1.491e-10@ (59,0 ,63), rate = 3.254e+01
EBMultigrid:solve: final     |resid| = 4.565e-12@ (59,0 ,63)
EBMultigrid::solve iter = 1, |resid| = 2.150e+01@ (0 ,63,63), rate = 4.801e+01
calling heat solver for variable 0
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.606e+00@ (0 ,0 ,0 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.606e+00@ (0 ,0 ,0 )
EBMultigrid::solve iter = 4, |resid| = 5.107e-06@ (0 ,0 ,0 ), rate = 3.533e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.606e+00@ (0 ,0 ,0 )
EBMultigrid::solve iter = 4, |resid| = 5.107e-06@ (0 ,0 ,0 ), rate = 3.533e+01
EBMultigrid::solve iter = 2, |resid| = 3.701e-01@ (0 ,0 ,0 ), rate = 5.809e+01
EBMultigrid:solve: final     |resid| = 4.569e-12@ (59,0 ,63)
EBMultigrid::solve iter = 2, |resid| = 3.701e-01@ (0 ,0 ,0 ), rate = 5.809e+01
calling heat solver for variable 0
EBMultigrid:solve: final     |resid| = 3.397e-14@ (2 ,63,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.606e+00@ (0 ,0 ,0 )
EBMultigrid::solve iter = 5, |resid| = 1.571e-07@ (59,0 ,63), rate = 3.251e+01
EBMultigrid:solve: final     |resid| = 3.375e-14@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.410e-05@ (1 ,62,62)
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.410e-05@ (1 ,62,62)
EBMultigrid:solve: final     |resid| = 3.375e-14@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.410e-05@ (1 ,62,62)
EBMultigrid::solve iter = 5, |resid| = 1.571e-07@ (59,63,0 ), rate = 3.251e+01
EBMultigrid::solve iter = 3, |resid| = 8.191e-03@ (0 ,0 ,0 ), rate = 4.518e+01
EBMultigrid:solve: final     |resid| = 1.601e-18@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.410e-05@ (1 ,62,62)
EBMultigrid::solve iter = 6, |resid| = 4.850e-09@ (59,63,0 ), rate = 3.238e+01
EBMultigrid::solve iter = 3, |resid| = 8.191e-03@ (0 ,63,63), rate = 4.518e+01
EBMultigrid:solve: final     |resid| = 1.600e-18@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.410e-05@ (1 ,1 ,1 )
EBMultigrid:solve: final     |resid| = 3.375e-14@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.410e-05@ (1 ,1 ,1 )
EBMultigrid:solve: final     |resid| = 1.601e-18@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.410e-05@ (1 ,1 ,1 )
EBMultigrid::solve iter = 6, |resid| = 4.850e-09@ (59,0 ,63), rate = 3.238e+01
EBMultigrid::solve iter = 4, |resid| = 2.182e-04@ (0 ,0 ,0 ), rate = 3.755e+01
EBMultigrid:solve: final     |resid| = 1.601e-18@ (2 ,63,63)
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 7, |resid| = 1.491e-10@ (59,0 ,63), rate = 3.253e+01
EBCCProjector::project: |input velo|max = (3.093e+01@(0 ,61,61),2.369e-05@(1 ,1 ,1 ),2.369e-05@(1 ,1 ,1 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 1.032e+03@(0 ,61,61)
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.032e+03@ (0 ,61,61)
EBMultigrid::solve iter = 4, |resid| = 2.182e-04@ (0 ,63,63), rate = 3.755e+01
EBMultigrid:solve: final     |resid| = 1.601e-18@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid:solve: final     |resid| = 1.600e-18@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid:solve: final     |resid| = 1.601e-18@ (2 ,63,63)
cc projecting vel + gphi*dt
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.410e-05@ (1 ,62,1 )
EBCCProjector::project: |input velo|max = (3.093e+01@(0 ,2 ,2 ),2.369e-05@(1 ,1 ,1 ),2.369e-05@(1 ,62,62)EBCCProjector::project: |input velo|max)
EBCCProjector::project: |input velo|max = (3.093e+01@(0 ,2 ,2 ),2.369e-05@(1 ,1 ,1 ),2.369e-05@(1 ,1 ,1 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 1.032e+03@(0 ,2 ,2 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.032e+03@ (0 ,2 ,2 )
EBCCProjector::project: |kappa DiVU|max  = 1.032e+03@(0 ,2 ,2 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.032e+03@ (0 ,2 ,2 )
EBMultigrid::solve iter = 7, |resid| = 1.491e-10@ (59,63,0 ), rate = 3.254e+01
EBMultigrid::solve iter = 5, |resid| = 6.413e-06@ (0 ,63,63), rate = 3.402e+01
EBMultigrid::solve iter = 5, |resid| = 6.413e-06@ (0 ,63,63), rate = 3.402e+01
EBMultigrid:solve: final     |resid| = 4.572e-12@ (59,63,0 )
EBMultigrid::solve iter = 1, |resid| = 2.150e+01@ (0 ,63,63), rate = 4.801e+01
EBMultigrid:solve: final     |resid| = 1.601e-18@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (3.093e+01@(0 ,2 ,2 ),2.369e-05@(1 ,62,62),2.369e-05@(1 ,62,62)EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 1.032e+03@(0 ,2 ,2 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.032e+03@ (0 ,2 ,2 )
calling heat solver for variable 0
EBMultigrid::solve iter = 1, |resid| = 2.150e+01@ (0 ,0 ,0 ), rate = 4.801e+01
EBMultigrid::solve iter = 1, |resid| = 2.150e+01@ (0 ,63,63), rate = 4.801e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.606e+00@ (0 ,0 ,0 )
EBMultigrid:solve: final     |resid| = 4.562e-12@ (59,63,0 )
EBMultigrid::solve iter = 6, |resid| = 1.984e-07@ (0 ,0 ,0 ), rate = 3.232e+01
EBMultigrid::solve iter = 6, |resid| = 1.984e-07@ (0 ,0 ,0 ), rate = 3.232e+01
EBMultigrid::solve iter = 2, |resid| = 3.701e-01@ (0 ,63,63), rate = 5.809e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.606e+00@ (0 ,0 ,0 )
EBMultigrid::solve iter = 1, |resid| = 2.150e+01@ (0 ,0 ,0 ), rate = 4.801e+01
EBMultigrid::solve iter = 2, |resid| = 3.701e-01@ (0 ,0 ,0 ), rate = 5.809e+01
EBMultigrid::solve iter = 7, |resid| = 6.325e-09@ (0 ,0 ,0 ), rate = 3.137e+01
EBMultigrid::solve iter = 2, |resid| = 3.701e-01@ (0 ,0 ,0 ), rate = 5.809e+01
EBMultigrid:solve: final     |resid| = 3.375e-14@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.410e-05@ (1 ,62,62)
EBMultigrid::solve iter = 7, |resid| = 6.324e-09@ (0 ,63,63), rate = 3.137e+01
EBMultigrid::solve iter = 2, |resid| = 3.701e-01@ (0 ,0 ,0 ), rate = 5.809e+01
EBMultigrid::solve iter = 3, |resid| = 8.191e-03@ (0 ,0 ,0 ), rate = 4.518e+01
EBMultigrid:solve: final     |resid| = 3.375e-14@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.410e-05@ (1 ,62,1 )
EBMultigrid::solve iter = 3, |resid| = 8.191e-03@ (0 ,63,63), rate = 4.518e+01
EBMultigrid:solve: final     |resid| = 2.054e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 3, |resid| = 8.191e-03@ (0 ,0 ,0 ), rate = 4.518e+01
EBCCProjector::project: |phi|max  = 2.625e-01@(0 ,58,5 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 3, |resid| = 8.191e-03@ (0 ,0 ,0 ), rate = 4.518e+01
EBLevelCCProjector::project:|gph|max = (8.143e+00@(1 ,50,50),8.742e-02@(0 ,63,8 ),8.742e-02@(0 ,55,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid:solve: final     |resid| = 1.601e-18@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.410e-05@ (1 ,1 ,1 )
EBMultigrid:solve: final     |resid| = 2.060e-10@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 2.625e-01@(0 ,5 ,58)
Using the ***average of MAC gradients*** for the CC gradient.
advancing species advection/diffusion
getting reaction rates and evolving species
EBLevelCCProjector::project:|gph|max = (8.143e+00@(1 ,50,50),8.742e-02@(0 ,0 ,55),8.742e-02@(0 ,55,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
maxvel = 3.127e+01, dx = 1.562e-02, dt = 2.498e-04
step = 1, time = 2.500e-04 dt = 2.498e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 4, |resid| = 2.182e-04@ (0 ,0 ,0 ), rate = 3.755e+01
EBMultigrid:solve: final     |resid| = 1.600e-18@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.410e-05@ (1 ,1 ,62)
EBMultigrid::solve iter = 4, |resid| = 2.182e-04@ (0 ,0 ,0 ), rate = 3.755e+01
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid:solve: final     |resid| = 1.600e-18@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
maxvel = 3.127e+01, dx = 1.562e-02, dt = 2.498e-04
step = 1, time = 2.500e-04 dt = 2.498e-04
advancing velocity and pressure fields 
EBCCProjector::project: |input velo|max = (3.093e+01@(0 ,2 ,2 ),2.369e-05@(1 ,1 ,1 ),2.369e-05@(1 ,1 ,1 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 1.032e+03@(0 ,2 ,2 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.032e+03@ (0 ,2 ,2 )
mac projecting advection velocity
EBMultigrid::solve iter = 4, |resid| = 2.182e-04@ (0 ,63,63), rate = 3.755e+01
EBMultigrid::solve iter = 4, |resid| = 2.182e-04@ (0 ,63,63), rate = 3.755e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.853e+02@ (0 ,2 ,61)
EBMultigrid::solve iter = 5, |resid| = 6.413e-06@ (0 ,63,63), rate = 3.402e+01
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.853e+02@ (0 ,2 ,61)
EBMultigrid::solve iter = 5, |resid| = 6.413e-06@ (0 ,0 ,0 ), rate = 3.402e+01
EBMultigrid:solve: final     |resid| = 1.600e-18@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (3.093e+01@(0 ,2 ,2 ),2.369e-05@(1 ,1 ,1 ),2.369e-05@(1 ,1 ,1 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 1.032e+03@(0 ,2 ,2 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.032e+03@ (0 ,2 ,2 )
EBMultigrid::solve iter = 1, |resid| = 2.150e+01@ (0 ,0 ,0 ), rate = 4.801e+01
EBMultigrid::solve iter = 5, |resid| = 6.413e-06@ (0 ,0 ,0 ), rate = 3.402e+01
EBMultigrid::solve iter = 5, |resid| = 6.413e-06@ (0 ,0 ,0 ), rate = 3.402e+01
EBMultigrid::solve iter = 1, |resid| = 1.532e+01@ (0 ,0 ,0 ), rate = 3.168e+01
EBMultigrid::solve iter = 6, |resid| = 1.984e-07@ (0 ,63,63), rate = 3.232e+01
EBMultigrid::solve iter = 1, |resid| = 1.532e+01@ (0 ,0 ,0 ), rate = 3.168e+01
EBMultigrid::solve iter = 6, |resid| = 1.984e-07@ (0 ,0 ,0 ), rate = 3.232e+01
EBMultigrid::solve iter = 1, |resid| = 2.150e+01@ (0 ,0 ,0 ), rate = 4.801e+01
EBMultigrid::solve iter = 6, |resid| = 1.984e-07@ (0 ,63,63), rate = 3.232e+01
EBMultigrid::solve iter = 2, |resid| = 3.701e-01@ (0 ,63,63), rate = 5.809e+01
EBMultigrid::solve iter = 6, |resid| = 1.984e-07@ (0 ,0 ,0 ), rate = 3.232e+01
EBMultigrid::solve iter = 2, |resid| = 2.594e-01@ (0 ,0 ,0 ), rate = 5.906e+01
EBMultigrid::solve iter = 7, |resid| = 6.325e-09@ (0 ,63,63), rate = 3.137e+01
EBMultigrid::solve iter = 7, |resid| = 6.325e-09@ (0 ,0 ,0 ), rate = 3.137e+01
EBMultigrid::solve iter = 2, |resid| = 2.594e-01@ (0 ,0 ,0 ), rate = 5.906e+01
EBMultigrid::solve iter = 7, |resid| = 6.325e-09@ (0 ,0 ,0 ), rate = 3.137e+01
EBMultigrid::solve iter = 2, |resid| = 3.701e-01@ (0 ,0 ,0 ), rate = 5.809e+01
EBMultigrid::solve iter = 3, |resid| = 8.191e-03@ (0 ,0 ,0 ), rate = 4.518e+01
EBMultigrid::solve iter = 7, |resid| = 6.325e-09@ (0 ,63,63), rate = 3.137e+01
EBMultigrid::solve iter = 3, |resid| = 6.153e-03@ (0 ,0 ,0 ), rate = 4.217e+01
EBMultigrid:solve: final     |resid| = 2.057e-10@ (0 ,63,63)
EBCCProjector::project: |phi|max  = 2.625e-01@(0 ,5 ,58)
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid:solve: final     |resid| = 2.058e-10@ (0 ,63,63)
EBCCProjector::project: |phi|max  = 2.625e-01@(0 ,5 ,58)
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (8.143e+00@(1 ,13,13),8.742e-02@(0 ,0 ,55),8.742e-02@(0 ,8 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBLevelCCProjector::project:|gph|max = (8.143e+00@(1 ,13,13),8.742e-02@(0 ,0 ,55),8.742e-02@(0 ,8 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 3, |resid| = 6.153e-03@ (0 ,0 ,0 ), rate = 4.217e+01
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid:solve: final     |resid| = 2.057e-10@ (0 ,0 ,0 )
advancing species advection/diffusion
getting reaction rates and evolving species
EBCCProjector::project: |phi|max  = 2.625e-01@(0 ,5 ,58)
Using the ***average of MAC gradients*** for the CC gradient.
maxvel = 3.127e+01, dx = 1.562e-02, dt = 2.498e-04
step = 1, time = 2.500e-04 dt = 2.498e-04
advancing velocity and pressure fields 
maxvel = 3.127e+01, dx = 1.562e-02, dt = 2.498e-04
step = 1, time = 2.500e-04 dt = 2.498e-04
advancing velocity and pressure fields 
EBLevelCCProjector::project:|gph|max = (8.143e+00@(1 ,13,13),8.742e-02@(0 ,63,8 ),8.742e-02@(0 ,8 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 3, |resid| = 8.191e-03@ (0 ,0 ,0 ), rate = 4.518e+01
EBMultigrid:solve: final     |resid| = 2.058e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 4, |resid| = 1.674e-04@ (0 ,0 ,0 ), rate = 3.675e+01
EBMultigrid::solve iter = 4, |resid| = 2.182e-04@ (0 ,63,63), rate = 3.755e+01
EBCCProjector::project: |phi|max  = 2.625e-01@(0 ,58,5 )
Using the ***average of MAC gradients*** for the CC gradient.
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 3.127e+01, dx = 1.562e-02, dt = 2.498e-04
step = 1, time = 2.500e-04 dt = 2.498e-04
advancing velocity and pressure fields 
EBLevelCCProjector::project:|gph|max = (8.143e+00@(1 ,13,13),8.742e-02@(0 ,0 ,55),8.742e-02@(0 ,55,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 4, |resid| = 1.674e-04@ (0 ,0 ,0 ), rate = 3.675e+01
mac projecting advection velocity
EBMultigrid::solve iter = 5, |resid| = 4.977e-06@ (0 ,0 ,0 ), rate = 3.363e+01
advancing species advection/diffusion
getting reaction rates and evolving species
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.853e+02@ (0 ,2 ,61)
maxvel = 3.127e+01, dx = 1.562e-02, dt = 2.498e-04
step = 1, time = 2.500e-04 dt = 2.498e-04
advancing velocity and pressure fields 
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.853e+02@ (0 ,61,2 )
mac projecting advection velocity
EBMultigrid::solve iter = 4, |resid| = 2.182e-04@ (0 ,0 ,0 ), rate = 3.755e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.853e+02@ (0 ,61,2 )
mac projecting advection velocity
EBMultigrid::solve iter = 5, |resid| = 6.413e-06@ (0 ,0 ,0 ), rate = 3.402e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.853e+02@ (0 ,61,2 )
EBMultigrid::solve iter = 5, |resid| = 4.977e-06@ (0 ,0 ,0 ), rate = 3.363e+01
EBMultigrid::solve iter = 6, |resid| = 1.546e-07@ (0 ,0 ,0 ), rate = 3.220e+01
EBMultigrid::solve iter = 1, |resid| = 1.532e+01@ (0 ,0 ,0 ), rate = 3.168e+01
EBMultigrid::solve iter = 1, |resid| = 1.532e+01@ (0 ,0 ,0 ), rate = 3.168e+01
EBMultigrid::solve iter = 5, |resid| = 6.413e-06@ (0 ,63,63), rate = 3.402e+01
EBMultigrid::solve iter = 1, |resid| = 1.532e+01@ (0 ,0 ,0 ), rate = 3.168e+01
EBMultigrid::solve iter = 6, |resid| = 1.984e-07@ (0 ,0 ,0 ), rate = 3.232e+01
EBMultigrid::solve iter = 6, |resid| = 1.546e-07@ (0 ,0 ,0 ), rate = 3.220e+01
EBMultigrid::solve iter = 1, |resid| = 1.532e+01@ (0 ,0 ,0 ), rate = 3.168e+01
EBMultigrid::solve iter = 7, |resid| = 4.931e-09@ (0 ,0 ,0 ), rate = 3.135e+01
EBMultigrid::solve iter = 2, |resid| = 2.594e-01@ (0 ,0 ,0 ), rate = 5.906e+01
EBMultigrid::solve iter = 2, |resid| = 2.594e-01@ (0 ,0 ,0 ), rate = 5.906e+01
EBMultigrid::solve iter = 6, |resid| = 1.984e-07@ (0 ,0 ,0 ), rate = 3.232e+01
EBMultigrid::solve iter = 2, |resid| = 2.594e-01@ (0 ,0 ,0 ), rate = 5.906e+01
EBMultigrid::solve iter = 7, |resid| = 6.325e-09@ (0 ,0 ,0 ), rate = 3.137e+01
EBMultigrid::solve iter = 7, |resid| = 4.931e-09@ (0 ,0 ,0 ), rate = 3.135e+01
EBMultigrid::solve iter = 2, |resid| = 2.594e-01@ (0 ,0 ,0 ), rate = 5.906e+01
EBMultigrid:solve: final     |resid| = 1.603e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 3, |resid| = 6.153e-03@ (0 ,0 ,0 ), rate = 4.217e+01
EBMultigrid::solve iter = 3, |resid| = 6.153e-03@ (0 ,0 ,0 ), rate = 4.217e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.647e+00@ (1 ,42,42)
EBMultigrid::solve iter = 3, |resid| = 6.153e-03@ (0 ,0 ,0 ), rate = 4.217e+01
EBMultigrid::solve iter = 7, |resid| = 6.324e-09@ (0 ,63,63), rate = 3.137e+01
EBMultigrid::solve iter = 3, |resid| = 6.153e-03@ (0 ,0 ,0 ), rate = 4.217e+01
EBMultigrid:solve: final     |resid| = 2.053e-10@ (0 ,63,63)
EBMultigrid:solve: final     |resid| = 1.599e-10@ (0 ,63,63)
EBCCProjector::project: |phi|max  = 2.625e-01@(0 ,5 ,58)
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (8.143e+00@(1 ,13,13),8.742e-02@(0 ,0 ,55),8.742e-02@(0 ,55,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.647e+00@ (1 ,42,42)
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 3.127e+01, dx = 1.562e-02, dt = 2.498e-04
step = 1, time = 2.500e-04 dt = 2.498e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 4, |resid| = 1.674e-04@ (0 ,0 ,0 ), rate = 3.675e+01
EBMultigrid:solve: final     |resid| = 2.058e-10@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 2.625e-01@(0 ,5 ,58)
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid:solve: final     |resid| = 5.524e-13@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve iter = 4, |resid| = 1.674e-04@ (0 ,0 ,0 ), rate = 3.675e+01
EBLevelCCProjector::project:|gph|max = (8.143e+00@(1 ,13,13),8.742e-02@(0 ,0 ,55),8.742e-02@(0 ,55,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 4, |resid| = 1.674e-04@ (0 ,0 ,0 ), rate = 3.675e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.570e-02@ (0 ,63,7 )
EBMultigrid::solve iter = 4, |resid| = 1.674e-04@ (0 ,0 ,0 ), rate = 3.675e+01
EBMultigrid:solve: final     |resid| = 5.524e-13@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.570e-02@ (0 ,63,7 )
advancing species advection/diffusion
getting reaction rates and evolving species
mac projecting advection velocity
maxvel = 3.127e+01, dx = 1.562e-02, dt = 2.498e-04
step = 1, time = 2.500e-04 dt = 2.498e-04
advancing velocity and pressure fields 
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.853e+02@ (0 ,2 ,61)
EBMultigrid::solve iter = 5, |resid| = 4.977e-06@ (0 ,0 ,0 ), rate = 3.363e+01
EBMultigrid::solve iter = 5, |resid| = 4.977e-06@ (0 ,0 ,0 ), rate = 3.363e+01
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.853e+02@ (0 ,61,2 )
EBMultigrid:solve: final     |resid| = 5.815e-15@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid:solve: final     |resid| = 5.815e-15@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.570e-02@ (0 ,7 ,0 )
EBMultigrid::solve iter = 5, |resid| = 4.977e-06@ (0 ,0 ,0 ), rate = 3.363e+01
EBMultigrid::solve iter = 5, |resid| = 4.977e-06@ (0 ,0 ,0 ), rate = 3.363e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.570e-02@ (0 ,7 ,0 )
EBMultigrid::solve iter = 6, |resid| = 1.546e-07@ (0 ,0 ,0 ), rate = 3.220e+01
EBMultigrid::solve iter = 1, |resid| = 1.532e+01@ (0 ,0 ,0 ), rate = 3.168e+01
EBMultigrid::solve iter = 6, |resid| = 1.546e-07@ (0 ,0 ,0 ), rate = 3.220e+01
EBMultigrid::solve iter = 1, |resid| = 1.532e+01@ (0 ,0 ,0 ), rate = 3.168e+01
EBMultigrid:solve: final     |resid| = 5.822e-15@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid:solve: final     |resid| = 5.815e-15@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (3.079e+01@(0 ,2 ,2 ),8.236e-02@(0 ,63,7 ),8.236e-02@(0 ,7 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 6, |resid| = 1.546e-07@ (0 ,0 ,0 ), rate = 3.220e+01
EBMultigrid::solve iter = 6, |resid| = 1.546e-07@ (0 ,0 ,0 ), rate = 3.220e+01
EBMultigrid::solve iter = 7, |resid| = 4.931e-09@ (0 ,63,63), rate = 3.135e+01
EBCCProjector::project: |input velo|max = (3.079e+01@(0 ,2 ,2 ),8.236e-02@(0 ,63,7 ),8.236e-02@(0 ,7 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 1.024e+03@(1 ,5 ,5 )
EBCCProjector::project: |kappa DiVU|max  = 1.024e+03@(1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.024e+03@ (1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.024e+03@ (1 ,5 ,5 )
EBMultigrid::solve iter = 2, |resid| = 2.594e-01@ (0 ,0 ,0 ), rate = 5.906e+01
EBMultigrid::solve iter = 7, |resid| = 4.931e-09@ (0 ,0 ,0 ), rate = 3.135e+01
EBMultigrid::solve iter = 2, |resid| = 2.594e-01@ (0 ,0 ,0 ), rate = 5.906e+01
EBMultigrid::solve iter = 7, |resid| = 4.931e-09@ (0 ,0 ,0 ), rate = 3.135e+01
EBMultigrid::solve iter = 7, |resid| = 4.931e-09@ (0 ,0 ,0 ), rate = 3.135e+01
EBMultigrid:solve: final     |resid| = 1.604e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 1, |resid| = 1.360e+01@ (0 ,0 ,0 ), rate = 7.533e+01
EBMultigrid::solve iter = 1, |resid| = 1.360e+01@ (0 ,0 ,0 ), rate = 7.533e+01
EBMultigrid::solve iter = 3, |resid| = 6.153e-03@ (0 ,0 ,0 ), rate = 4.217e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.647e+00@ (1 ,42,42)
EBMultigrid:solve: final     |resid| = 1.602e-10@ (0 ,63,63)
EBMultigrid::solve iter = 3, |resid| = 6.153e-03@ (0 ,0 ,0 ), rate = 4.217e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.647e+00@ (1 ,42,42)
EBMultigrid::solve iter = 2, |resid| = 2.355e-01@ (0 ,0 ,0 ), rate = 5.775e+01
EBMultigrid:solve: final     |resid| = 1.598e-10@ (0 ,63,63)
EBMultigrid:solve: final     |resid| = 1.596e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 2, |resid| = 2.355e-01@ (0 ,0 ,0 ), rate = 5.775e+01
EBMultigrid::solve iter = 4, |resid| = 1.674e-04@ (0 ,0 ,0 ), rate = 3.675e+01
EBMultigrid:solve: final     |resid| = 5.524e-13@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.570e-02@ (0 ,63,7 )
calling heat solver for variable 0
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.647e+00@ (1 ,42,42)
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.647e+00@ (1 ,42,42)
EBMultigrid::solve iter = 4, |resid| = 1.674e-04@ (0 ,0 ,0 ), rate = 3.675e+01
EBMultigrid:solve: final     |resid| = 5.524e-13@ (2 ,63,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.570e-02@ (0 ,63,7 )
EBMultigrid::solve iter = 3, |resid| = 4.989e-03@ (0 ,63,63), rate = 4.720e+01
EBMultigrid::solve iter = 3, |resid| = 4.989e-03@ (0 ,63,63), rate = 4.720e+01
EBMultigrid::solve iter = 5, |resid| = 4.977e-06@ (0 ,0 ,0 ), rate = 3.363e+01
EBMultigrid:solve: final     |resid| = 5.815e-15@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.570e-02@ (0 ,7 ,0 )
EBMultigrid:solve: final     |resid| = 5.527e-13@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid:solve: final     |resid| = 5.524e-13@ (2 ,63,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.570e-02@ (0 ,63,7 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.570e-02@ (0 ,63,7 )
EBMultigrid::solve iter = 4, |resid| = 1.309e-04@ (0 ,63,63), rate = 3.812e+01
EBMultigrid:solve: final     |resid| = 5.822e-15@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid::solve iter = 5, |resid| = 4.977e-06@ (0 ,0 ,0 ), rate = 3.363e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.570e-02@ (0 ,7 ,0 )
EBMultigrid::solve iter = 4, |resid| = 1.309e-04@ (0 ,63,63), rate = 3.812e+01
EBMultigrid::solve iter = 6, |resid| = 1.546e-07@ (0 ,0 ,0 ), rate = 3.220e+01
EBMultigrid:solve: final     |resid| = 5.815e-15@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid:solve: final     |resid| = 5.822e-15@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid:solve: final     |resid| = 5.822e-15@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.570e-02@ (0 ,7 ,0 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.570e-02@ (0 ,7 ,0 )
EBCCProjector::project: |input velo|max = (3.079e+01@(0 ,2 ,2 ),8.236e-02@(0 ,63,7 ),8.236e-02@(0 ,7 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 5, |resid| = 3.818e-06@ (0 ,0 ,0 ), rate = 3.427e+01
EBCCProjector::project: |kappa DiVU|max  = 1.024e+03@(1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.024e+03@ (1 ,5 ,5 )
EBMultigrid:solve: final     |resid| = 5.815e-15@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 6, |resid| = 1.546e-07@ (0 ,0 ,0 ), rate = 3.220e+01
EBCCProjector::project: |input velo|max = (3.079e+01@(0 ,2 ,2 ),8.236e-02@(0 ,63,7 ),8.236e-02@(0 ,7 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 1.024e+03@(1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.024e+03@ (1 ,5 ,5 )
EBMultigrid::solve iter = 5, |resid| = 3.818e-06@ (0 ,63,63), rate = 3.427e+01
EBMultigrid::solve iter = 7, |resid| = 4.931e-09@ (0 ,0 ,0 ), rate = 3.135e+01
EBMultigrid:solve: final     |resid| = 5.822e-15@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid:solve: final     |resid| = 5.815e-15@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 6, |resid| = 1.180e-07@ (0 ,63,63), rate = 3.237e+01
EBCCProjector::project: |input velo|max = (3.079e+01@(0 ,2 ,2 ),8.236e-02@(0 ,63,7 ),8.236e-02@(0 ,7 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |input velo|max = (3.079e+01@(0 ,2 ,2 ),8.236e-02@(0 ,63,7 ),8.236e-02@(0 ,7 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 1, |resid| = 1.360e+01@ (0 ,0 ,0 ), rate = 7.533e+01
EBMultigrid::solve iter = 7, |resid| = 4.931e-09@ (0 ,0 ,0 ), rate = 3.135e+01
EBCCProjector::project: |kappa DiVU|max  = 1.024e+03@(1 ,5 ,5 )
EBCCProjector::project: |kappa DiVU|max  = 1.024e+03@(1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.024e+03@ (1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.024e+03@ (1 ,5 ,5 )
EBMultigrid::solve iter = 1, |resid| = 1.360e+01@ (0 ,0 ,0 ), rate = 7.533e+01
EBMultigrid::solve iter = 6, |resid| = 1.180e-07@ (0 ,63,63), rate = 3.237e+01
EBMultigrid:solve: final     |resid| = 1.601e-10@ (0 ,0 ,0 )
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.647e+00@ (1 ,42,42)
EBMultigrid:solve: final     |resid| = 1.604e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 7, |resid| = 3.765e-09@ (0 ,63,63), rate = 3.133e+01
EBMultigrid::solve iter = 2, |resid| = 2.355e-01@ (0 ,0 ,0 ), rate = 5.775e+01
EBMultigrid::solve iter = 1, |resid| = 1.360e+01@ (0 ,0 ,0 ), rate = 7.533e+01
EBMultigrid::solve iter = 1, |resid| = 1.360e+01@ (0 ,0 ,0 ), rate = 7.533e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.647e+00@ (1 ,42,42)
EBMultigrid::solve iter = 2, |resid| = 2.355e-01@ (0 ,0 ,0 ), rate = 5.775e+01
EBMultigrid::solve iter = 7, |resid| = 3.765e-09@ (0 ,0 ,0 ), rate = 3.133e+01
EBMultigrid:solve: final     |resid| = 5.524e-13@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.570e-02@ (0 ,63,7 )
EBMultigrid:solve: final     |resid| = 1.229e-10@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 1.372e-01@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 3, |resid| = 4.989e-03@ (0 ,63,63), rate = 4.720e+01
EBLevelCCProjector::project:|gph|max = (4.297e+00@(1 ,6 ,6 ),1.172e-01@(1 ,63,6 ),1.172e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 2, |resid| = 2.355e-01@ (0 ,0 ,0 ), rate = 5.775e+01
EBMultigrid::solve iter = 2, |resid| = 2.355e-01@ (0 ,0 ,0 ), rate = 5.775e+01
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid:solve: final     |resid| = 5.524e-13@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.570e-02@ (0 ,63,7 )
maxvel = 2.907e+01, dx = 1.562e-02, dt = 2.687e-04
step = 2, time = 4.998e-04 dt = 2.687e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 3, |resid| = 4.989e-03@ (0 ,63,63), rate = 4.720e+01
EBMultigrid::solve iter = 4, |resid| = 1.309e-04@ (0 ,63,63), rate = 3.812e+01
EBMultigrid:solve: final     |resid| = 1.228e-10@ (0 ,63,63)
EBCCProjector::project: |phi|max  = 1.372e-01@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (4.297e+00@(1 ,6 ,6 ),1.172e-01@(1 ,63,6 ),1.172e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid:solve: final     |resid| = 5.815e-15@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.570e-02@ (0 ,7 ,0 )
mac projecting advection velocity
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.179e+02@ (2 ,6 ,6 )
maxvel = 2.907e+01, dx = 1.562e-02, dt = 2.687e-04
step = 2, time = 4.998e-04 dt = 2.687e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 3, |resid| = 4.989e-03@ (0 ,63,63), rate = 4.720e+01
EBMultigrid::solve iter = 3, |resid| = 4.989e-03@ (0 ,63,63), rate = 4.720e+01
EBMultigrid::solve iter = 5, |resid| = 3.818e-06@ (0 ,63,63), rate = 3.427e+01
EBMultigrid:solve: final     |resid| = 5.822e-15@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.570e-02@ (0 ,7 ,0 )
EBMultigrid::solve iter = 4, |resid| = 1.309e-04@ (0 ,63,63), rate = 3.812e+01
mac projecting advection velocity
EBMultigrid:solve: final     |resid| = 5.822e-15@ (2 ,63,63)
cc projecting vel + gphi*dt
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.179e+02@ (2 ,6 ,6 )
EBCCProjector::project: |input velo|max = (3.079e+01@(0 ,2 ,2 ),8.236e-02@(0 ,63,7 ),8.236e-02@(0 ,7 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 1.024e+03@(1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.024e+03@ (1 ,5 ,5 )
EBMultigrid::solve iter = 1, |resid| = 2.138e+01@ (0 ,0 ,0 ), rate = 3.825e+01
EBMultigrid::solve iter = 4, |resid| = 1.309e-04@ (0 ,63,63), rate = 3.812e+01
EBMultigrid::solve iter = 4, |resid| = 1.309e-04@ (0 ,63,63), rate = 3.812e+01
EBMultigrid::solve iter = 6, |resid| = 1.180e-07@ (0 ,0 ,0 ), rate = 3.237e+01
EBMultigrid:solve: final     |resid| = 5.815e-15@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (3.079e+01@(0 ,2 ,2 ),8.236e-02@(0 ,63,7 ),8.236e-02@(0 ,7 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 1.024e+03@(1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.024e+03@ (1 ,5 ,5 )
EBMultigrid::solve iter = 5, |resid| = 3.818e-06@ (0 ,63,63), rate = 3.427e+01
EBMultigrid::solve iter = 1, |resid| = 2.138e+01@ (0 ,0 ,0 ), rate = 3.825e+01
EBMultigrid::solve iter = 1, |resid| = 1.360e+01@ (0 ,0 ,0 ), rate = 7.533e+01
EBMultigrid::solve iter = 2, |resid| = 3.498e-01@ (0 ,0 ,0 ), rate = 6.113e+01
EBMultigrid::solve iter = 5, |resid| = 3.818e-06@ (0 ,63,63), rate = 3.427e+01
EBMultigrid::solve iter = 5, |resid| = 3.818e-06@ (0 ,63,63), rate = 3.427e+01
EBMultigrid::solve iter = 7, |resid| = 3.765e-09@ (0 ,0 ,0 ), rate = 3.133e+01
EBMultigrid::solve iter = 3, |resid| = 8.126e-03@ (0 ,0 ,0 ), rate = 4.305e+01
EBMultigrid::solve iter = 1, |resid| = 1.360e+01@ (0 ,0 ,0 ), rate = 7.533e+01
EBMultigrid::solve iter = 6, |resid| = 1.180e-07@ (0 ,0 ,0 ), rate = 3.237e+01
EBMultigrid::solve iter = 2, |resid| = 3.498e-01@ (0 ,0 ,0 ), rate = 6.113e+01
EBMultigrid::solve iter = 2, |resid| = 2.355e-01@ (0 ,0 ,0 ), rate = 5.775e+01
EBMultigrid::solve iter = 6, |resid| = 1.180e-07@ (0 ,0 ,0 ), rate = 3.237e+01
EBMultigrid::solve iter = 6, |resid| = 1.180e-07@ (0 ,63,63), rate = 3.237e+01
EBMultigrid:solve: final     |resid| = 1.228e-10@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 1.372e-01@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 4, |resid| = 2.189e-04@ (0 ,0 ,0 ), rate = 3.712e+01
EBLevelCCProjector::project:|gph|max = (4.297e+00@(1 ,6 ,6 ),1.172e-01@(1 ,63,6 ),1.172e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 2, |resid| = 2.355e-01@ (0 ,0 ,0 ), rate = 5.775e+01
EBMultigrid::solve iter = 7, |resid| = 3.765e-09@ (0 ,63,63), rate = 3.133e+01
EBMultigrid::solve iter = 3, |resid| = 8.126e-03@ (0 ,0 ,0 ), rate = 4.305e+01
EBMultigrid::solve iter = 3, |resid| = 4.989e-03@ (0 ,63,63), rate = 4.720e+01
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.907e+01, dx = 1.562e-02, dt = 2.687e-04
step = 2, time = 4.998e-04 dt = 2.687e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 7, |resid| = 3.765e-09@ (0 ,63,63), rate = 3.133e+01
EBMultigrid::solve iter = 7, |resid| = 3.765e-09@ (0 ,63,63), rate = 3.133e+01
EBMultigrid::solve iter = 5, |resid| = 6.478e-06@ (0 ,0 ,0 ), rate = 3.379e+01
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.179e+02@ (2 ,6 ,6 )
EBMultigrid::solve iter = 3, |resid| = 4.989e-03@ (0 ,63,63), rate = 4.720e+01
EBMultigrid:solve: final     |resid| = 1.227e-10@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 1.372e-01@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 4, |resid| = 2.189e-04@ (0 ,0 ,0 ), rate = 3.712e+01
EBMultigrid::solve iter = 4, |resid| = 1.309e-04@ (0 ,63,63), rate = 3.812e+01
EBLevelCCProjector::project:|gph|max = (4.297e+00@(1 ,6 ,6 ),1.172e-01@(1 ,63,6 ),1.172e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 4, |resid| = 1.309e-04@ (0 ,63,63), rate = 3.812e+01
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.907e+01, dx = 1.562e-02, dt = 2.687e-04
step = 2, time = 4.998e-04 dt = 2.687e-04
advancing velocity and pressure fields 
EBMultigrid:solve: final     |resid| = 1.229e-10@ (0 ,63,63)
EBMultigrid:solve: final     |resid| = 1.229e-10@ (0 ,63,63)
EBMultigrid::solve iter = 6, |resid| = 2.006e-07@ (0 ,0 ,0 ), rate = 3.229e+01
EBCCProjector::project: |phi|max  = 1.372e-01@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBCCProjector::project: |phi|max  = 1.372e-01@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 1, |resid| = 2.138e+01@ (0 ,0 ,0 ), rate = 3.825e+01
EBLevelCCProjector::project:|gph|max = (4.297e+00@(1 ,6 ,6 ),1.172e-01@(1 ,63,6 ),1.172e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBLevelCCProjector::project:|gph|max = (4.297e+00@(1 ,6 ,6 ),1.172e-01@(1 ,63,6 ),1.172e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
mac projecting advection velocity
EBMultigrid::solve iter = 5, |resid| = 6.478e-06@ (0 ,0 ,0 ), rate = 3.379e+01
EBMultigrid::solve iter = 5, |resid| = 3.818e-06@ (0 ,63,63), rate = 3.427e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.179e+02@ (2 ,6 ,6 )
advancing species advection/diffusion
getting reaction rates and evolving species
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid::solve iter = 5, |resid| = 3.818e-06@ (0 ,63,63), rate = 3.427e+01
maxvel = 2.907e+01, dx = 1.562e-02, dt = 2.687e-04
step = 2, time = 4.998e-04 dt = 2.687e-04
advancing velocity and pressure fields 
maxvel = 2.907e+01, dx = 1.562e-02, dt = 2.687e-04
step = 2, time = 4.998e-04 dt = 2.687e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 7, |resid| = 6.387e-09@ (0 ,0 ,0 ), rate = 3.141e+01
EBMultigrid::solve iter = 2, |resid| = 3.498e-01@ (0 ,0 ,0 ), rate = 6.113e+01
mac projecting advection velocity
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.179e+02@ (2 ,6 ,6 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.179e+02@ (2 ,6 ,6 )
EBMultigrid:solve: final     |resid| = 2.068e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 3, |resid| = 8.126e-03@ (0 ,0 ,0 ), rate = 4.305e+01
EBMultigrid::solve iter = 6, |resid| = 2.006e-07@ (0 ,0 ,0 ), rate = 3.229e+01
EBMultigrid::solve iter = 6, |resid| = 1.180e-07@ (0 ,0 ,0 ), rate = 3.237e+01
EBMultigrid::solve iter = 1, |resid| = 2.138e+01@ (0 ,0 ,0 ), rate = 3.825e+01
EBMultigrid::solve iter = 6, |resid| = 1.180e-07@ (0 ,0 ,0 ), rate = 3.237e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.020e+00@ (1 ,7 ,7 )
EBMultigrid::solve iter = 1, |resid| = 2.138e+01@ (0 ,0 ,0 ), rate = 3.825e+01
EBMultigrid::solve iter = 1, |resid| = 2.138e+01@ (0 ,0 ,0 ), rate = 3.825e+01
EBMultigrid::solve iter = 4, |resid| = 2.189e-04@ (0 ,0 ,0 ), rate = 3.712e+01
EBMultigrid::solve iter = 7, |resid| = 6.386e-09@ (0 ,0 ,0 ), rate = 3.142e+01
EBMultigrid::solve iter = 7, |resid| = 3.765e-09@ (0 ,63,63), rate = 3.133e+01
EBMultigrid::solve iter = 2, |resid| = 3.498e-01@ (0 ,0 ,0 ), rate = 6.113e+01
EBMultigrid::solve iter = 7, |resid| = 3.765e-09@ (0 ,63,63), rate = 3.133e+01
EBMultigrid:solve: final     |resid| = 3.610e-13@ (2 ,63,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.175e-01@ (1 ,0 ,6 )
EBMultigrid::solve iter = 2, |resid| = 3.498e-01@ (0 ,0 ,0 ), rate = 6.113e+01
EBMultigrid::solve iter = 2, |resid| = 3.498e-01@ (0 ,0 ,0 ), rate = 6.113e+01
EBMultigrid::solve iter = 5, |resid| = 6.478e-06@ (0 ,0 ,0 ), rate = 3.379e+01
EBMultigrid:solve: final     |resid| = 1.351e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.175e-01@ (1 ,6 ,0 )
EBMultigrid:solve: final     |resid| = 2.066e-10@ (0 ,0 ,0 )
EBMultigrid:solve: final     |resid| = 1.227e-10@ (0 ,63,63)
EBMultigrid:solve: final     |resid| = 1.227e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 3, |resid| = 8.126e-03@ (0 ,0 ,0 ), rate = 4.305e+01
EBCCProjector::project: |phi|max  = 1.372e-01@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBCCProjector::project: |phi|max  = 1.372e-01@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (4.297e+00@(1 ,6 ,6 ),1.172e-01@(1 ,63,6 ),1.172e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBLevelCCProjector::project:|gph|max = (4.297e+00@(1 ,6 ,6 ),1.172e-01@(1 ,63,6 ),1.172e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.020e+00@ (1 ,7 ,7 )
EBMultigrid::solve iter = 4, |resid| = 2.189e-04@ (0 ,0 ,0 ), rate = 3.712e+01
advancing species advection/diffusion
getting reaction rates and evolving species
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.907e+01, dx = 1.562e-02, dt = 2.687e-04
step = 2, time = 4.998e-04 dt = 2.687e-04
advancing velocity and pressure fields 
maxvel = 2.907e+01, dx = 1.562e-02, dt = 2.687e-04
step = 2, time = 4.998e-04 dt = 2.687e-04
advancing velocity and pressure fields 
EBMultigrid:solve: final     |resid| = 3.610e-13@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.175e-01@ (1 ,0 ,6 )
EBMultigrid::solve iter = 3, |resid| = 8.126e-03@ (0 ,0 ,0 ), rate = 4.305e+01
EBMultigrid::solve iter = 3, |resid| = 8.126e-03@ (0 ,0 ,0 ), rate = 4.305e+01
EBMultigrid::solve iter = 5, |resid| = 6.478e-06@ (0 ,0 ,0 ), rate = 3.379e+01
EBMultigrid::solve iter = 6, |resid| = 2.006e-07@ (0 ,0 ,0 ), rate = 3.229e+01
EBMultigrid:solve: final     |resid| = 1.350e-14@ (2 ,63,63)
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.864e+01@(0 ,1 ,1 ),1.616e-01@(1 ,0 ,6 ),1.616e-01@(1 ,6 ,0 )EBCCProjector::project: |input velo|max)
mac projecting advection velocity
EBCCProjector::project: |kappa DiVU|max  = 8.995e+02@(1 ,5 ,5 )
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.995e+02@ (1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.179e+02@ (2 ,6 ,6 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.179e+02@ (2 ,6 ,6 )
EBMultigrid:solve: final     |resid| = 1.350e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.175e-01@ (1 ,6 ,0 )
EBMultigrid::solve iter = 6, |resid| = 2.006e-07@ (0 ,0 ,0 ), rate = 3.229e+01
EBMultigrid::solve iter = 4, |resid| = 2.189e-04@ (0 ,0 ,0 ), rate = 3.712e+01
EBMultigrid::solve iter = 4, |resid| = 2.189e-04@ (0 ,0 ,0 ), rate = 3.712e+01
EBMultigrid::solve iter = 7, |resid| = 6.386e-09@ (0 ,0 ,0 ), rate = 3.142e+01
EBMultigrid::solve iter = 1, |resid| = 9.264e+00@ (0 ,0 ,0 ), rate = 9.709e+01
EBMultigrid::solve iter = 1, |resid| = 2.138e+01@ (0 ,0 ,0 ), rate = 3.825e+01
EBMultigrid::solve iter = 1, |resid| = 2.138e+01@ (0 ,0 ,0 ), rate = 3.825e+01
EBMultigrid:solve: final     |resid| = 1.350e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.864e+01@(0 ,1 ,1 ),1.616e-01@(1 ,0 ,6 ),1.616e-01@(1 ,6 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 7, |resid| = 6.386e-09@ (0 ,0 ,0 ), rate = 3.142e+01
EBCCProjector::project: |kappa DiVU|max  = 8.995e+02@(1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.995e+02@ (1 ,5 ,5 )
EBMultigrid::solve iter = 5, |resid| = 6.478e-06@ (0 ,0 ,0 ), rate = 3.379e+01
EBMultigrid::solve iter = 5, |resid| = 6.478e-06@ (0 ,0 ,0 ), rate = 3.379e+01
EBMultigrid:solve: final     |resid| = 2.068e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 2, |resid| = 1.666e-01@ (0 ,0 ,0 ), rate = 5.562e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.020e+00@ (1 ,7 ,7 )
EBMultigrid::solve iter = 2, |resid| = 3.498e-01@ (0 ,0 ,0 ), rate = 6.113e+01
EBMultigrid::solve iter = 2, |resid| = 3.498e-01@ (0 ,0 ,0 ), rate = 6.113e+01
EBMultigrid:solve: final     |resid| = 2.069e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 1, |resid| = 9.264e+00@ (0 ,0 ,0 ), rate = 9.709e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.020e+00@ (1 ,7 ,7 )
EBMultigrid::solve iter = 6, |resid| = 2.006e-07@ (0 ,0 ,0 ), rate = 3.229e+01
EBMultigrid::solve iter = 6, |resid| = 2.006e-07@ (0 ,0 ,0 ), rate = 3.229e+01
EBMultigrid::solve iter = 3, |resid| = 3.504e-03@ (0 ,63,63), rate = 4.753e+01
EBMultigrid:solve: final     |resid| = 3.610e-13@ (2 ,63,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.175e-01@ (1 ,0 ,6 )
EBMultigrid::solve iter = 3, |resid| = 8.126e-03@ (0 ,0 ,0 ), rate = 4.305e+01
EBMultigrid::solve iter = 3, |resid| = 8.126e-03@ (0 ,0 ,0 ), rate = 4.305e+01
EBMultigrid::solve iter = 2, |resid| = 1.666e-01@ (0 ,0 ,0 ), rate = 5.562e+01
EBMultigrid:solve: final     |resid| = 3.610e-13@ (2 ,63,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.175e-01@ (1 ,0 ,6 )
EBMultigrid::solve iter = 7, |resid| = 6.387e-09@ (0 ,0 ,0 ), rate = 3.141e+01
EBMultigrid::solve iter = 7, |resid| = 6.386e-09@ (0 ,0 ,0 ), rate = 3.142e+01
EBMultigrid::solve iter = 4, |resid| = 9.194e-05@ (0 ,63,63), rate = 3.811e+01
EBMultigrid:solve: final     |resid| = 1.350e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.175e-01@ (1 ,6 ,0 )
EBMultigrid::solve iter = 4, |resid| = 2.189e-04@ (0 ,0 ,0 ), rate = 3.712e+01
EBMultigrid::solve iter = 4, |resid| = 2.189e-04@ (0 ,0 ,0 ), rate = 3.712e+01
EBMultigrid::solve iter = 3, |resid| = 3.504e-03@ (0 ,63,63), rate = 4.753e+01
EBMultigrid:solve: final     |resid| = 1.351e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.175e-01@ (1 ,6 ,0 )
EBMultigrid:solve: final     |resid| = 2.067e-10@ (0 ,63,63)
EBMultigrid:solve: final     |resid| = 2.069e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 5, |resid| = 2.681e-06@ (0 ,63,63), rate = 3.429e+01
EBMultigrid:solve: final     |resid| = 1.350e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
calling heat solver for variable 0
EBCCProjector::project: |input velo|max = (2.864e+01@(0 ,1 ,1 ),1.616e-01@(1 ,0 ,6 ),1.616e-01@(1 ,6 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.020e+00@ (1 ,7 ,7 )
calling heat solver for variable 0
EBCCProjector::project: |kappa DiVU|max  = 8.995e+02@(1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.020e+00@ (1 ,7 ,7 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.995e+02@ (1 ,5 ,5 )
EBMultigrid::solve iter = 5, |resid| = 6.478e-06@ (0 ,0 ,0 ), rate = 3.379e+01
EBMultigrid::solve iter = 5, |resid| = 6.478e-06@ (0 ,0 ,0 ), rate = 3.379e+01
EBMultigrid::solve iter = 4, |resid| = 9.194e-05@ (0 ,63,63), rate = 3.811e+01
EBMultigrid:solve: final     |resid| = 1.350e-14@ (2 ,63,63)
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 6, |resid| = 8.285e-08@ (0 ,0 ,0 ), rate = 3.236e+01
EBCCProjector::project: |input velo|max = (2.864e+01@(0 ,1 ,1 ),1.616e-01@(1 ,0 ,6 ),1.616e-01@(1 ,6 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 8.995e+02@(1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.995e+02@ (1 ,5 ,5 )
EBMultigrid:solve: final     |resid| = 3.610e-13@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.175e-01@ (1 ,0 ,6 )
EBMultigrid:solve: final     |resid| = 3.610e-13@ (2 ,63,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.175e-01@ (1 ,0 ,6 )
EBMultigrid::solve iter = 6, |resid| = 2.006e-07@ (0 ,0 ,0 ), rate = 3.229e+01
EBMultigrid::solve iter = 1, |resid| = 9.264e+00@ (0 ,0 ,0 ), rate = 9.709e+01
EBMultigrid::solve iter = 7, |resid| = 2.646e-09@ (0 ,63,63), rate = 3.131e+01
EBMultigrid::solve iter = 6, |resid| = 2.006e-07@ (0 ,0 ,0 ), rate = 3.229e+01
EBMultigrid::solve iter = 5, |resid| = 2.681e-06@ (0 ,63,63), rate = 3.429e+01
EBMultigrid::solve iter = 1, |resid| = 9.264e+00@ (0 ,0 ,0 ), rate = 9.709e+01
EBMultigrid::solve iter = 7, |resid| = 6.386e-09@ (0 ,0 ,0 ), rate = 3.142e+01
EBMultigrid:solve: final     |resid| = 1.350e-14@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid:solve: final     |resid| = 1.350e-14@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.175e-01@ (1 ,6 ,0 )
EBMultigrid::solve iter = 7, |resid| = 6.386e-09@ (0 ,0 ,0 ), rate = 3.141e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.175e-01@ (1 ,6 ,0 )
EBMultigrid::solve iter = 2, |resid| = 1.666e-01@ (0 ,0 ,0 ), rate = 5.562e+01
EBMultigrid:solve: final     |resid| = 8.652e-11@ (0 ,63,63)
EBMultigrid::solve iter = 6, |resid| = 8.285e-08@ (0 ,0 ,0 ), rate = 3.236e+01
EBCCProjector::project: |phi|max  = 9.013e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (2.349e+00@(1 ,4 ,4 ),1.358e-01@(1 ,63,6 ),1.358e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 2, |resid| = 1.666e-01@ (0 ,0 ,0 ), rate = 5.562e+01
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.689e+01, dx = 1.562e-02, dt = 2.906e-04
step = 3, time = 7.685e-04 dt = 2.906e-04
advancing velocity and pressure fields 
EBMultigrid:solve: final     |resid| = 2.069e-10@ (0 ,0 ,0 )
mac projecting advection velocity
EBMultigrid:solve: final     |resid| = 1.350e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid:solve: final     |resid| = 2.069e-10@ (0 ,63,63)
EBMultigrid:solve: final     |resid| = 1.350e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.199e+02@ (0 ,4 ,4 )
EBMultigrid::solve iter = 3, |resid| = 3.504e-03@ (0 ,63,63), rate = 4.753e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.020e+00@ (1 ,7 ,7 )
EBMultigrid::solve iter = 7, |resid| = 2.646e-09@ (0 ,63,63), rate = 3.131e+01
EBCCProjector::project: |input velo|max = (2.864e+01@(0 ,1 ,1 ),1.616e-01@(1 ,0 ,6 ),1.616e-01@(1 ,6 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |input velo|max = (2.864e+01@(0 ,1 ,1 ),1.616e-01@(1 ,0 ,6 ),1.616e-01@(1 ,6 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 3, |resid| = 3.504e-03@ (0 ,63,63), rate = 4.753e+01
EBCCProjector::project: |kappa DiVU|max  = 8.995e+02@(1 ,5 ,5 )
EBCCProjector::project: |kappa DiVU|max  = 8.995e+02@(1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.995e+02@ (1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.995e+02@ (1 ,5 ,5 )
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.020e+00@ (1 ,7 ,7 )
EBMultigrid::solve iter = 1, |resid| = 2.468e+01@ (0 ,0 ,0 ), rate = 3.322e+01
EBMultigrid::solve iter = 4, |resid| = 9.194e-05@ (0 ,63,63), rate = 3.811e+01
EBMultigrid:solve: final     |resid| = 3.610e-13@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve iter = 1, |resid| = 9.264e+00@ (0 ,0 ,0 ), rate = 9.709e+01
EBMultigrid::solve iter = 1, |resid| = 9.264e+00@ (0 ,0 ,0 ), rate = 9.709e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.175e-01@ (1 ,0 ,6 )
EBMultigrid::solve iter = 4, |resid| = 9.194e-05@ (0 ,63,63), rate = 3.811e+01
EBMultigrid:solve: final     |resid| = 8.629e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 9.013e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid:solve: final     |resid| = 3.615e-13@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.175e-01@ (1 ,0 ,6 )
EBLevelCCProjector::project:|gph|max = (2.349e+00@(1 ,4 ,4 ),1.358e-01@(1 ,63,6 ),1.358e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.689e+01, dx = 1.562e-02, dt = 2.906e-04
step = 3, time = 7.685e-04 dt = 2.906e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 2, |resid| = 4.149e-01@ (0 ,0 ,0 ), rate = 5.947e+01
EBMultigrid::solve iter = 5, |resid| = 2.681e-06@ (0 ,63,63), rate = 3.429e+01
EBMultigrid:solve: final     |resid| = 1.351e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.175e-01@ (1 ,6 ,0 )
EBMultigrid::solve iter = 2, |resid| = 1.666e-01@ (0 ,0 ,0 ), rate = 5.562e+01
EBMultigrid::solve iter = 2, |resid| = 1.666e-01@ (0 ,0 ,0 ), rate = 5.562e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.199e+02@ (0 ,4 ,4 )
EBMultigrid::solve iter = 5, |resid| = 2.681e-06@ (0 ,63,63), rate = 3.429e+01
EBMultigrid:solve: final     |resid| = 1.350e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.175e-01@ (1 ,6 ,0 )
EBMultigrid::solve iter = 3, |resid| = 9.807e-03@ (0 ,0 ,0 ), rate = 4.231e+01
EBMultigrid::solve iter = 6, |resid| = 8.285e-08@ (0 ,0 ,0 ), rate = 3.236e+01
EBMultigrid:solve: final     |resid| = 1.350e-14@ (2 ,63,63)
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 3, |resid| = 3.504e-03@ (0 ,63,63), rate = 4.753e+01
EBMultigrid::solve iter = 3, |resid| = 3.504e-03@ (0 ,63,63), rate = 4.753e+01
EBCCProjector::project: |input velo|max = (2.864e+01@(0 ,1 ,1 ),1.616e-01@(1 ,0 ,6 ),1.616e-01@(1 ,6 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 8.995e+02@(1 ,5 ,5 )
EBMultigrid::solve iter = 1, |resid| = 2.468e+01@ (0 ,0 ,0 ), rate = 3.322e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.995e+02@ (1 ,5 ,5 )
EBMultigrid::solve iter = 4, |resid| = 2.660e-04@ (0 ,0 ,0 ), rate = 3.687e+01
EBMultigrid:solve: final     |resid| = 1.350e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 6, |resid| = 8.285e-08@ (0 ,63,63), rate = 3.236e+01
EBCCProjector::project: |input velo|max = (2.864e+01@(0 ,1 ,1 ),1.616e-01@(1 ,0 ,6 ),1.616e-01@(1 ,6 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 8.995e+02@(1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.995e+02@ (1 ,5 ,5 )
EBMultigrid::solve iter = 7, |resid| = 2.646e-09@ (0 ,63,63), rate = 3.131e+01
EBMultigrid::solve iter = 4, |resid| = 9.194e-05@ (0 ,63,63), rate = 3.811e+01
EBMultigrid::solve iter = 4, |resid| = 9.194e-05@ (0 ,63,63), rate = 3.811e+01
EBMultigrid::solve iter = 5, |resid| = 7.890e-06@ (0 ,0 ,0 ), rate = 3.371e+01
EBMultigrid::solve iter = 2, |resid| = 4.149e-01@ (0 ,0 ,0 ), rate = 5.947e+01
EBMultigrid::solve iter = 1, |resid| = 9.264e+00@ (0 ,0 ,0 ), rate = 9.709e+01
EBMultigrid::solve iter = 7, |resid| = 2.646e-09@ (0 ,0 ,0 ), rate = 3.131e+01
EBMultigrid::solve iter = 1, |resid| = 9.264e+00@ (0 ,0 ,0 ), rate = 9.709e+01
EBMultigrid:solve: final     |resid| = 8.652e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 9.013e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (2.349e+00@(1 ,4 ,4 ),1.358e-01@(1 ,63,6 ),1.358e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.689e+01, dx = 1.562e-02, dt = 2.906e-04
step = 3, time = 7.685e-04 dt = 2.906e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 5, |resid| = 2.681e-06@ (0 ,63,63), rate = 3.429e+01
EBMultigrid::solve iter = 6, |resid| = 2.444e-07@ (0 ,0 ,0 ), rate = 3.229e+01
EBMultigrid::solve iter = 5, |resid| = 2.681e-06@ (0 ,63,63), rate = 3.429e+01
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.199e+02@ (0 ,4 ,4 )
EBMultigrid::solve iter = 3, |resid| = 9.807e-03@ (0 ,0 ,0 ), rate = 4.231e+01
EBMultigrid::solve iter = 2, |resid| = 1.666e-01@ (0 ,0 ,0 ), rate = 5.562e+01
EBMultigrid:solve: final     |resid| = 8.629e-11@ (0 ,63,63)
EBMultigrid::solve iter = 2, |resid| = 1.666e-01@ (0 ,0 ,0 ), rate = 5.562e+01
EBCCProjector::project: |phi|max  = 9.013e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (2.349e+00@(1 ,4 ,4 ),1.358e-01@(1 ,63,6 ),1.358e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.689e+01, dx = 1.562e-02, dt = 2.906e-04
step = 3, time = 7.685e-04 dt = 2.906e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 6, |resid| = 8.285e-08@ (0 ,63,63), rate = 3.236e+01
EBMultigrid::solve iter = 7, |resid| = 7.772e-09@ (0 ,0 ,0 ), rate = 3.144e+01
EBMultigrid::solve iter = 6, |resid| = 8.285e-08@ (0 ,0 ,0 ), rate = 3.236e+01
EBMultigrid::solve iter = 1, |resid| = 2.468e+01@ (0 ,0 ,0 ), rate = 3.322e+01
mac projecting advection velocity
EBMultigrid::solve iter = 4, |resid| = 2.660e-04@ (0 ,0 ,0 ), rate = 3.687e+01
EBMultigrid::solve iter = 3, |resid| = 3.504e-03@ (0 ,63,63), rate = 4.753e+01
EBMultigrid::solve iter = 3, |resid| = 3.504e-03@ (0 ,63,63), rate = 4.753e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.199e+02@ (0 ,4 ,4 )
EBMultigrid::solve iter = 7, |resid| = 2.646e-09@ (0 ,0 ,0 ), rate = 3.131e+01
EBMultigrid:solve: final     |resid| = 2.512e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 7, |resid| = 2.646e-09@ (0 ,0 ,0 ), rate = 3.131e+01
EBMultigrid::solve iter = 2, |resid| = 4.149e-01@ (0 ,0 ,0 ), rate = 5.947e+01
EBMultigrid::solve iter = 5, |resid| = 7.890e-06@ (0 ,0 ,0 ), rate = 3.371e+01
EBMultigrid::solve iter = 4, |resid| = 9.194e-05@ (0 ,63,63), rate = 3.811e+01
EBMultigrid::solve iter = 4, |resid| = 9.194e-05@ (0 ,63,63), rate = 3.811e+01
EBMultigrid::solve iter = 1, |resid| = 2.468e+01@ (0 ,0 ,0 ), rate = 3.322e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.507e+00@ (0 ,63,63)
EBMultigrid::solve iter = 6, |resid| = 2.444e-07@ (0 ,0 ,0 ), rate = 3.229e+01
EBMultigrid:solve: final     |resid| = 8.629e-11@ (0 ,63,63)
EBMultigrid::solve iter = 3, |resid| = 9.807e-03@ (0 ,0 ,0 ), rate = 4.231e+01
EBMultigrid:solve: final     |resid| = 8.652e-11@ (0 ,63,63)
EBCCProjector::project: |phi|max  = 9.013e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBCCProjector::project: |phi|max  = 9.013e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid:solve: final     |resid| = 3.877e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve iter = 5, |resid| = 2.681e-06@ (0 ,63,63), rate = 3.429e+01
EBMultigrid::solve iter = 5, |resid| = 2.681e-06@ (0 ,63,63), rate = 3.429e+01
EBMultigrid::solve iter = 2, |resid| = 4.149e-01@ (0 ,0 ,0 ), rate = 5.947e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.306e-01@ (1 ,0 ,5 )
EBLevelCCProjector::project:|gph|max = (2.349e+00@(1 ,4 ,4 ),1.358e-01@(1 ,63,6 ),1.358e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBLevelCCProjector::project:|gph|max = (2.349e+00@(1 ,4 ,4 ),1.358e-01@(1 ,63,6 ),1.358e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 7, |resid| = 7.772e-09@ (0 ,0 ,0 ), rate = 3.144e+01
advancing species advection/diffusion
getting reaction rates and evolving species
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid::solve iter = 4, |resid| = 2.660e-04@ (0 ,0 ,0 ), rate = 3.687e+01
maxvel = 2.689e+01, dx = 1.562e-02, dt = 2.906e-04
step = 3, time = 7.685e-04 dt = 2.906e-04
advancing velocity and pressure fields 
maxvel = 2.689e+01, dx = 1.562e-02, dt = 2.906e-04
step = 3, time = 7.685e-04 dt = 2.906e-04
advancing velocity and pressure fields 
EBMultigrid:solve: final     |resid| = 2.681e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.306e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 5, |resid| = 7.890e-06@ (0 ,0 ,0 ), rate = 3.371e+01
EBMultigrid:solve: final     |resid| = 2.680e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
mac projecting advection velocity
mac projecting advection velocity
EBCCProjector::project: |input velo|max = (2.649e+01@(0 ,1 ,1 ),2.736e-01@(1 ,0 ,5 ),2.736e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.199e+02@ (0 ,4 ,4 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.199e+02@ (0 ,4 ,4 )
EBCCProjector::project: |kappa DiVU|max  = 7.739e+02@(1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.739e+02@ (1 ,5 ,5 )
EBMultigrid::solve iter = 6, |resid| = 8.285e-08@ (0 ,0 ,0 ), rate = 3.236e+01
EBMultigrid::solve iter = 6, |resid| = 8.285e-08@ (0 ,0 ,0 ), rate = 3.236e+01
EBMultigrid::solve iter = 3, |resid| = 9.807e-03@ (0 ,0 ,0 ), rate = 4.231e+01
EBMultigrid:solve: final     |resid| = 2.520e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 6, |resid| = 2.444e-07@ (0 ,0 ,0 ), rate = 3.229e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.507e+00@ (0 ,63,63)
EBMultigrid::solve iter = 1, |resid| = 2.468e+01@ (0 ,0 ,0 ), rate = 3.322e+01
EBMultigrid::solve iter = 1, |resid| = 2.468e+01@ (0 ,0 ,0 ), rate = 3.322e+01
EBMultigrid::solve iter = 1, |resid| = 6.781e+00@ (0 ,0 ,0 ), rate = 1.141e+02
EBMultigrid::solve iter = 7, |resid| = 7.772e-09@ (0 ,0 ,0 ), rate = 3.144e+01
EBMultigrid::solve iter = 7, |resid| = 2.646e-09@ (0 ,0 ,0 ), rate = 3.131e+01
EBMultigrid::solve iter = 7, |resid| = 2.646e-09@ (0 ,63,63), rate = 3.131e+01
EBMultigrid::solve iter = 4, |resid| = 2.660e-04@ (0 ,0 ,0 ), rate = 3.687e+01
EBMultigrid:solve: final     |resid| = 3.877e-13@ (3 ,63,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.306e-01@ (1 ,0 ,5 )
EBMultigrid::solve iter = 2, |resid| = 4.149e-01@ (0 ,0 ,0 ), rate = 5.947e+01
EBMultigrid::solve iter = 2, |resid| = 4.149e-01@ (0 ,0 ,0 ), rate = 5.947e+01
EBMultigrid::solve iter = 2, |resid| = 1.269e-01@ (0 ,0 ,0 ), rate = 5.344e+01
EBMultigrid:solve: final     |resid| = 2.512e-10@ (0 ,63,63)
EBMultigrid:solve: final     |resid| = 8.640e-11@ (0 ,63,63)
EBMultigrid:solve: final     |resid| = 8.652e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 9.013e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 5, |resid| = 7.890e-06@ (0 ,0 ,0 ), rate = 3.371e+01
EBMultigrid:solve: final     |resid| = 2.681e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBCCProjector::project: |phi|max  = 9.013e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 3, |resid| = 9.807e-03@ (0 ,0 ,0 ), rate = 4.231e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.306e-01@ (1 ,5 ,0 )
EBLevelCCProjector::project:|gph|max = (2.349e+00@(1 ,4 ,4 ),1.358e-01@(1 ,63,6 ),1.358e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBLevelCCProjector::project:|gph|max = (2.349e+00@(1 ,4 ,4 ),1.358e-01@(1 ,63,6 ),1.358e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.507e+00@ (0 ,63,63)
advancing species advection/diffusion
getting reaction rates and evolving species
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.689e+01, dx = 1.562e-02, dt = 2.906e-04
step = 3, time = 7.685e-04 dt = 2.906e-04
advancing velocity and pressure fields 
maxvel = 2.689e+01, dx = 1.562e-02, dt = 2.906e-04
step = 3, time = 7.685e-04 dt = 2.906e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 6, |resid| = 2.444e-07@ (0 ,0 ,0 ), rate = 3.229e+01
EBMultigrid:solve: final     |resid| = 2.681e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.649e+01@(0 ,1 ,1 ),2.736e-01@(1 ,0 ,5 ),2.736e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 3, |resid| = 9.807e-03@ (0 ,0 ,0 ), rate = 4.231e+01
EBMultigrid::solve iter = 3, |resid| = 2.686e-03@ (0 ,63,63), rate = 4.725e+01
EBCCProjector::project: |kappa DiVU|max  = 7.739e+02@(1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.739e+02@ (1 ,5 ,5 )
EBMultigrid::solve iter = 7, |resid| = 7.772e-09@ (0 ,0 ,0 ), rate = 3.144e+01
mac projecting advection velocity
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.199e+02@ (0 ,4 ,4 )
EBMultigrid::solve iter = 4, |resid| = 2.660e-04@ (0 ,0 ,0 ), rate = 3.687e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.199e+02@ (0 ,4 ,4 )
EBMultigrid:solve: final     |resid| = 3.877e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.306e-01@ (1 ,0 ,5 )
EBMultigrid::solve iter = 4, |resid| = 2.660e-04@ (0 ,0 ,0 ), rate = 3.687e+01
EBMultigrid::solve iter = 4, |resid| = 7.077e-05@ (0 ,63,63), rate = 3.795e+01
EBMultigrid::solve iter = 1, |resid| = 6.781e+00@ (0 ,0 ,0 ), rate = 1.141e+02
EBMultigrid:solve: final     |resid| = 2.516e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 1, |resid| = 2.468e+01@ (0 ,0 ,0 ), rate = 3.322e+01
EBMultigrid::solve iter = 1, |resid| = 2.468e+01@ (0 ,0 ,0 ), rate = 3.322e+01
EBMultigrid::solve iter = 5, |resid| = 7.890e-06@ (0 ,0 ,0 ), rate = 3.371e+01
calling heat solver for variable 0
EBMultigrid:solve: final     |resid| = 2.681e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.507e+00@ (0 ,63,63)
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.306e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 2, |resid| = 1.269e-01@ (0 ,0 ,0 ), rate = 5.344e+01
EBMultigrid::solve iter = 5, |resid| = 7.890e-06@ (0 ,0 ,0 ), rate = 3.371e+01
EBMultigrid::solve iter = 5, |resid| = 2.066e-06@ (0 ,63,63), rate = 3.425e+01
EBMultigrid::solve iter = 2, |resid| = 4.149e-01@ (0 ,0 ,0 ), rate = 5.947e+01
EBMultigrid::solve iter = 2, |resid| = 4.149e-01@ (0 ,0 ,0 ), rate = 5.947e+01
EBMultigrid::solve iter = 6, |resid| = 2.444e-07@ (0 ,0 ,0 ), rate = 3.229e+01
EBMultigrid:solve: final     |resid| = 2.681e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid:solve: final     |resid| = 3.877e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBCCProjector::project: |input velo|max = (2.649e+01@(0 ,1 ,1 ),2.736e-01@(1 ,0 ,5 ),2.736e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 3, |resid| = 2.686e-03@ (0 ,63,63), rate = 4.725e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.306e-01@ (1 ,0 ,5 )
EBCCProjector::project: |kappa DiVU|max  = 7.739e+02@(1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.739e+02@ (1 ,5 ,5 )
EBMultigrid::solve iter = 6, |resid| = 2.444e-07@ (0 ,0 ,0 ), rate = 3.229e+01
EBMultigrid::solve iter = 6, |resid| = 6.390e-08@ (0 ,0 ,0 ), rate = 3.234e+01
EBMultigrid::solve iter = 7, |resid| = 7.772e-09@ (0 ,0 ,0 ), rate = 3.144e+01
EBMultigrid::solve iter = 3, |resid| = 9.807e-03@ (0 ,0 ,0 ), rate = 4.231e+01
EBMultigrid::solve iter = 3, |resid| = 9.807e-03@ (0 ,0 ,0 ), rate = 4.231e+01
EBMultigrid:solve: final     |resid| = 2.681e-14@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid::solve iter = 4, |resid| = 7.077e-05@ (0 ,63,63), rate = 3.795e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.306e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 1, |resid| = 6.781e+00@ (0 ,0 ,0 ), rate = 1.141e+02
EBMultigrid::solve iter = 7, |resid| = 7.772e-09@ (0 ,0 ,0 ), rate = 3.144e+01
EBMultigrid::solve iter = 7, |resid| = 2.042e-09@ (0 ,63,63), rate = 3.130e+01
EBMultigrid:solve: final     |resid| = 2.515e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 2, |resid| = 1.269e-01@ (0 ,0 ,0 ), rate = 5.344e+01
EBMultigrid::solve iter = 4, |resid| = 2.660e-04@ (0 ,0 ,0 ), rate = 3.687e+01
EBMultigrid::solve iter = 4, |resid| = 2.660e-04@ (0 ,0 ,0 ), rate = 3.687e+01
EBMultigrid:solve: final     |resid| = 2.681e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 5, |resid| = 2.066e-06@ (0 ,63,63), rate = 3.425e+01
EBCCProjector::project: |input velo|max = (2.649e+01@(0 ,1 ,1 ),2.736e-01@(1 ,0 ,5 ),2.736e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 7.739e+02@(1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.739e+02@ (1 ,5 ,5 )
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.507e+00@ (0 ,63,63)
EBMultigrid:solve: final     |resid| = 2.517e-10@ (0 ,0 ,0 )
EBMultigrid:solve: final     |resid| = 6.662e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 6.675e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 3, |resid| = 2.686e-03@ (0 ,63,63), rate = 4.725e+01
EBLevelCCProjector::project:|gph|max = (1.621e+00@(2 ,51,51),1.568e-01@(1 ,63,6 ),1.568e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid:solve: final     |resid| = 3.875e-13@ (3 ,0 ,63)
calling heat solver for variable 1
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.306e-01@ (1 ,0 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.507e+00@ (0 ,63,63)
EBMultigrid::solve iter = 5, |resid| = 7.890e-06@ (0 ,0 ,0 ), rate = 3.371e+01
EBMultigrid::solve iter = 5, |resid| = 7.890e-06@ (0 ,0 ,0 ), rate = 3.371e+01
EBMultigrid::solve iter = 6, |resid| = 6.390e-08@ (0 ,63,63), rate = 3.234e+01
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid::solve iter = 1, |resid| = 6.781e+00@ (0 ,0 ,0 ), rate = 1.141e+02
maxvel = 2.496e+01, dx = 1.562e-02, dt = 3.130e-04
step = 4, time = 1.059e-03 dt = 3.130e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 4, |resid| = 7.077e-05@ (0 ,63,63), rate = 3.795e+01
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.602e+02@ (0 ,4 ,4 )
EBMultigrid::solve iter = 6, |resid| = 2.444e-07@ (0 ,0 ,0 ), rate = 3.229e+01
EBMultigrid:solve: final     |resid| = 2.681e-14@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid:solve: final     |resid| = 3.877e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.306e-01@ (1 ,5 ,0 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.306e-01@ (1 ,0 ,5 )
EBMultigrid::solve iter = 6, |resid| = 2.444e-07@ (0 ,0 ,0 ), rate = 3.229e+01
EBMultigrid::solve iter = 7, |resid| = 2.042e-09@ (0 ,0 ,0 ), rate = 3.130e+01
EBMultigrid::solve iter = 2, |resid| = 1.269e-01@ (0 ,0 ,0 ), rate = 5.344e+01
EBMultigrid::solve iter = 7, |resid| = 7.772e-09@ (0 ,0 ,0 ), rate = 3.144e+01
EBMultigrid::solve iter = 5, |resid| = 2.066e-06@ (0 ,63,63), rate = 3.425e+01
EBMultigrid::solve iter = 1, |resid| = 2.555e+01@ (0 ,0 ,0 ), rate = 3.367e+01
EBMultigrid:solve: final     |resid| = 2.681e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid:solve: final     |resid| = 2.680e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.306e-01@ (1 ,5 ,0 )
EBCCProjector::project: |input velo|max = (2.649e+01@(0 ,1 ,1 ),2.736e-01@(1 ,0 ,5 ),2.736e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 7, |resid| = 7.771e-09@ (0 ,0 ,0 ), rate = 3.145e+01
EBMultigrid:solve: final     |resid| = 6.668e-11@ (0 ,63,63)
EBMultigrid::solve iter = 3, |resid| = 2.686e-03@ (0 ,63,63), rate = 4.725e+01
EBCCProjector::project: |kappa DiVU|max  = 7.739e+02@(1 ,5 ,5 )
EBCCProjector::project: |phi|max  = 6.675e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.739e+02@ (1 ,5 ,5 )
EBMultigrid:solve: final     |resid| = 2.517e-10@ (0 ,63,63)
EBLevelCCProjector::project:|gph|max = (1.621e+00@(2 ,51,51),1.568e-01@(1 ,63,6 ),1.568e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
calling heat solver for variable 0
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.507e+00@ (0 ,63,63)
maxvel = 2.496e+01, dx = 1.562e-02, dt = 3.130e-04
step = 4, time = 1.059e-03 dt = 3.130e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 6, |resid| = 6.390e-08@ (0 ,0 ,0 ), rate = 3.234e+01
EBMultigrid:solve: final     |resid| = 2.515e-10@ (0 ,63,63)
EBMultigrid::solve iter = 2, |resid| = 4.315e-01@ (0 ,0 ,0 ), rate = 5.920e+01
mac projecting advection velocity
EBMultigrid::solve iter = 4, |resid| = 7.077e-05@ (0 ,63,63), rate = 3.795e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.602e+02@ (0 ,4 ,4 )
calling heat solver for variable 0
EBMultigrid:solve: final     |resid| = 3.877e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid:solve: final     |resid| = 2.681e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.507e+00@ (0 ,63,63)
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.306e-01@ (1 ,0 ,5 )
EBCCProjector::project: |input velo|max = (2.649e+01@(0 ,1 ,1 ),2.736e-01@(1 ,0 ,5 ),2.736e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 1, |resid| = 6.781e+00@ (0 ,0 ,0 ), rate = 1.141e+02
EBCCProjector::project: |kappa DiVU|max  = 7.739e+02@(1 ,5 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.739e+02@ (1 ,5 ,5 )
EBMultigrid::solve iter = 7, |resid| = 2.042e-09@ (0 ,63,63), rate = 3.129e+01
EBMultigrid::solve iter = 3, |resid| = 1.023e-02@ (0 ,0 ,0 ), rate = 4.219e+01
EBMultigrid::solve iter = 5, |resid| = 2.066e-06@ (0 ,63,63), rate = 3.425e+01
EBMultigrid:solve: final     |resid| = 3.875e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve iter = 1, |resid| = 2.555e+01@ (0 ,0 ,0 ), rate = 3.367e+01
EBMultigrid:solve: final     |resid| = 2.681e-14@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid::solve iter = 2, |resid| = 1.269e-01@ (0 ,0 ,0 ), rate = 5.344e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.306e-01@ (1 ,0 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.306e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 1, |resid| = 6.781e+00@ (0 ,0 ,0 ), rate = 1.141e+02
EBMultigrid:solve: final     |resid| = 6.673e-11@ (0 ,0 ,0 )
EBMultigrid::solve iter = 6, |resid| = 6.390e-08@ (0 ,63,63), rate = 3.234e+01
EBCCProjector::project: |phi|max  = 6.675e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 4, |resid| = 2.776e-04@ (0 ,0 ,0 ), rate = 3.685e+01
EBLevelCCProjector::project:|gph|max = (1.621e+00@(2 ,51,51),1.568e-01@(1 ,63,6 ),1.568e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid::solve iter = 3, |resid| = 2.686e-03@ (0 ,63,63), rate = 4.725e+01
EBMultigrid::solve iter = 2, |resid| = 1.269e-01@ (0 ,0 ,0 ), rate = 5.344e+01
maxvel = 2.496e+01, dx = 1.562e-02, dt = 3.130e-04
step = 4, time = 1.059e-03 dt = 3.130e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 5, |resid| = 8.232e-06@ (0 ,0 ,0 ), rate = 3.372e+01
EBMultigrid:solve: final     |resid| = 2.681e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid:solve: final     |resid| = 2.681e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.306e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 2, |resid| = 4.315e-01@ (0 ,0 ,0 ), rate = 5.920e+01
EBCCProjector::project: |input velo|max = (2.649e+01@(0 ,1 ,1 ),2.736e-01@(1 ,0 ,5 ),2.736e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 7.739e+02@(1 ,5 ,5 )
EBMultigrid::solve iter = 7, |resid| = 2.042e-09@ (0 ,0 ,0 ), rate = 3.129e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.739e+02@ (1 ,5 ,5 )
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.602e+02@ (0 ,4 ,4 )
EBMultigrid::solve iter = 4, |resid| = 7.077e-05@ (0 ,63,63), rate = 3.795e+01
EBMultigrid::solve iter = 3, |resid| = 2.686e-03@ (0 ,63,63), rate = 4.725e+01
EBMultigrid::solve iter = 6, |resid| = 2.547e-07@ (0 ,0 ,0 ), rate = 3.232e+01
EBMultigrid:solve: final     |resid| = 2.681e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.649e+01@(0 ,1 ,1 ),2.736e-01@(1 ,0 ,5 ),2.736e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 7.739e+02@(1 ,5 ,5 )
EBMultigrid::solve iter = 3, |resid| = 1.023e-02@ (0 ,0 ,0 ), rate = 4.219e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.739e+02@ (1 ,5 ,5 )
EBMultigrid::solve iter = 1, |resid| = 6.781e+00@ (0 ,0 ,0 ), rate = 1.141e+02
EBMultigrid:solve: final     |resid| = 6.673e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 6.675e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.621e+00@(2 ,51,51),1.568e-01@(1 ,63,6 ),1.568e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 1, |resid| = 2.555e+01@ (0 ,0 ,0 ), rate = 3.367e+01
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.496e+01, dx = 1.562e-02, dt = 3.130e-04
step = 4, time = 1.059e-03 dt = 3.130e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 5, |resid| = 2.066e-06@ (0 ,63,63), rate = 3.425e+01
EBMultigrid::solve iter = 4, |resid| = 7.077e-05@ (0 ,63,63), rate = 3.795e+01
EBMultigrid::solve iter = 7, |resid| = 8.091e-09@ (0 ,0 ,0 ), rate = 3.148e+01
EBMultigrid::solve iter = 4, |resid| = 2.776e-04@ (0 ,0 ,0 ), rate = 3.685e+01
EBMultigrid::solve iter = 1, |resid| = 6.781e+00@ (0 ,0 ,0 ), rate = 1.141e+02
EBMultigrid::solve iter = 2, |resid| = 1.269e-01@ (0 ,0 ,0 ), rate = 5.344e+01
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.602e+02@ (0 ,4 ,4 )
EBMultigrid::solve iter = 2, |resid| = 4.315e-01@ (0 ,0 ,0 ), rate = 5.920e+01
EBMultigrid::solve iter = 6, |resid| = 6.390e-08@ (0 ,63,63), rate = 3.234e+01
EBMultigrid::solve iter = 5, |resid| = 2.066e-06@ (0 ,63,63), rate = 3.425e+01
EBMultigrid:solve: final     |resid| = 2.618e-10@ (0 ,63,63)
EBMultigrid::solve iter = 5, |resid| = 8.232e-06@ (0 ,0 ,0 ), rate = 3.372e+01
EBMultigrid::solve iter = 2, |resid| = 1.269e-01@ (0 ,0 ,0 ), rate = 5.344e+01
EBMultigrid::solve iter = 3, |resid| = 2.686e-03@ (0 ,63,63), rate = 4.725e+01
EBMultigrid::solve iter = 1, |resid| = 2.555e+01@ (0 ,0 ,0 ), rate = 3.367e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.233e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 3, |resid| = 1.023e-02@ (0 ,0 ,0 ), rate = 4.219e+01
EBMultigrid::solve iter = 7, |resid| = 2.042e-09@ (0 ,0 ,0 ), rate = 3.130e+01
EBMultigrid::solve iter = 6, |resid| = 6.390e-08@ (0 ,0 ,0 ), rate = 3.234e+01
EBMultigrid::solve iter = 6, |resid| = 2.547e-07@ (0 ,0 ,0 ), rate = 3.232e+01
EBMultigrid::solve iter = 3, |resid| = 2.686e-03@ (0 ,63,63), rate = 4.725e+01
EBMultigrid::solve iter = 4, |resid| = 7.077e-05@ (0 ,63,63), rate = 3.795e+01
EBMultigrid::solve iter = 2, |resid| = 4.315e-01@ (0 ,0 ,0 ), rate = 5.920e+01
EBMultigrid:solve: final     |resid| = 5.036e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.431e-01@ (1 ,0 ,5 )
EBMultigrid::solve iter = 4, |resid| = 2.776e-04@ (0 ,0 ,0 ), rate = 3.685e+01
EBMultigrid:solve: final     |resid| = 6.662e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 6.675e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 7, |resid| = 8.091e-09@ (0 ,0 ,0 ), rate = 3.148e+01
EBLevelCCProjector::project:|gph|max = (1.621e+00@(2 ,51,51),1.568e-01@(1 ,63,6 ),1.568e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 7, |resid| = 2.042e-09@ (0 ,0 ,0 ), rate = 3.130e+01
EBMultigrid::solve iter = 5, |resid| = 2.066e-06@ (0 ,63,63), rate = 3.425e+01
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid::solve iter = 4, |resid| = 7.077e-05@ (0 ,63,63), rate = 3.795e+01
EBMultigrid::solve iter = 3, |resid| = 1.023e-02@ (0 ,0 ,0 ), rate = 4.219e+01
maxvel = 2.496e+01, dx = 1.562e-02, dt = 3.130e-04
step = 4, time = 1.059e-03 dt = 3.130e-04
advancing velocity and pressure fields 
EBMultigrid:solve: final     |resid| = 5.118e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid:solve: final     |resid| = 2.613e-10@ (0 ,63,63)
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.431e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 5, |resid| = 8.232e-06@ (0 ,0 ,0 ), rate = 3.372e+01
calling heat solver for variable 0
EBMultigrid:solve: final     |resid| = 6.662e-11@ (0 ,63,63)
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.233e+00@ (0 ,63,0 )
EBCCProjector::project: |phi|max  = 6.675e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.621e+00@(2 ,51,51),1.568e-01@(1 ,63,6 ),1.568e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.602e+02@ (0 ,4 ,4 )
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.496e+01, dx = 1.562e-02, dt = 3.130e-04
step = 4, time = 1.059e-03 dt = 3.130e-04
advancing velocity and pressure fields 
EBMultigrid:solve: final     |resid| = 5.118e-14@ (2 ,63,63)
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.457e+01@(0 ,1 ,1 ),3.955e-01@(1 ,0 ,5 ),3.955e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 6, |resid| = 6.390e-08@ (0 ,0 ,0 ), rate = 3.234e+01
EBMultigrid::solve iter = 5, |resid| = 2.066e-06@ (0 ,63,63), rate = 3.425e+01
EBMultigrid::solve iter = 6, |resid| = 2.547e-07@ (0 ,0 ,0 ), rate = 3.232e+01
EBMultigrid::solve iter = 4, |resid| = 2.776e-04@ (0 ,0 ,0 ), rate = 3.685e+01
EBCCProjector::project: |kappa DiVU|max  = 6.692e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 6.692e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 1, |resid| = 2.555e+01@ (0 ,0 ,0 ), rate = 3.367e+01
EBMultigrid:solve: final     |resid| = 5.036e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.431e-01@ (1 ,0 ,5 )
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.602e+02@ (0 ,4 ,4 )
EBMultigrid::solve iter = 7, |resid| = 8.092e-09@ (0 ,0 ,0 ), rate = 3.148e+01
EBMultigrid::solve iter = 1, |resid| = 5.244e+00@ (0 ,0 ,0 ), rate = 1.276e+02
EBMultigrid::solve iter = 7, |resid| = 2.042e-09@ (0 ,0 ,0 ), rate = 3.130e+01
EBMultigrid::solve iter = 2, |resid| = 4.315e-01@ (0 ,0 ,0 ), rate = 5.920e+01
EBMultigrid::solve iter = 6, |resid| = 6.390e-08@ (0 ,63,63), rate = 3.234e+01
EBMultigrid::solve iter = 5, |resid| = 8.232e-06@ (0 ,0 ,0 ), rate = 3.372e+01
EBMultigrid:solve: final     |resid| = 5.118e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.431e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 1, |resid| = 2.555e+01@ (0 ,0 ,0 ), rate = 3.367e+01
EBMultigrid:solve: final     |resid| = 2.619e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 2, |resid| = 1.017e-01@ (0 ,0 ,0 ), rate = 5.157e+01
EBMultigrid::solve iter = 3, |resid| = 1.023e-02@ (0 ,0 ,0 ), rate = 4.219e+01
EBMultigrid::solve iter = 2, |resid| = 4.315e-01@ (0 ,0 ,0 ), rate = 5.920e+01
calling heat solver for variable 0
EBMultigrid:solve: final     |resid| = 6.668e-11@ (0 ,63,63)
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.233e+00@ (0 ,63,0 )
EBCCProjector::project: |phi|max  = 6.675e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 7, |resid| = 2.042e-09@ (0 ,0 ,0 ), rate = 3.130e+01
EBMultigrid::solve iter = 6, |resid| = 2.547e-07@ (0 ,0 ,0 ), rate = 3.232e+01
EBMultigrid:solve: final     |resid| = 5.118e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBLevelCCProjector::project:|gph|max = (1.621e+00@(2 ,51,51),1.568e-01@(1 ,63,6 ),1.568e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBCCProjector::project: |input velo|max = (2.457e+01@(0 ,1 ,1 ),3.955e-01@(1 ,0 ,5 ),3.955e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 6.692e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 6.692e+02@ (1 ,1 ,1 )
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.496e+01, dx = 1.562e-02, dt = 3.130e-04
step = 4, time = 1.059e-03 dt = 3.130e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 3, |resid| = 2.175e-03@ (0 ,63,63), rate = 4.675e+01
EBMultigrid:solve: final     |resid| = 6.673e-11@ (0 ,0 ,0 )
EBMultigrid::solve iter = 7, |resid| = 8.090e-09@ (0 ,0 ,0 ), rate = 3.149e+01
EBCCProjector::project: |phi|max  = 6.675e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 1, |resid| = 5.244e+00@ (0 ,0 ,0 ), rate = 1.276e+02
mac projecting advection velocity
EBLevelCCProjector::project:|gph|max = (1.621e+00@(2 ,51,51),1.568e-01@(1 ,63,6 ),1.568e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 4, |resid| = 2.776e-04@ (0 ,0 ,0 ), rate = 3.685e+01
EBMultigrid:solve: final     |resid| = 5.036e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve iter = 3, |resid| = 1.023e-02@ (0 ,0 ,0 ), rate = 4.219e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.431e-01@ (1 ,0 ,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.602e+02@ (0 ,4 ,4 )
EBMultigrid::solve iter = 4, |resid| = 5.762e-05@ (0 ,63,63), rate = 3.774e+01
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.496e+01, dx = 1.562e-02, dt = 3.130e-04
step = 4, time = 1.059e-03 dt = 3.130e-04
advancing velocity and pressure fields 
EBMultigrid:solve: final     |resid| = 2.617e-10@ (0 ,63,63)
mac projecting advection velocity
EBMultigrid::solve iter = 2, |resid| = 1.017e-01@ (0 ,0 ,0 ), rate = 5.157e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.602e+02@ (0 ,4 ,4 )
EBMultigrid::solve iter = 1, |resid| = 2.555e+01@ (0 ,0 ,0 ), rate = 3.367e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.233e+00@ (0 ,63,0 )
EBMultigrid:solve: final     |resid| = 5.118e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve iter = 5, |resid| = 8.232e-06@ (0 ,0 ,0 ), rate = 3.372e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.431e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 4, |resid| = 2.776e-04@ (0 ,0 ,0 ), rate = 3.685e+01
EBMultigrid::solve iter = 5, |resid| = 1.686e-06@ (0 ,63,63), rate = 3.417e+01
EBMultigrid::solve iter = 3, |resid| = 2.175e-03@ (0 ,63,63), rate = 4.675e+01
EBMultigrid::solve iter = 1, |resid| = 2.555e+01@ (0 ,0 ,0 ), rate = 3.367e+01
EBMultigrid:solve: final     |resid| = 5.036e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve iter = 2, |resid| = 4.315e-01@ (0 ,0 ,0 ), rate = 5.920e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.431e-01@ (1 ,0 ,5 )
EBMultigrid::solve iter = 6, |resid| = 2.547e-07@ (0 ,0 ,0 ), rate = 3.232e+01
EBMultigrid:solve: final     |resid| = 5.118e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 5, |resid| = 8.232e-06@ (0 ,0 ,0 ), rate = 3.372e+01
EBMultigrid::solve iter = 6, |resid| = 5.219e-08@ (0 ,63,63), rate = 3.231e+01
EBCCProjector::project: |input velo|max = (2.457e+01@(0 ,1 ,1 ),3.955e-01@(1 ,0 ,5 ),3.955e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 4, |resid| = 5.762e-05@ (0 ,63,63), rate = 3.774e+01
EBCCProjector::project: |kappa DiVU|max  = 6.692e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 6.692e+02@ (1 ,1 ,1 )
EBMultigrid:solve: final     |resid| = 5.118e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve iter = 2, |resid| = 4.315e-01@ (0 ,0 ,0 ), rate = 5.920e+01
EBMultigrid::solve iter = 3, |resid| = 1.023e-02@ (0 ,0 ,0 ), rate = 4.219e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.431e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 5, |resid| = 1.686e-06@ (0 ,63,63), rate = 3.417e+01
EBMultigrid::solve iter = 7, |resid| = 8.092e-09@ (0 ,0 ,0 ), rate = 3.148e+01
EBMultigrid::solve iter = 6, |resid| = 2.547e-07@ (0 ,0 ,0 ), rate = 3.232e+01
EBMultigrid::solve iter = 7, |resid| = 1.668e-09@ (0 ,0 ,0 ), rate = 3.128e+01
EBMultigrid::solve iter = 1, |resid| = 5.244e+00@ (0 ,0 ,0 ), rate = 1.276e+02
EBMultigrid::solve iter = 3, |resid| = 1.023e-02@ (0 ,0 ,0 ), rate = 4.219e+01
EBMultigrid::solve iter = 4, |resid| = 2.776e-04@ (0 ,0 ,0 ), rate = 3.685e+01
EBMultigrid:solve: final     |resid| = 5.118e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 6, |resid| = 5.219e-08@ (0 ,63,63), rate = 3.231e+01
EBCCProjector::project: |input velo|max = (2.457e+01@(0 ,1 ,1 ),3.955e-01@(1 ,0 ,5 ),3.955e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid:solve: final     |resid| = 2.615e-10@ (0 ,0 ,0 )
EBCCProjector::project: |kappa DiVU|max  = 6.692e+02@(1 ,1 ,1 )
EBMultigrid::solve iter = 7, |resid| = 8.092e-09@ (0 ,0 ,0 ), rate = 3.148e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 6.692e+02@ (1 ,1 ,1 )
EBMultigrid:solve: final     |resid| = 5.446e-11@ (0 ,0 ,0 )
EBMultigrid::solve iter = 2, |resid| = 1.017e-01@ (0 ,0 ,0 ), rate = 5.157e+01
EBCCProjector::project: |phi|max  = 5.325e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.355e+00@(0 ,31,32),1.805e-01@(1 ,63,6 ),1.805e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.233e+00@ (0 ,63,0 )
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.328e+01, dx = 1.562e-02, dt = 3.356e-04
step = 5, time = 1.372e-03 dt = 3.356e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 4, |resid| = 2.776e-04@ (0 ,0 ,0 ), rate = 3.685e+01
mac projecting advection velocity
EBMultigrid::solve iter = 5, |resid| = 8.232e-06@ (0 ,0 ,0 ), rate = 3.372e+01
EBMultigrid::solve iter = 7, |resid| = 1.668e-09@ (0 ,0 ,0 ), rate = 3.128e+01
EBMultigrid:solve: final     |resid| = 2.611e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 3, |resid| = 2.175e-03@ (0 ,63,63), rate = 4.675e+01
EBMultigrid::solve iter = 1, |resid| = 5.244e+00@ (0 ,0 ,0 ), rate = 1.276e+02
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.663e+02@ (0 ,4 ,4 )
EBMultigrid:solve: final     |resid| = 5.036e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.431e-01@ (1 ,0 ,5 )
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.233e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 5, |resid| = 8.232e-06@ (0 ,0 ,0 ), rate = 3.372e+01
EBMultigrid::solve iter = 6, |resid| = 2.547e-07@ (0 ,0 ,0 ), rate = 3.232e+01
EBMultigrid:solve: final     |resid| = 5.451e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 5.325e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 2, |resid| = 1.017e-01@ (0 ,0 ,0 ), rate = 5.157e+01
EBMultigrid::solve iter = 4, |resid| = 5.762e-05@ (0 ,63,63), rate = 3.774e+01
EBLevelCCProjector::project:|gph|max = (1.355e+00@(0 ,31,32),1.805e-01@(1 ,63,6 ),1.805e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 6, |resid| = 2.547e-07@ (0 ,0 ,0 ), rate = 3.232e+01
EBMultigrid::solve iter = 1, |resid| = 2.533e+01@ (0 ,0 ,0 ), rate = 3.420e+01
EBMultigrid:solve: final     |resid| = 5.118e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid:solve: final     |resid| = 5.032e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.431e-01@ (1 ,5 ,0 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.431e-01@ (1 ,0 ,5 )
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.328e+01, dx = 1.562e-02, dt = 3.356e-04
step = 5, time = 1.372e-03 dt = 3.356e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 7, |resid| = 8.092e-09@ (0 ,0 ,0 ), rate = 3.148e+01
mac projecting advection velocity
EBMultigrid::solve iter = 3, |resid| = 2.175e-03@ (0 ,63,63), rate = 4.675e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.663e+02@ (0 ,4 ,4 )
EBMultigrid::solve iter = 7, |resid| = 8.092e-09@ (0 ,0 ,0 ), rate = 3.148e+01
EBMultigrid::solve iter = 5, |resid| = 1.686e-06@ (0 ,63,63), rate = 3.417e+01
EBMultigrid:solve: final     |resid| = 2.608e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 2, |resid| = 4.291e-01@ (0 ,0 ,0 ), rate = 5.903e+01
EBMultigrid:solve: final     |resid| = 5.118e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid:solve: final     |resid| = 5.118e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBCCProjector::project: |input velo|max = (2.457e+01@(0 ,1 ,1 ),3.955e-01@(1 ,0 ,5 ),3.955e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.431e-01@ (1 ,5 ,0 )
calling heat solver for variable 0
EBCCProjector::project: |kappa DiVU|max  = 6.692e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.233e+00@ (0 ,63,0 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 6.692e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 6, |resid| = 5.219e-08@ (0 ,0 ,0 ), rate = 3.231e+01
EBMultigrid::solve iter = 4, |resid| = 5.762e-05@ (0 ,63,63), rate = 3.774e+01
EBMultigrid::solve iter = 1, |resid| = 2.533e+01@ (0 ,0 ,0 ), rate = 3.420e+01
EBMultigrid:solve: final     |resid| = 2.610e-10@ (0 ,63,63)
EBMultigrid:solve: final     |resid| = 5.036e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.431e-01@ (1 ,0 ,5 )
EBMultigrid::solve iter = 3, |resid| = 1.019e-02@ (0 ,0 ,0 ), rate = 4.211e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.233e+00@ (0 ,63,0 )
EBMultigrid:solve: final     |resid| = 5.118e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.457e+01@(0 ,1 ,1 ),3.955e-01@(1 ,0 ,5 ),3.955e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 1, |resid| = 5.244e+00@ (0 ,0 ,0 ), rate = 1.276e+02
EBCCProjector::project: |kappa DiVU|max  = 6.692e+02@(1 ,1 ,1 )
EBMultigrid::solve iter = 7, |resid| = 1.668e-09@ (0 ,0 ,0 ), rate = 3.128e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 6.692e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 4, |resid| = 2.765e-04@ (0 ,0 ,0 ), rate = 3.686e+01
EBMultigrid::solve iter = 5, |resid| = 1.686e-06@ (0 ,63,63), rate = 3.417e+01
EBMultigrid::solve iter = 2, |resid| = 4.291e-01@ (0 ,0 ,0 ), rate = 5.903e+01
EBMultigrid:solve: final     |resid| = 5.118e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid:solve: final     |resid| = 5.036e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.431e-01@ (1 ,5 ,0 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.431e-01@ (1 ,0 ,5 )
EBMultigrid::solve iter = 2, |resid| = 1.017e-01@ (0 ,0 ,0 ), rate = 5.157e+01
EBMultigrid:solve: final     |resid| = 5.446e-11@ (0 ,0 ,0 )
EBMultigrid::solve iter = 1, |resid| = 5.244e+00@ (0 ,0 ,0 ), rate = 1.276e+02
EBMultigrid::solve iter = 5, |resid| = 8.195e-06@ (0 ,0 ,0 ), rate = 3.374e+01
EBCCProjector::project: |phi|max  = 5.325e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.355e+00@(0 ,31,32),1.805e-01@(1 ,63,6 ),1.805e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.328e+01, dx = 1.562e-02, dt = 3.356e-04
step = 5, time = 1.372e-03 dt = 3.356e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 3, |resid| = 2.175e-03@ (0 ,63,63), rate = 4.675e+01
EBMultigrid::solve iter = 6, |resid| = 5.219e-08@ (0 ,0 ,0 ), rate = 3.231e+01
EBMultigrid::solve iter = 3, |resid| = 1.019e-02@ (0 ,0 ,0 ), rate = 4.211e+01
EBMultigrid:solve: final     |resid| = 5.118e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid:solve: final     |resid| = 5.118e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.431e-01@ (1 ,5 ,0 )
EBCCProjector::project: |input velo|max = (2.457e+01@(0 ,1 ,1 ),3.955e-01@(1 ,0 ,5 ),3.955e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 6.692e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 6.692e+02@ (1 ,1 ,1 )
mac projecting advection velocity
EBMultigrid::solve iter = 2, |resid| = 1.017e-01@ (0 ,0 ,0 ), rate = 5.157e+01
EBMultigrid::solve iter = 6, |resid| = 2.533e-07@ (0 ,0 ,0 ), rate = 3.236e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.663e+02@ (0 ,4 ,4 )
EBMultigrid::solve iter = 4, |resid| = 5.762e-05@ (0 ,63,63), rate = 3.774e+01
EBMultigrid::solve iter = 7, |resid| = 1.668e-09@ (0 ,0 ,0 ), rate = 3.128e+01
EBMultigrid::solve iter = 4, |resid| = 2.765e-04@ (0 ,0 ,0 ), rate = 3.686e+01
EBMultigrid:solve: final     |resid| = 5.118e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.457e+01@(0 ,1 ,1 ),3.955e-01@(1 ,0 ,5 ),3.955e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 1, |resid| = 5.244e+00@ (0 ,0 ,0 ), rate = 1.276e+02
EBCCProjector::project: |kappa DiVU|max  = 6.692e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 6.692e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 3, |resid| = 2.175e-03@ (0 ,63,63), rate = 4.675e+01
EBMultigrid::solve iter = 7, |resid| = 8.032e-09@ (0 ,0 ,0 ), rate = 3.153e+01
EBMultigrid::solve iter = 1, |resid| = 2.533e+01@ (0 ,0 ,0 ), rate = 3.420e+01
EBMultigrid::solve iter = 5, |resid| = 1.686e-06@ (0 ,63,63), rate = 3.417e+01
EBMultigrid:solve: final     |resid| = 5.463e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 5.325e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 5, |resid| = 8.195e-06@ (0 ,0 ,0 ), rate = 3.374e+01
EBLevelCCProjector::project:|gph|max = (1.355e+00@(0 ,31,32),1.805e-01@(1 ,63,6 ),1.805e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 2, |resid| = 1.017e-01@ (0 ,0 ,0 ), rate = 5.157e+01
EBMultigrid::solve iter = 1, |resid| = 5.244e+00@ (0 ,0 ,0 ), rate = 1.276e+02
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid::solve iter = 6, |resid| = 2.533e-07@ (0 ,0 ,0 ), rate = 3.236e+01
EBMultigrid:solve: final     |resid| = 2.592e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 4, |resid| = 5.762e-05@ (0 ,63,63), rate = 3.774e+01
maxvel = 2.328e+01, dx = 1.562e-02, dt = 3.356e-04
step = 5, time = 1.372e-03 dt = 3.356e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 2, |resid| = 4.291e-01@ (0 ,0 ,0 ), rate = 5.903e+01
EBMultigrid::solve iter = 6, |resid| = 5.219e-08@ (0 ,0 ,0 ), rate = 3.231e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.916e+00@ (0 ,63,0 )
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.663e+02@ (0 ,4 ,4 )
EBMultigrid::solve iter = 3, |resid| = 2.175e-03@ (0 ,63,63), rate = 4.675e+01
EBMultigrid::solve iter = 2, |resid| = 1.017e-01@ (0 ,0 ,0 ), rate = 5.157e+01
EBMultigrid::solve iter = 7, |resid| = 8.031e-09@ (0 ,0 ,0 ), rate = 3.153e+01
EBMultigrid::solve iter = 5, |resid| = 1.686e-06@ (0 ,63,63), rate = 3.417e+01
EBMultigrid::solve iter = 3, |resid| = 1.019e-02@ (0 ,0 ,0 ), rate = 4.211e+01
EBMultigrid::solve iter = 7, |resid| = 1.668e-09@ (0 ,63,63), rate = 3.128e+01
EBMultigrid:solve: final     |resid| = 6.062e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.559e-01@ (1 ,0 ,5 )
EBMultigrid::solve iter = 1, |resid| = 2.533e+01@ (0 ,0 ,0 ), rate = 3.420e+01
EBMultigrid::solve iter = 4, |resid| = 5.762e-05@ (0 ,63,63), rate = 3.774e+01
EBMultigrid::solve iter = 3, |resid| = 2.175e-03@ (0 ,63,63), rate = 4.675e+01
EBMultigrid:solve: final     |resid| = 2.583e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 2, |resid| = 4.291e-01@ (0 ,0 ,0 ), rate = 5.903e+01
EBMultigrid::solve iter = 6, |resid| = 5.219e-08@ (0 ,63,63), rate = 3.231e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.916e+00@ (0 ,63,0 )
EBMultigrid:solve: final     |resid| = 5.446e-11@ (0 ,0 ,0 )
EBMultigrid::solve iter = 4, |resid| = 2.765e-04@ (0 ,0 ,0 ), rate = 3.686e+01
EBCCProjector::project: |phi|max  = 5.325e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.355e+00@(0 ,31,32),1.805e-01@(1 ,63,6 ),1.805e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid:solve: final     |resid| = 8.971e-14@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.559e-01@ (1 ,5 ,0 )
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.328e+01, dx = 1.562e-02, dt = 3.356e-04
step = 5, time = 1.372e-03 dt = 3.356e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 5, |resid| = 1.686e-06@ (0 ,63,63), rate = 3.417e+01
EBMultigrid::solve iter = 4, |resid| = 5.762e-05@ (0 ,63,63), rate = 3.774e+01
EBMultigrid::solve iter = 7, |resid| = 1.668e-09@ (0 ,0 ,0 ), rate = 3.128e+01
EBMultigrid::solve iter = 3, |resid| = 1.019e-02@ (0 ,0 ,0 ), rate = 4.211e+01
EBMultigrid:solve: final     |resid| = 6.062e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.559e-01@ (1 ,0 ,5 )
mac projecting advection velocity
EBMultigrid::solve iter = 5, |resid| = 8.195e-06@ (0 ,0 ,0 ), rate = 3.374e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.663e+02@ (0 ,4 ,4 )
EBMultigrid:solve: final     |resid| = 8.971e-14@ (2 ,63,63)
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.291e+01@(0 ,1 ,1 ),5.279e-01@(1 ,0 ,5 ),5.279e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 5.860e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 5.860e+02@ (1 ,1 ,1 )
EBMultigrid:solve: final     |resid| = 5.451e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 5.325e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.355e+00@(0 ,31,32),1.805e-01@(1 ,63,6 ),1.805e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 6, |resid| = 5.219e-08@ (0 ,63,63), rate = 3.231e+01
EBMultigrid::solve iter = 5, |resid| = 1.686e-06@ (0 ,63,63), rate = 3.417e+01
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.328e+01, dx = 1.562e-02, dt = 3.356e-04
step = 5, time = 1.372e-03 dt = 3.356e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 4, |resid| = 2.765e-04@ (0 ,0 ,0 ), rate = 3.686e+01
EBMultigrid::solve iter = 6, |resid| = 2.533e-07@ (0 ,0 ,0 ), rate = 3.236e+01
EBMultigrid::solve iter = 1, |resid| = 2.533e+01@ (0 ,0 ,0 ), rate = 3.420e+01
EBMultigrid:solve: final     |resid| = 8.971e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve iter = 1, |resid| = 4.229e+00@ (0 ,0 ,0 ), rate = 1.386e+02
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.559e-01@ (1 ,5 ,0 )
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.663e+02@ (0 ,4 ,4 )
EBMultigrid::solve iter = 7, |resid| = 1.668e-09@ (0 ,0 ,0 ), rate = 3.128e+01
EBMultigrid::solve iter = 6, |resid| = 5.219e-08@ (0 ,0 ,0 ), rate = 3.231e+01
EBMultigrid::solve iter = 7, |resid| = 8.032e-09@ (0 ,0 ,0 ), rate = 3.153e+01
EBMultigrid::solve iter = 5, |resid| = 8.195e-06@ (0 ,0 ,0 ), rate = 3.374e+01
EBMultigrid::solve iter = 2, |resid| = 4.291e-01@ (0 ,0 ,0 ), rate = 5.903e+01
EBMultigrid:solve: final     |resid| = 8.971e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 2, |resid| = 8.443e-02@ (0 ,0 ,0 ), rate = 5.009e+01
EBCCProjector::project: |input velo|max = (2.291e+01@(0 ,1 ,1 ),5.279e-01@(1 ,0 ,5 ),5.279e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 5.860e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 5.860e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 1, |resid| = 2.533e+01@ (0 ,0 ,0 ), rate = 3.420e+01
EBMultigrid:solve: final     |resid| = 5.451e-11@ (0 ,0 ,0 )
EBMultigrid::solve iter = 7, |resid| = 1.668e-09@ (0 ,63,63), rate = 3.128e+01
EBCCProjector::project: |phi|max  = 5.325e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.355e+00@(0 ,31,32),1.805e-01@(1 ,63,6 ),1.805e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 6, |resid| = 2.533e-07@ (0 ,0 ,0 ), rate = 3.236e+01
EBMultigrid:solve: final     |resid| = 2.585e-10@ (0 ,63,63)
EBMultigrid::solve iter = 1, |resid| = 4.229e+00@ (0 ,0 ,0 ), rate = 1.386e+02
EBMultigrid::solve iter = 3, |resid| = 1.019e-02@ (0 ,0 ,0 ), rate = 4.211e+01
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid::solve iter = 3, |resid| = 1.826e-03@ (0 ,63,63), rate = 4.623e+01
calling heat solver for variable 0
maxvel = 2.328e+01, dx = 1.562e-02, dt = 3.356e-04
step = 5, time = 1.372e-03 dt = 3.356e-04
advancing velocity and pressure fields 
EBMultigrid:solve: final     |resid| = 5.446e-11@ (0 ,0 ,0 )
EBMultigrid::solve iter = 2, |resid| = 4.291e-01@ (0 ,0 ,0 ), rate = 5.903e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.916e+00@ (0 ,63,0 )
EBCCProjector::project: |phi|max  = 5.325e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.355e+00@(0 ,31,32),1.805e-01@(1 ,63,6 ),1.805e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.328e+01, dx = 1.562e-02, dt = 3.356e-04
step = 5, time = 1.372e-03 dt = 3.356e-04
advancing velocity and pressure fields 
mac projecting advection velocity
EBMultigrid::solve iter = 7, |resid| = 8.031e-09@ (0 ,0 ,0 ), rate = 3.154e+01
EBMultigrid::solve iter = 2, |resid| = 8.443e-02@ (0 ,0 ,0 ), rate = 5.009e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.663e+02@ (0 ,4 ,4 )
EBMultigrid::solve iter = 4, |resid| = 2.765e-04@ (0 ,0 ,0 ), rate = 3.686e+01
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.663e+02@ (0 ,4 ,4 )
EBMultigrid::solve iter = 4, |resid| = 4.866e-05@ (0 ,63,63), rate = 3.754e+01
EBMultigrid:solve: final     |resid| = 6.062e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve iter = 3, |resid| = 1.019e-02@ (0 ,0 ,0 ), rate = 4.211e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.559e-01@ (1 ,0 ,5 )
EBMultigrid::solve iter = 5, |resid| = 8.195e-06@ (0 ,0 ,0 ), rate = 3.374e+01
EBMultigrid:solve: final     |resid| = 2.588e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 3, |resid| = 1.826e-03@ (0 ,63,63), rate = 4.623e+01
EBMultigrid::solve iter = 1, |resid| = 2.533e+01@ (0 ,0 ,0 ), rate = 3.420e+01
EBMultigrid::solve iter = 1, |resid| = 2.533e+01@ (0 ,0 ,0 ), rate = 3.420e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.916e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 5, |resid| = 1.427e-06@ (0 ,63,63), rate = 3.410e+01
EBMultigrid:solve: final     |resid| = 8.971e-14@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.559e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 4, |resid| = 2.765e-04@ (0 ,0 ,0 ), rate = 3.686e+01
EBMultigrid::solve iter = 6, |resid| = 2.533e-07@ (0 ,0 ,0 ), rate = 3.236e+01
EBMultigrid::solve iter = 4, |resid| = 4.866e-05@ (0 ,63,63), rate = 3.754e+01
EBMultigrid::solve iter = 2, |resid| = 4.291e-01@ (0 ,0 ,0 ), rate = 5.903e+01
EBMultigrid::solve iter = 2, |resid| = 4.291e-01@ (0 ,0 ,0 ), rate = 5.903e+01
EBMultigrid:solve: final     |resid| = 6.062e-13@ (3 ,63,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.559e-01@ (1 ,0 ,5 )
EBMultigrid::solve iter = 6, |resid| = 4.422e-08@ (0 ,63,63), rate = 3.228e+01
EBMultigrid:solve: final     |resid| = 8.971e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 5, |resid| = 8.195e-06@ (0 ,0 ,0 ), rate = 3.374e+01
EBMultigrid::solve iter = 7, |resid| = 8.031e-09@ (0 ,0 ,0 ), rate = 3.153e+01
EBCCProjector::project: |input velo|max = (2.291e+01@(0 ,1 ,1 ),5.279e-01@(1 ,0 ,5 ),5.279e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 5.860e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 5.860e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 7, |resid| = 1.414e-09@ (0 ,0 ,0 ), rate = 3.127e+01
EBMultigrid::solve iter = 5, |resid| = 1.427e-06@ (0 ,63,63), rate = 3.410e+01
EBMultigrid::solve iter = 3, |resid| = 1.019e-02@ (0 ,0 ,0 ), rate = 4.211e+01
EBMultigrid::solve iter = 3, |resid| = 1.019e-02@ (0 ,0 ,0 ), rate = 4.211e+01
EBMultigrid:solve: final     |resid| = 8.971e-14@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.559e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 6, |resid| = 2.533e-07@ (0 ,0 ,0 ), rate = 3.236e+01
EBMultigrid:solve: final     |resid| = 2.597e-10@ (0 ,63,63)
EBMultigrid::solve iter = 1, |resid| = 4.229e+00@ (0 ,0 ,0 ), rate = 1.386e+02
EBMultigrid:solve: final     |resid| = 4.627e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 4.467e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.152e+00@(0 ,31,32),2.042e-01@(1 ,63,6 ),2.042e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.916e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 6, |resid| = 4.422e-08@ (0 ,0 ,0 ), rate = 3.228e+01
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.181e+01, dx = 1.562e-02, dt = 3.582e-04
step = 6, time = 1.708e-03 dt = 3.582e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 4, |resid| = 2.765e-04@ (0 ,0 ,0 ), rate = 3.686e+01
EBMultigrid::solve iter = 7, |resid| = 8.032e-09@ (0 ,0 ,0 ), rate = 3.153e+01
EBMultigrid::solve iter = 4, |resid| = 2.765e-04@ (0 ,0 ,0 ), rate = 3.686e+01
EBMultigrid:solve: final     |resid| = 8.971e-14@ (2 ,63,63)
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.291e+01@(0 ,1 ,1 ),5.279e-01@(1 ,0 ,5 ),5.279e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 5.860e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 5.860e+02@ (1 ,1 ,1 )
mac projecting advection velocity
EBMultigrid::solve iter = 2, |resid| = 8.443e-02@ (0 ,0 ,0 ), rate = 5.009e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.531e+02@ (0 ,3 ,3 )
EBMultigrid:solve: final     |resid| = 6.062e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.559e-01@ (1 ,0 ,5 )
EBMultigrid::solve iter = 7, |resid| = 1.414e-09@ (0 ,0 ,0 ), rate = 3.127e+01
EBMultigrid::solve iter = 5, |resid| = 8.195e-06@ (0 ,0 ,0 ), rate = 3.374e+01
EBMultigrid:solve: final     |resid| = 2.594e-10@ (0 ,63,63)
EBMultigrid::solve iter = 5, |resid| = 8.195e-06@ (0 ,0 ,0 ), rate = 3.374e+01
EBMultigrid::solve iter = 1, |resid| = 4.229e+00@ (0 ,0 ,0 ), rate = 1.386e+02
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.916e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 3, |resid| = 1.826e-03@ (0 ,63,63), rate = 4.623e+01
EBMultigrid::solve iter = 1, |resid| = 2.448e+01@ (0 ,0 ,0 ), rate = 3.485e+01
EBMultigrid:solve: final     |resid| = 8.971e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.559e-01@ (1 ,5 ,0 )
EBMultigrid:solve: final     |resid| = 4.621e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 4.467e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.152e+00@(0 ,31,32),2.042e-01@(1 ,63,6 ),2.042e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 6, |resid| = 2.533e-07@ (0 ,0 ,0 ), rate = 3.236e+01
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.181e+01, dx = 1.562e-02, dt = 3.582e-04
step = 6, time = 1.708e-03 dt = 3.582e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 6, |resid| = 2.533e-07@ (0 ,0 ,0 ), rate = 3.236e+01
EBMultigrid::solve iter = 2, |resid| = 8.443e-02@ (0 ,0 ,0 ), rate = 5.009e+01
EBMultigrid::solve iter = 7, |resid| = 8.032e-09@ (0 ,0 ,0 ), rate = 3.153e+01
EBMultigrid:solve: final     |resid| = 6.062e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.559e-01@ (1 ,0 ,5 )
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.531e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 4, |resid| = 4.866e-05@ (0 ,63,63), rate = 3.754e+01
EBMultigrid::solve iter = 2, |resid| = 4.152e-01@ (0 ,0 ,0 ), rate = 5.896e+01
EBMultigrid:solve: final     |resid| = 8.968e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.291e+01@(0 ,1 ,1 ),5.279e-01@(1 ,0 ,5 ),5.279e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 5.860e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 5.860e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 7, |resid| = 8.031e-09@ (0 ,0 ,0 ), rate = 3.153e+01
EBMultigrid::solve iter = 3, |resid| = 1.826e-03@ (0 ,63,63), rate = 4.623e+01
EBMultigrid:solve: final     |resid| = 2.593e-10@ (0 ,63,63)
EBMultigrid:solve: final     |resid| = 8.971e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.559e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 1, |resid| = 2.448e+01@ (0 ,0 ,0 ), rate = 3.485e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.916e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 5, |resid| = 1.427e-06@ (0 ,63,63), rate = 3.410e+01
EBMultigrid::solve iter = 3, |resid| = 9.868e-03@ (0 ,0 ,0 ), rate = 4.208e+01
EBMultigrid::solve iter = 1, |resid| = 4.229e+00@ (0 ,0 ,0 ), rate = 1.386e+02
EBMultigrid:solve: final     |resid| = 2.591e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 4, |resid| = 4.866e-05@ (0 ,63,63), rate = 3.754e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.916e+00@ (0 ,63,0 )
EBMultigrid:solve: final     |resid| = 8.971e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.291e+01@(0 ,1 ,1 ),5.279e-01@(1 ,0 ,5 ),5.279e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 5.860e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 5.860e+02@ (1 ,1 ,1 )
EBMultigrid:solve: final     |resid| = 6.062e-13@ (3 ,63,0 )
calling heat solver for variable 1
EBMultigrid::solve iter = 2, |resid| = 4.152e-01@ (0 ,0 ,0 ), rate = 5.896e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.559e-01@ (1 ,0 ,5 )
EBMultigrid::solve iter = 6, |resid| = 4.422e-08@ (0 ,63,63), rate = 3.228e+01
EBMultigrid::solve iter = 4, |resid| = 2.675e-04@ (0 ,0 ,0 ), rate = 3.690e+01
EBMultigrid::solve iter = 2, |resid| = 8.443e-02@ (0 ,0 ,0 ), rate = 5.009e+01
EBMultigrid::solve iter = 5, |resid| = 1.427e-06@ (0 ,63,63), rate = 3.410e+01
EBMultigrid:solve: final     |resid| = 6.062e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.559e-01@ (1 ,0 ,5 )
EBMultigrid::solve iter = 1, |resid| = 4.229e+00@ (0 ,0 ,0 ), rate = 1.386e+02
EBMultigrid::solve iter = 3, |resid| = 9.868e-03@ (0 ,0 ,0 ), rate = 4.208e+01
EBMultigrid:solve: final     |resid| = 8.971e-14@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve iter = 7, |resid| = 1.414e-09@ (0 ,0 ,0 ), rate = 3.127e+01
EBMultigrid::solve iter = 5, |resid| = 7.919e-06@ (0 ,0 ,0 ), rate = 3.378e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.559e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 3, |resid| = 1.826e-03@ (0 ,63,63), rate = 4.623e+01
EBMultigrid::solve iter = 2, |resid| = 8.443e-02@ (0 ,0 ,0 ), rate = 5.009e+01
EBMultigrid::solve iter = 6, |resid| = 4.422e-08@ (0 ,63,63), rate = 3.228e+01
EBMultigrid:solve: final     |resid| = 8.971e-14@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.559e-01@ (1 ,5 ,0 )
EBMultigrid:solve: final     |resid| = 4.616e-11@ (0 ,0 ,0 )
EBMultigrid::solve iter = 6, |resid| = 2.443e-07@ (0 ,0 ,0 ), rate = 3.241e+01
EBCCProjector::project: |phi|max  = 4.467e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 4, |resid| = 2.675e-04@ (0 ,0 ,0 ), rate = 3.690e+01
EBMultigrid::solve iter = 4, |resid| = 4.866e-05@ (0 ,63,63), rate = 3.754e+01
EBLevelCCProjector::project:|gph|max = (1.152e+00@(0 ,31,32),2.042e-01@(1 ,63,6 ),2.042e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 3, |resid| = 1.826e-03@ (0 ,63,63), rate = 4.623e+01
EBMultigrid:solve: final     |resid| = 8.971e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.291e+01@(0 ,1 ,1 ),5.279e-01@(1 ,0 ,5 ),5.279e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 5.860e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 5.860e+02@ (1 ,1 ,1 )
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.181e+01, dx = 1.562e-02, dt = 3.582e-04
step = 6, time = 1.708e-03 dt = 3.582e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 7, |resid| = 7.733e-09@ (0 ,0 ,0 ), rate = 3.160e+01
EBMultigrid::solve iter = 7, |resid| = 1.414e-09@ (0 ,0 ,0 ), rate = 3.127e+01
EBMultigrid:solve: final     |resid| = 8.971e-14@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
mac projecting advection velocity
EBCCProjector::project: |input velo|max = (2.291e+01@(0 ,1 ,1 ),5.279e-01@(1 ,0 ,5 ),5.279e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 5.860e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 5.860e+02@ (1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.531e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 5, |resid| = 1.427e-06@ (0 ,63,63), rate = 3.410e+01
EBMultigrid::solve iter = 4, |resid| = 4.866e-05@ (0 ,63,63), rate = 3.754e+01
EBMultigrid::solve iter = 5, |resid| = 7.919e-06@ (0 ,0 ,0 ), rate = 3.378e+01
EBMultigrid::solve iter = 1, |resid| = 4.229e+00@ (0 ,0 ,0 ), rate = 1.386e+02
EBMultigrid:solve: final     |resid| = 2.490e-10@ (0 ,0 ,0 )
EBMultigrid:solve: final     |resid| = 4.633e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 4.467e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.152e+00@(0 ,31,32),2.042e-01@(1 ,63,6 ),2.042e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.616e+00@ (0 ,63,0 )
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid::solve iter = 1, |resid| = 4.229e+00@ (0 ,0 ,0 ), rate = 1.386e+02
EBMultigrid::solve iter = 1, |resid| = 2.448e+01@ (0 ,0 ,0 ), rate = 3.485e+01
maxvel = 2.181e+01, dx = 1.562e-02, dt = 3.582e-04
step = 6, time = 1.708e-03 dt = 3.582e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 6, |resid| = 4.422e-08@ (0 ,0 ,0 ), rate = 3.228e+01
EBMultigrid::solve iter = 6, |resid| = 2.443e-07@ (0 ,0 ,0 ), rate = 3.241e+01
EBMultigrid::solve iter = 5, |resid| = 1.427e-06@ (0 ,63,63), rate = 3.410e+01
EBMultigrid::solve iter = 2, |resid| = 8.443e-02@ (0 ,0 ,0 ), rate = 5.009e+01
EBMultigrid::solve iter = 2, |resid| = 8.443e-02@ (0 ,0 ,0 ), rate = 5.009e+01
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.531e+02@ (0 ,3 ,3 )
EBMultigrid:solve: final     |resid| = 6.852e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.668e-01@ (1 ,63,5 )
EBMultigrid::solve iter = 7, |resid| = 7.733e-09@ (0 ,0 ,0 ), rate = 3.160e+01
EBMultigrid::solve iter = 2, |resid| = 4.152e-01@ (0 ,0 ,0 ), rate = 5.896e+01
EBMultigrid::solve iter = 3, |resid| = 1.826e-03@ (0 ,63,63), rate = 4.623e+01
EBMultigrid::solve iter = 7, |resid| = 1.414e-09@ (0 ,0 ,0 ), rate = 3.127e+01
EBMultigrid::solve iter = 6, |resid| = 4.422e-08@ (0 ,63,63), rate = 3.228e+01
EBMultigrid::solve iter = 3, |resid| = 1.826e-03@ (0 ,63,63), rate = 4.623e+01
EBMultigrid::solve iter = 1, |resid| = 2.448e+01@ (0 ,0 ,0 ), rate = 3.485e+01
EBMultigrid:solve: final     |resid| = 1.452e-13@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.668e-01@ (1 ,5 ,0 )
EBMultigrid:solve: final     |resid| = 2.485e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 4, |resid| = 4.866e-05@ (0 ,63,63), rate = 3.754e+01
EBMultigrid::solve iter = 3, |resid| = 9.868e-03@ (0 ,0 ,0 ), rate = 4.208e+01
EBMultigrid::solve iter = 4, |resid| = 4.866e-05@ (0 ,63,63), rate = 3.754e+01
EBMultigrid:solve: final     |resid| = 4.627e-11@ (0 ,63,63)
EBMultigrid::solve iter = 7, |resid| = 1.414e-09@ (0 ,0 ,0 ), rate = 3.127e+01
EBCCProjector::project: |phi|max  = 4.467e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 2, |resid| = 4.152e-01@ (0 ,0 ,0 ), rate = 5.896e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.616e+00@ (0 ,63,0 )
EBLevelCCProjector::project:|gph|max = (1.152e+00@(0 ,31,32),2.042e-01@(1 ,63,6 ),2.042e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid:solve: final     |resid| = 1.452e-13@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
advancing species advection/diffusion
getting reaction rates and evolving species
EBCCProjector::project: |input velo|max = (2.144e+01@(0 ,1 ,1 ),6.690e-01@(1 ,0 ,5 ),6.690e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
maxvel = 2.181e+01, dx = 1.562e-02, dt = 3.582e-04
step = 6, time = 1.708e-03 dt = 3.582e-04
advancing velocity and pressure fields 
EBCCProjector::project: |kappa DiVU|max  = 5.190e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 5.190e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 5, |resid| = 1.427e-06@ (0 ,63,63), rate = 3.410e+01
EBMultigrid::solve iter = 4, |resid| = 2.675e-04@ (0 ,0 ,0 ), rate = 3.690e+01
EBMultigrid:solve: final     |resid| = 4.616e-11@ (0 ,63,63)
EBCCProjector::project: |phi|max  = 4.467e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
mac projecting advection velocity
EBLevelCCProjector::project:|gph|max = (1.152e+00@(0 ,31,32),2.042e-01@(1 ,63,6 ),2.042e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.531e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 5, |resid| = 1.427e-06@ (0 ,63,63), rate = 3.410e+01
EBMultigrid:solve: final     |resid| = 6.857e-13@ (3 ,63,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.668e-01@ (1 ,63,5 )
EBMultigrid::solve iter = 3, |resid| = 9.868e-03@ (0 ,0 ,0 ), rate = 4.208e+01
EBMultigrid::solve iter = 1, |resid| = 3.524e+00@ (0 ,0 ,0 ), rate = 1.473e+02
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.181e+01, dx = 1.562e-02, dt = 3.582e-04
step = 6, time = 1.708e-03 dt = 3.582e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 5, |resid| = 7.919e-06@ (0 ,0 ,0 ), rate = 3.378e+01
EBMultigrid::solve iter = 6, |resid| = 4.422e-08@ (0 ,63,63), rate = 3.228e+01
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.531e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 1, |resid| = 2.448e+01@ (0 ,0 ,0 ), rate = 3.485e+01
EBMultigrid::solve iter = 2, |resid| = 7.198e-02@ (0 ,0 ,0 ), rate = 4.896e+01
EBMultigrid::solve iter = 6, |resid| = 4.422e-08@ (0 ,63,63), rate = 3.228e+01
EBMultigrid::solve iter = 4, |resid| = 2.675e-04@ (0 ,0 ,0 ), rate = 3.690e+01
EBMultigrid:solve: final     |resid| = 1.452e-13@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.668e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 7, |resid| = 1.414e-09@ (0 ,0 ,0 ), rate = 3.127e+01
EBMultigrid::solve iter = 6, |resid| = 2.443e-07@ (0 ,0 ,0 ), rate = 3.241e+01
EBMultigrid::solve iter = 1, |resid| = 2.448e+01@ (0 ,0 ,0 ), rate = 3.485e+01
EBMultigrid::solve iter = 2, |resid| = 4.152e-01@ (0 ,0 ,0 ), rate = 5.896e+01
EBMultigrid::solve iter = 3, |resid| = 1.574e-03@ (0 ,63,63), rate = 4.573e+01
EBMultigrid::solve iter = 7, |resid| = 1.414e-09@ (0 ,0 ,0 ), rate = 3.127e+01
EBMultigrid::solve iter = 5, |resid| = 7.919e-06@ (0 ,0 ,0 ), rate = 3.378e+01
EBMultigrid:solve: final     |resid| = 1.452e-13@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.144e+01@(0 ,1 ,1 ),6.690e-01@(1 ,0 ,5 ),6.690e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 5.190e+02@(1 ,1 ,1 )
EBMultigrid::solve iter = 7, |resid| = 7.734e-09@ (0 ,0 ,0 ), rate = 3.159e+01
EBMultigrid:solve: final     |resid| = 4.621e-11@ (0 ,63,63)
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 5.190e+02@ (1 ,1 ,1 )
EBCCProjector::project: |phi|max  = 4.467e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.152e+00@(0 ,31,32),2.042e-01@(1 ,63,6 ),2.042e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid::solve iter = 2, |resid| = 4.152e-01@ (0 ,0 ,0 ), rate = 5.896e+01
maxvel = 2.181e+01, dx = 1.562e-02, dt = 3.582e-04
step = 6, time = 1.708e-03 dt = 3.582e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 3, |resid| = 9.868e-03@ (0 ,0 ,0 ), rate = 4.208e+01
EBMultigrid:solve: final     |resid| = 4.616e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 4.467e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.152e+00@(0 ,31,32),2.042e-01@(1 ,63,6 ),2.042e-01@(1 ,6 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 4, |resid| = 4.215e-05@ (0 ,63,63), rate = 3.735e+01
EBMultigrid::solve iter = 6, |resid| = 2.443e-07@ (0 ,0 ,0 ), rate = 3.241e+01
EBMultigrid::solve iter = 1, |resid| = 3.524e+00@ (0 ,0 ,0 ), rate = 1.473e+02
advancing species advection/diffusion
getting reaction rates and evolving species
mac projecting advection velocity
maxvel = 2.181e+01, dx = 1.562e-02, dt = 3.582e-04
step = 6, time = 1.708e-03 dt = 3.582e-04
advancing velocity and pressure fields 
EBMultigrid:solve: final     |resid| = 2.484e-10@ (0 ,63,63)
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.531e+02@ (0 ,3 ,3 )
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.616e+00@ (0 ,63,0 )
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.531e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 3, |resid| = 9.868e-03@ (0 ,0 ,0 ), rate = 4.208e+01
EBMultigrid::solve iter = 4, |resid| = 2.675e-04@ (0 ,0 ,0 ), rate = 3.690e+01
EBMultigrid::solve iter = 7, |resid| = 7.734e-09@ (0 ,0 ,0 ), rate = 3.159e+01
EBMultigrid::solve iter = 5, |resid| = 1.239e-06@ (0 ,63,63), rate = 3.402e+01
EBMultigrid::solve iter = 2, |resid| = 7.198e-02@ (0 ,0 ,0 ), rate = 4.896e+01
EBMultigrid::solve iter = 1, |resid| = 2.448e+01@ (0 ,0 ,0 ), rate = 3.485e+01
EBMultigrid:solve: final     |resid| = 6.852e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.668e-01@ (1 ,63,5 )
EBMultigrid::solve iter = 1, |resid| = 2.448e+01@ (0 ,0 ,0 ), rate = 3.485e+01
EBMultigrid::solve iter = 4, |resid| = 2.675e-04@ (0 ,0 ,0 ), rate = 3.690e+01
EBMultigrid::solve iter = 5, |resid| = 7.919e-06@ (0 ,0 ,0 ), rate = 3.378e+01
EBMultigrid:solve: final     |resid| = 2.489e-10@ (0 ,63,63)
EBMultigrid::solve iter = 3, |resid| = 1.574e-03@ (0 ,63,63), rate = 4.573e+01
EBMultigrid::solve iter = 6, |resid| = 3.842e-08@ (0 ,0 ,0 ), rate = 3.224e+01
EBMultigrid::solve iter = 2, |resid| = 4.152e-01@ (0 ,0 ,0 ), rate = 5.896e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.616e+00@ (0 ,63,0 )
EBMultigrid:solve: final     |resid| = 1.452e-13@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.668e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 2, |resid| = 4.152e-01@ (0 ,0 ,0 ), rate = 5.896e+01
EBMultigrid::solve iter = 5, |resid| = 7.919e-06@ (0 ,0 ,0 ), rate = 3.378e+01
EBMultigrid::solve iter = 6, |resid| = 2.443e-07@ (0 ,0 ,0 ), rate = 3.241e+01
EBMultigrid::solve iter = 4, |resid| = 4.215e-05@ (0 ,63,63), rate = 3.735e+01
EBMultigrid::solve iter = 7, |resid| = 1.229e-09@ (0 ,63,63), rate = 3.126e+01
EBMultigrid::solve iter = 3, |resid| = 9.868e-03@ (0 ,0 ,0 ), rate = 4.208e+01
EBMultigrid:solve: final     |resid| = 6.852e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.668e-01@ (1 ,63,5 )
EBMultigrid:solve: final     |resid| = 1.452e-13@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.144e+01@(0 ,1 ,1 ),6.690e-01@(1 ,0 ,5 ),6.690e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 5.190e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 5.190e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 3, |resid| = 9.868e-03@ (0 ,0 ,0 ), rate = 4.208e+01
EBMultigrid::solve iter = 6, |resid| = 2.443e-07@ (0 ,0 ,0 ), rate = 3.241e+01
EBMultigrid::solve iter = 7, |resid| = 7.733e-09@ (0 ,0 ,0 ), rate = 3.160e+01
EBMultigrid::solve iter = 5, |resid| = 1.239e-06@ (0 ,63,63), rate = 3.402e+01
EBMultigrid:solve: final     |resid| = 4.013e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 3.885e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (9.860e-01@(0 ,31,32),2.260e-01@(1 ,63,5 ),2.260e-01@(1 ,5 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 1, |resid| = 3.524e+00@ (0 ,0 ,0 ), rate = 1.473e+02
EBMultigrid:solve: final     |resid| = 1.452e-13@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve iter = 4, |resid| = 2.675e-04@ (0 ,0 ,0 ), rate = 3.690e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.668e-01@ (1 ,5 ,0 )
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.050e+01, dx = 1.562e-02, dt = 3.810e-04
step = 7, time = 2.066e-03 dt = 3.810e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 4, |resid| = 2.675e-04@ (0 ,0 ,0 ), rate = 3.690e+01
EBMultigrid::solve iter = 7, |resid| = 7.733e-09@ (0 ,0 ,0 ), rate = 3.160e+01
EBMultigrid:solve: final     |resid| = 2.490e-10@ (0 ,63,63)
EBMultigrid::solve iter = 2, |resid| = 7.198e-02@ (0 ,0 ,0 ), rate = 4.896e+01
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.290e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 6, |resid| = 3.843e-08@ (0 ,63,63), rate = 3.224e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.616e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 5, |resid| = 7.919e-06@ (0 ,0 ,0 ), rate = 3.378e+01
EBMultigrid:solve: final     |resid| = 1.452e-13@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.144e+01@(0 ,1 ,1 ),6.690e-01@(1 ,0 ,5 ),6.690e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 5.190e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 5.190e+02@ (1 ,1 ,1 )
EBMultigrid:solve: final     |resid| = 2.485e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 5, |resid| = 7.919e-06@ (0 ,0 ,0 ), rate = 3.378e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.616e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 3, |resid| = 1.574e-03@ (0 ,63,63), rate = 4.573e+01
EBMultigrid::solve iter = 1, |resid| = 2.326e+01@ (0 ,0 ,0 ), rate = 3.563e+01
EBMultigrid::solve iter = 7, |resid| = 1.229e-09@ (0 ,0 ,0 ), rate = 3.126e+01
EBMultigrid:solve: final     |resid| = 6.852e-13@ (3 ,63,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.668e-01@ (1 ,63,5 )
EBMultigrid::solve iter = 6, |resid| = 2.443e-07@ (0 ,0 ,0 ), rate = 3.241e+01
EBMultigrid::solve iter = 1, |resid| = 3.524e+00@ (0 ,0 ,0 ), rate = 1.473e+02
EBMultigrid::solve iter = 6, |resid| = 2.443e-07@ (0 ,0 ,0 ), rate = 3.241e+01
EBMultigrid:solve: final     |resid| = 6.857e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.668e-01@ (1 ,63,5 )
EBMultigrid:solve: final     |resid| = 4.005e-11@ (0 ,0 ,0 )
EBMultigrid::solve iter = 4, |resid| = 4.215e-05@ (0 ,63,63), rate = 3.735e+01
EBCCProjector::project: |phi|max  = 3.885e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 2, |resid| = 3.942e-01@ (0 ,0 ,0 ), rate = 5.901e+01
EBMultigrid:solve: final     |resid| = 1.452e-13@ (2 ,0 ,0 )
calling heat solver for variable 2
EBLevelCCProjector::project:|gph|max = (9.860e-01@(0 ,31,32),2.260e-01@(1 ,63,5 ),2.260e-01@(1 ,5 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.668e-01@ (1 ,5 ,0 )
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid::solve iter = 7, |resid| = 7.733e-09@ (0 ,0 ,0 ), rate = 3.160e+01
maxvel = 2.050e+01, dx = 1.562e-02, dt = 3.810e-04
step = 7, time = 2.066e-03 dt = 3.810e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 2, |resid| = 7.198e-02@ (0 ,0 ,0 ), rate = 4.896e+01
EBMultigrid::solve iter = 7, |resid| = 7.734e-09@ (0 ,0 ,0 ), rate = 3.159e+01
EBMultigrid:solve: final     |resid| = 2.485e-10@ (0 ,0 ,0 )
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.290e+02@ (0 ,3 ,3 )
calling heat solver for variable 0
EBMultigrid:solve: final     |resid| = 1.452e-13@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.616e+00@ (0 ,63,0 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.668e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 5, |resid| = 1.239e-06@ (0 ,63,63), rate = 3.402e+01
EBMultigrid:solve: final     |resid| = 1.452e-13@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 3, |resid| = 9.367e-03@ (0 ,0 ,0 ), rate = 4.209e+01
EBCCProjector::project: |input velo|max = (2.144e+01@(0 ,1 ,1 ),6.690e-01@(1 ,0 ,5 ),6.690e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 5.190e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 5.190e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 3, |resid| = 1.574e-03@ (0 ,63,63), rate = 4.573e+01
EBMultigrid:solve: final     |resid| = 2.491e-10@ (0 ,63,63)
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.616e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 1, |resid| = 2.326e+01@ (0 ,0 ,0 ), rate = 3.563e+01
EBMultigrid:solve: final     |resid| = 6.852e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid:solve: final     |resid| = 1.452e-13@ (2 ,63,63)
cc projecting vel + gphi*dt
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.668e-01@ (1 ,63,5 )
EBMultigrid::solve iter = 6, |resid| = 3.843e-08@ (0 ,63,63), rate = 3.224e+01
EBCCProjector::project: |input velo|max = (2.144e+01@(0 ,1 ,1 ),6.690e-01@(1 ,0 ,5 ),6.690e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 4, |resid| = 2.534e-04@ (0 ,0 ,0 ), rate = 3.696e+01
EBCCProjector::project: |kappa DiVU|max  = 5.190e+02@(1 ,1 ,1 )
EBMultigrid::solve iter = 1, |resid| = 3.524e+00@ (0 ,0 ,0 ), rate = 1.473e+02
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 5.190e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 4, |resid| = 4.215e-05@ (0 ,63,63), rate = 3.735e+01
EBMultigrid:solve: final     |resid| = 6.852e-13@ (3 ,0 ,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.668e-01@ (1 ,63,5 )
EBMultigrid::solve iter = 2, |resid| = 3.942e-01@ (0 ,0 ,0 ), rate = 5.901e+01
EBMultigrid::solve iter = 7, |resid| = 1.229e-09@ (0 ,63,63), rate = 3.126e+01
EBMultigrid::solve iter = 5, |resid| = 7.493e-06@ (0 ,0 ,0 ), rate = 3.382e+01
EBMultigrid::solve iter = 2, |resid| = 7.198e-02@ (0 ,0 ,0 ), rate = 4.896e+01
EBMultigrid:solve: final     |resid| = 1.452e-13@ (2 ,63,63)
calling heat solver for variable 2
EBMultigrid::solve iter = 1, |resid| = 3.524e+00@ (0 ,0 ,0 ), rate = 1.473e+02
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.668e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 5, |resid| = 1.239e-06@ (0 ,63,63), rate = 3.402e+01
EBMultigrid:solve: final     |resid| = 1.452e-13@ (2 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.668e-01@ (1 ,5 ,0 )
EBMultigrid:solve: final     |resid| = 4.022e-11@ (0 ,63,63)
EBCCProjector::project: |phi|max  = 3.885e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (9.860e-01@(0 ,31,32),2.260e-01@(1 ,63,5 ),2.260e-01@(1 ,5 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 6, |resid| = 2.308e-07@ (0 ,0 ,0 ), rate = 3.247e+01
EBMultigrid::solve iter = 3, |resid| = 1.574e-03@ (0 ,63,63), rate = 4.573e+01
EBMultigrid::solve iter = 2, |resid| = 7.198e-02@ (0 ,0 ,0 ), rate = 4.896e+01
EBMultigrid::solve iter = 3, |resid| = 9.367e-03@ (0 ,0 ,0 ), rate = 4.209e+01
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid:solve: final     |resid| = 1.452e-13@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
maxvel = 2.050e+01, dx = 1.562e-02, dt = 3.810e-04
step = 7, time = 2.066e-03 dt = 3.810e-04
advancing velocity and pressure fields 
EBCCProjector::project: |input velo|max = (2.144e+01@(0 ,1 ,1 ),6.690e-01@(1 ,0 ,5 ),6.690e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 5.190e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 5.190e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 6, |resid| = 3.843e-08@ (0 ,63,63), rate = 3.224e+01
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.290e+02@ (0 ,3 ,3 )
EBMultigrid:solve: final     |resid| = 1.452e-13@ (2 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.144e+01@(0 ,1 ,1 ),6.690e-01@(1 ,0 ,5 ),6.690e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 7, |resid| = 7.288e-09@ (0 ,0 ,0 ), rate = 3.166e+01
EBCCProjector::project: |kappa DiVU|max  = 5.190e+02@(1 ,1 ,1 )
EBMultigrid::solve iter = 4, |resid| = 4.215e-05@ (0 ,63,63), rate = 3.735e+01
EBMultigrid::solve iter = 3, |resid| = 1.574e-03@ (0 ,63,63), rate = 4.573e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 5.190e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 4, |resid| = 2.534e-04@ (0 ,0 ,0 ), rate = 3.696e+01
EBMultigrid::solve iter = 1, |resid| = 2.326e+01@ (0 ,0 ,0 ), rate = 3.563e+01
EBMultigrid::solve iter = 1, |resid| = 3.524e+00@ (0 ,0 ,0 ), rate = 1.473e+02
EBMultigrid::solve iter = 7, |resid| = 1.229e-09@ (0 ,63,63), rate = 3.126e+01
EBMultigrid:solve: final     |resid| = 2.334e-10@ (0 ,63,63)
EBMultigrid::solve iter = 5, |resid| = 1.239e-06@ (0 ,63,63), rate = 3.402e+01
EBMultigrid::solve iter = 1, |resid| = 3.524e+00@ (0 ,0 ,0 ), rate = 1.473e+02
EBMultigrid::solve iter = 4, |resid| = 4.215e-05@ (0 ,63,63), rate = 3.735e+01
EBMultigrid::solve iter = 2, |resid| = 3.942e-01@ (0 ,0 ,0 ), rate = 5.901e+01
EBMultigrid::solve iter = 5, |resid| = 7.493e-06@ (0 ,0 ,0 ), rate = 3.382e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.339e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 2, |resid| = 7.198e-02@ (0 ,0 ,0 ), rate = 4.896e+01
EBMultigrid:solve: final     |resid| = 4.013e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 3.885e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (9.860e-01@(0 ,31,32),2.260e-01@(1 ,63,5 ),2.260e-01@(1 ,5 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.050e+01, dx = 1.562e-02, dt = 3.810e-04
step = 7, time = 2.066e-03 dt = 3.810e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 2, |resid| = 7.198e-02@ (0 ,0 ,0 ), rate = 4.896e+01
EBMultigrid::solve iter = 6, |resid| = 2.308e-07@ (0 ,0 ,0 ), rate = 3.247e+01
EBMultigrid::solve iter = 3, |resid| = 1.574e-03@ (0 ,63,63), rate = 4.573e+01
EBMultigrid::solve iter = 6, |resid| = 3.843e-08@ (0 ,63,63), rate = 3.224e+01
EBMultigrid::solve iter = 5, |resid| = 1.239e-06@ (0 ,63,63), rate = 3.402e+01
EBMultigrid::solve iter = 3, |resid| = 9.367e-03@ (0 ,0 ,0 ), rate = 4.209e+01
EBMultigrid:solve: final     |resid| = 1.182e-12@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.739e-01@ (1 ,63,5 )
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.290e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 3, |resid| = 1.574e-03@ (0 ,63,63), rate = 4.573e+01
EBMultigrid::solve iter = 7, |resid| = 7.288e-09@ (0 ,0 ,0 ), rate = 3.167e+01
EBMultigrid::solve iter = 4, |resid| = 4.215e-05@ (0 ,63,63), rate = 3.735e+01
EBMultigrid::solve iter = 7, |resid| = 1.229e-09@ (0 ,0 ,0 ), rate = 3.126e+01
EBMultigrid::solve iter = 1, |resid| = 2.326e+01@ (0 ,0 ,0 ), rate = 3.563e+01
EBMultigrid::solve iter = 6, |resid| = 3.842e-08@ (0 ,63,63), rate = 3.224e+01
EBMultigrid::solve iter = 4, |resid| = 2.534e-04@ (0 ,0 ,0 ), rate = 3.696e+01
EBMultigrid::solve iter = 1, |resid| = 2.200e-13@ (2 ,0 ,0 ), rate = 7.905e+11
EBMultigrid::solve iter = 4, |resid| = 4.215e-05@ (0 ,63,63), rate = 3.735e+01
EBMultigrid:solve: final     |resid| = 2.339e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 5, |resid| = 1.239e-06@ (0 ,63,63), rate = 3.402e+01
EBMultigrid:solve: final     |resid| = 4.016e-11@ (0 ,63,63)
EBCCProjector::project: |phi|max  = 3.885e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 2, |resid| = 3.942e-01@ (0 ,0 ,0 ), rate = 5.901e+01
EBLevelCCProjector::project:|gph|max = (9.860e-01@(0 ,31,32),2.260e-01@(1 ,63,5 ),2.260e-01@(1 ,5 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,1 )
calling heat solver for variable 2
EBMultigrid::solve iter = 7, |resid| = 1.229e-09@ (0 ,0 ,0 ), rate = 3.126e+01
EBMultigrid::solve iter = 5, |resid| = 7.493e-06@ (0 ,0 ,0 ), rate = 3.382e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.739e-01@ (1 ,5 ,0 )
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.339e+00@ (0 ,63,0 )
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid::solve iter = 5, |resid| = 1.239e-06@ (0 ,63,63), rate = 3.402e+01
maxvel = 2.050e+01, dx = 1.562e-02, dt = 3.810e-04
step = 7, time = 2.066e-03 dt = 3.810e-04
advancing velocity and pressure fields 
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.290e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 6, |resid| = 3.843e-08@ (0 ,63,63), rate = 3.224e+01
EBMultigrid::solve iter = 3, |resid| = 9.367e-03@ (0 ,0 ,0 ), rate = 4.209e+01
EBMultigrid::solve iter = 1, |resid| = 2.200e-13@ (2 ,0 ,0 ), rate = 7.905e+11
EBMultigrid::solve iter = 6, |resid| = 2.308e-07@ (0 ,0 ,0 ), rate = 3.247e+01
EBMultigrid:solve: final     |resid| = 4.019e-11@ (0 ,63,63)
EBCCProjector::project: |phi|max  = 3.885e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid:solve: final     |resid| = 1.182e-12@ (2 ,0 ,0 )
calling heat solver for variable 1
EBLevelCCProjector::project:|gph|max = (9.860e-01@(0 ,31,32),2.260e-01@(1 ,63,5 ),2.260e-01@(1 ,5 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.739e-01@ (1 ,63,5 )
EBMultigrid::solve iter = 6, |resid| = 3.842e-08@ (0 ,63,63), rate = 3.224e+01
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid::solve iter = 1, |resid| = 2.326e+01@ (0 ,0 ,0 ), rate = 3.563e+01
maxvel = 2.050e+01, dx = 1.562e-02, dt = 3.810e-04
step = 7, time = 2.066e-03 dt = 3.810e-04
advancing velocity and pressure fields 
mac projecting advection velocity
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,2 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.290e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 7, |resid| = 1.229e-09@ (0 ,63,63), rate = 3.126e+01
EBCCProjector::project: |input velo|max = (2.012e+01@(0 ,1 ,1 ),8.155e-01@(1 ,0 ,5 ),8.155e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 7, |resid| = 7.288e-09@ (0 ,0 ,0 ), rate = 3.167e+01
EBMultigrid::solve iter = 4, |resid| = 2.534e-04@ (0 ,0 ,0 ), rate = 3.696e+01
EBCCProjector::project: |kappa DiVU|max  = 4.646e+02@(1 ,1 ,1 )
EBMultigrid::solve iter = 2, |resid| = 3.942e-01@ (0 ,0 ,0 ), rate = 5.901e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.646e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 1, |resid| = 2.200e-13@ (2 ,0 ,0 ), rate = 7.905e+11
EBMultigrid::solve iter = 7, |resid| = 1.229e-09@ (0 ,0 ,0 ), rate = 3.126e+01
EBMultigrid::solve iter = 1, |resid| = 2.326e+01@ (0 ,0 ,0 ), rate = 3.563e+01
EBMultigrid:solve: final     |resid| = 2.336e-10@ (0 ,63,63)
EBMultigrid:solve: final     |resid| = 4.013e-11@ (0 ,0 ,0 )
EBMultigrid::solve iter = 3, |resid| = 9.367e-03@ (0 ,0 ,0 ), rate = 4.209e+01
EBMultigrid::solve iter = 1, |resid| = 3.016e+00@ (0 ,0 ,0 ), rate = 1.540e+02
EBCCProjector::project: |phi|max  = 3.885e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 5, |resid| = 7.493e-06@ (0 ,0 ,0 ), rate = 3.382e+01
EBLevelCCProjector::project:|gph|max = (9.860e-01@(0 ,31,32),2.260e-01@(1 ,63,5 ),2.260e-01@(1 ,5 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 2, |resid| = 3.942e-01@ (0 ,0 ,0 ), rate = 5.901e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,1 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.739e-01@ (1 ,5 ,0 )
EBMultigrid:solve: final     |resid| = 4.005e-11@ (0 ,63,63)
calling heat solver for variable 0
EBCCProjector::project: |phi|max  = 3.885e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.339e+00@ (0 ,63,0 )
EBLevelCCProjector::project:|gph|max = (9.860e-01@(0 ,31,32),2.260e-01@(1 ,63,5 ),2.260e-01@(1 ,5 ,0 )EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 6, |resid| = 2.308e-07@ (0 ,0 ,0 ), rate = 3.247e+01
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.050e+01, dx = 1.562e-02, dt = 3.810e-04
step = 7, time = 2.066e-03 dt = 3.810e-04
advancing velocity and pressure fields 
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 2.050e+01, dx = 1.562e-02, dt = 3.810e-04
step = 7, time = 2.066e-03 dt = 3.810e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 1, |resid| = 2.200e-13@ (2 ,0 ,0 ), rate = 7.905e+11
EBMultigrid::solve iter = 7, |resid| = 7.287e-09@ (0 ,0 ,0 ), rate = 3.167e+01
mac projecting advection velocity
EBMultigrid::solve iter = 2, |resid| = 6.264e-02@ (0 ,0 ,0 ), rate = 4.815e+01
EBMultigrid::solve iter = 4, |resid| = 2.534e-04@ (0 ,0 ,0 ), rate = 3.696e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.290e+02@ (0 ,3 ,3 )
mac projecting advection velocity
EBMultigrid::solve iter = 3, |resid| = 9.367e-03@ (0 ,0 ,0 ), rate = 4.209e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.290e+02@ (0 ,3 ,3 )
EBMultigrid:solve: final     |resid| = 1.183e-12@ (2 ,63,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.739e-01@ (1 ,63,5 )
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,2 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.012e+01@(0 ,1 ,1 ),8.155e-01@(1 ,0 ,5 ),8.155e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 4.646e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.646e+02@ (1 ,1 ,1 )
EBMultigrid:solve: final     |resid| = 2.336e-10@ (0 ,63,63)
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.339e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 1, |resid| = 2.326e+01@ (0 ,0 ,0 ), rate = 3.563e+01
EBMultigrid::solve iter = 3, |resid| = 1.383e-03@ (0 ,63,63), rate = 4.530e+01
EBMultigrid::solve iter = 5, |resid| = 7.493e-06@ (0 ,0 ,0 ), rate = 3.382e+01
EBMultigrid::solve iter = 1, |resid| = 2.326e+01@ (0 ,0 ,0 ), rate = 3.563e+01
EBMultigrid::solve iter = 4, |resid| = 2.534e-04@ (0 ,0 ,0 ), rate = 3.696e+01
EBMultigrid::solve iter = 1, |resid| = 2.200e-13@ (2 ,0 ,0 ), rate = 7.905e+11
EBMultigrid::solve iter = 1, |resid| = 3.016e+00@ (0 ,0 ,0 ), rate = 1.540e+02
EBMultigrid:solve: final     |resid| = 1.182e-12@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.739e-01@ (1 ,63,5 )
EBMultigrid::solve iter = 2, |resid| = 3.942e-01@ (0 ,0 ,0 ), rate = 5.901e+01
EBMultigrid::solve iter = 4, |resid| = 3.720e-05@ (0 ,63,63), rate = 3.718e+01
EBMultigrid::solve iter = 6, |resid| = 2.308e-07@ (0 ,0 ,0 ), rate = 3.247e+01
EBMultigrid::solve iter = 2, |resid| = 3.942e-01@ (0 ,0 ,0 ), rate = 5.901e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,4 )
calling heat solver for variable 2
EBMultigrid::solve iter = 5, |resid| = 7.493e-06@ (0 ,0 ,0 ), rate = 3.382e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.739e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 2, |resid| = 6.264e-02@ (0 ,0 ,0 ), rate = 4.815e+01
EBMultigrid::solve iter = 5, |resid| = 1.096e-06@ (0 ,63,63), rate = 3.395e+01
EBMultigrid::solve iter = 1, |resid| = 2.200e-13@ (2 ,0 ,0 ), rate = 7.905e+11
EBMultigrid::solve iter = 3, |resid| = 9.367e-03@ (0 ,0 ,0 ), rate = 4.209e+01
EBMultigrid::solve iter = 3, |resid| = 9.367e-03@ (0 ,0 ,0 ), rate = 4.209e+01
EBMultigrid::solve iter = 7, |resid| = 7.288e-09@ (0 ,0 ,0 ), rate = 3.167e+01
EBMultigrid::solve iter = 6, |resid| = 2.308e-07@ (0 ,0 ,0 ), rate = 3.247e+01
EBMultigrid::solve iter = 1, |resid| = 2.200e-13@ (2 ,0 ,0 ), rate = 7.905e+11
EBMultigrid::solve iter = 6, |resid| = 3.401e-08@ (0 ,63,63), rate = 3.221e+01
EBMultigrid::solve iter = 3, |resid| = 1.383e-03@ (0 ,63,63), rate = 4.530e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,3 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.739e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 4, |resid| = 2.534e-04@ (0 ,0 ,0 ), rate = 3.696e+01
EBMultigrid::solve iter = 4, |resid| = 2.534e-04@ (0 ,0 ,0 ), rate = 3.696e+01
EBMultigrid:solve: final     |resid| = 2.334e-10@ (0 ,0 ,0 )
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,1 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 7, |resid| = 7.287e-09@ (0 ,0 ,0 ), rate = 3.167e+01
EBMultigrid::solve iter = 7, |resid| = 1.088e-09@ (0 ,0 ,0 ), rate = 3.125e+01
EBCCProjector::project: |input velo|max = (2.012e+01@(0 ,1 ,1 ),8.155e-01@(1 ,0 ,5 ),8.155e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 4.646e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.646e+02@ (1 ,1 ,1 )
calling heat solver for variable 0
EBMultigrid::solve iter = 4, |resid| = 3.720e-05@ (0 ,63,63), rate = 3.718e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.339e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 1, |resid| = 2.200e-13@ (2 ,0 ,0 ), rate = 7.905e+11
EBMultigrid::solve iter = 5, |resid| = 7.493e-06@ (0 ,0 ,0 ), rate = 3.382e+01
EBMultigrid:solve: final     |resid| = 2.340e-10@ (0 ,63,63)
EBMultigrid::solve iter = 5, |resid| = 7.493e-06@ (0 ,0 ,0 ), rate = 3.382e+01
EBMultigrid:solve: final     |resid| = 3.553e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 3.468e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 1, |resid| = 3.016e+00@ (0 ,0 ,0 ), rate = 1.540e+02
EBLevelCCProjector::project:|gph|max = (8.506e-01@(0 ,31,32),2.445e-01@(1 ,63,5 ),2.445e-01@(1 ,5 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid:solve: final     |resid| = 1.183e-12@ (2 ,63,63)
calling heat solver for variable 1
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.739e-01@ (1 ,63,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.339e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 5, |resid| = 1.096e-06@ (0 ,63,63), rate = 3.395e+01
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.932e+01, dx = 1.562e-02, dt = 4.044e-04
step = 8, time = 2.447e-03 dt = 4.044e-04
advancing velocity and pressure fields 
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,2 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.012e+01@(0 ,1 ,1 ),8.155e-01@(1 ,0 ,5 ),8.155e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 4.646e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.646e+02@ (1 ,1 ,1 )
mac projecting advection velocity
EBMultigrid::solve iter = 6, |resid| = 2.308e-07@ (0 ,0 ,0 ), rate = 3.247e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.982e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 6, |resid| = 2.308e-07@ (0 ,0 ,0 ), rate = 3.247e+01
EBMultigrid::solve iter = 6, |resid| = 3.401e-08@ (0 ,63,63), rate = 3.221e+01
EBMultigrid::solve iter = 2, |resid| = 6.264e-02@ (0 ,0 ,0 ), rate = 4.815e+01
EBMultigrid:solve: final     |resid| = 1.183e-12@ (2 ,63,63)
calling heat solver for variable 1
EBMultigrid::solve iter = 1, |resid| = 2.200e-13@ (2 ,0 ,0 ), rate = 7.905e+11
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.739e-01@ (1 ,63,5 )
EBMultigrid::solve iter = 1, |resid| = 2.183e+01@ (0 ,0 ,0 ), rate = 3.656e+01
EBMultigrid::solve iter = 1, |resid| = 3.016e+00@ (0 ,0 ,0 ), rate = 1.540e+02
EBMultigrid::solve iter = 7, |resid| = 7.288e-09@ (0 ,0 ,0 ), rate = 3.166e+01
EBMultigrid::solve iter = 7, |resid| = 7.288e-09@ (0 ,0 ,0 ), rate = 3.166e+01
EBMultigrid::solve iter = 7, |resid| = 1.088e-09@ (0 ,63,63), rate = 3.125e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,2 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.739e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 3, |resid| = 1.383e-03@ (0 ,63,63), rate = 4.530e+01
EBMultigrid::solve iter = 1, |resid| = 2.200e-13@ (2 ,0 ,0 ), rate = 7.905e+11
EBMultigrid::solve iter = 2, |resid| = 3.689e-01@ (0 ,0 ,0 ), rate = 5.918e+01
EBMultigrid::solve iter = 2, |resid| = 6.264e-02@ (0 ,0 ,0 ), rate = 4.815e+01
EBMultigrid:solve: final     |resid| = 2.334e-10@ (0 ,0 ,0 )
EBMultigrid:solve: final     |resid| = 2.336e-10@ (0 ,0 ,0 )
EBMultigrid:solve: final     |resid| = 3.553e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 3.468e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 3, |resid| = 1.383e-03@ (0 ,63,63), rate = 4.530e+01
EBLevelCCProjector::project:|gph|max = (8.506e-01@(0 ,31,32),2.445e-01@(1 ,63,5 ),2.445e-01@(1 ,5 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.339e+00@ (0 ,63,0 )
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.339e+00@ (0 ,63,0 )
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.932e+01, dx = 1.562e-02, dt = 4.044e-04
step = 8, time = 2.447e-03 dt = 4.044e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 1, |resid| = 2.200e-13@ (2 ,0 ,0 ), rate = 7.905e+11
EBMultigrid::solve iter = 4, |resid| = 3.720e-05@ (0 ,63,63), rate = 3.718e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,2 )
calling heat solver for variable 2
EBMultigrid::solve iter = 3, |resid| = 8.751e-03@ (0 ,0 ,0 ), rate = 4.216e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.739e-01@ (1 ,5 ,0 )
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.982e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 4, |resid| = 3.720e-05@ (0 ,63,63), rate = 3.718e+01
EBMultigrid:solve: final     |resid| = 1.183e-12@ (2 ,63,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.739e-01@ (1 ,63,5 )
EBMultigrid:solve: final     |resid| = 1.183e-12@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.739e-01@ (1 ,63,5 )
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,2 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (2.012e+01@(0 ,1 ,1 ),8.155e-01@(1 ,0 ,5 ),8.155e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 4, |resid| = 2.362e-04@ (0 ,0 ,0 ), rate = 3.705e+01
EBMultigrid::solve iter = 5, |resid| = 1.096e-06@ (0 ,63,63), rate = 3.395e+01
EBMultigrid::solve iter = 1, |resid| = 2.200e-13@ (2 ,0 ,0 ), rate = 7.905e+11
EBCCProjector::project: |kappa DiVU|max  = 4.646e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.646e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 1, |resid| = 2.183e+01@ (0 ,0 ,0 ), rate = 3.656e+01
EBMultigrid::solve iter = 5, |resid| = 1.096e-06@ (0 ,63,63), rate = 3.395e+01
EBMultigrid::solve iter = 1, |resid| = 2.200e-13@ (2 ,0 ,0 ), rate = 7.905e+11
EBMultigrid::solve iter = 1, |resid| = 2.200e-13@ (2 ,0 ,0 ), rate = 7.905e+11
EBMultigrid::solve iter = 5, |resid| = 6.982e-06@ (0 ,0 ,63), rate = 3.383e+01
EBMultigrid::solve iter = 6, |resid| = 3.401e-08@ (0 ,63,63), rate = 3.221e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,2 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 1, |resid| = 3.016e+00@ (0 ,0 ,0 ), rate = 1.540e+02
EBCCProjector::project: |input velo|max = (2.012e+01@(0 ,1 ,1 ),8.155e-01@(1 ,0 ,5 ),8.155e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 4.646e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.646e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 2, |resid| = 3.689e-01@ (0 ,0 ,0 ), rate = 5.918e+01
EBMultigrid::solve iter = 6, |resid| = 3.401e-08@ (0 ,63,63), rate = 3.221e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,4 )
calling heat solver for variable 2
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,2 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.739e-01@ (1 ,5 ,0 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.739e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 6, |resid| = 2.141e-07@ (0 ,0 ,0 ), rate = 3.261e+01
EBMultigrid::solve iter = 7, |resid| = 1.088e-09@ (0 ,63,63), rate = 3.125e+01
EBMultigrid::solve iter = 2, |resid| = 6.264e-02@ (0 ,0 ,0 ), rate = 4.815e+01
EBMultigrid::solve iter = 1, |resid| = 3.016e+00@ (0 ,0 ,0 ), rate = 1.540e+02
EBMultigrid::solve iter = 3, |resid| = 8.751e-03@ (0 ,0 ,0 ), rate = 4.216e+01
EBMultigrid::solve iter = 7, |resid| = 1.088e-09@ (0 ,0 ,0 ), rate = 3.125e+01
EBMultigrid::solve iter = 1, |resid| = 2.200e-13@ (2 ,0 ,0 ), rate = 7.905e+11
EBMultigrid::solve iter = 1, |resid| = 2.200e-13@ (2 ,0 ,0 ), rate = 7.905e+11
EBMultigrid::solve iter = 7, |resid| = 6.745e-09@ (0 ,0 ,0 ), rate = 3.175e+01
EBMultigrid:solve: final     |resid| = 3.553e-11@ (0 ,0 ,0 )
EBMultigrid::solve iter = 3, |resid| = 1.383e-03@ (0 ,63,63), rate = 4.530e+01
EBMultigrid::solve iter = 2, |resid| = 6.264e-02@ (0 ,0 ,0 ), rate = 4.815e+01
EBCCProjector::project: |phi|max  = 3.468e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (8.506e-01@(0 ,31,32),2.445e-01@(1 ,63,5 ),2.445e-01@(1 ,5 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid:solve: final     |resid| = 2.158e-10@ (0 ,63,63)
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.932e+01, dx = 1.562e-02, dt = 4.044e-04
step = 8, time = 2.447e-03 dt = 4.044e-04
advancing velocity and pressure fields 
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.085e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 4, |resid| = 2.362e-04@ (0 ,0 ,0 ), rate = 3.705e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,2 ,0 )
cc projecting vel + gphi*dt
EBMultigrid:solve: final     |resid| = 3.550e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 3.468e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBCCProjector::project: |input velo|max = (2.012e+01@(0 ,1 ,1 ),8.155e-01@(1 ,0 ,5 ),8.155e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,2 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |kappa DiVU|max  = 4.646e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.646e+02@ (1 ,1 ,1 )
mac projecting advection velocity
EBLevelCCProjector::project:|gph|max = (8.506e-01@(0 ,31,32),2.445e-01@(1 ,63,5 ),2.445e-01@(1 ,5 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 4, |resid| = 3.720e-05@ (0 ,63,63), rate = 3.718e+01
EBMultigrid::solve iter = 3, |resid| = 1.383e-03@ (0 ,63,63), rate = 4.530e+01
EBCCProjector::project: |input velo|max = (2.012e+01@(0 ,1 ,1 ),8.155e-01@(1 ,0 ,5 ),8.155e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 5, |resid| = 6.982e-06@ (0 ,0 ,63), rate = 3.383e+01
EBCCProjector::project: |kappa DiVU|max  = 4.646e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.982e+02@ (0 ,3 ,3 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.646e+02@ (1 ,1 ,1 )
EBMultigrid:solve: final     |resid| = 2.061e-12@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.764e-01@ (1 ,63,5 )
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.932e+01, dx = 1.562e-02, dt = 4.044e-04
step = 8, time = 2.447e-03 dt = 4.044e-04
advancing velocity and pressure fields 
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.982e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 1, |resid| = 3.016e+00@ (0 ,0 ,0 ), rate = 1.540e+02
EBMultigrid::solve iter = 6, |resid| = 2.141e-07@ (0 ,0 ,0 ), rate = 3.261e+01
EBMultigrid::solve iter = 1, |resid| = 3.016e+00@ (0 ,0 ,0 ), rate = 1.540e+02
EBMultigrid::solve iter = 5, |resid| = 1.096e-06@ (0 ,63,63), rate = 3.395e+01
EBMultigrid::solve iter = 4, |resid| = 3.720e-05@ (0 ,63,63), rate = 3.718e+01
EBMultigrid::solve iter = 1, |resid| = 2.183e+01@ (0 ,0 ,0 ), rate = 3.656e+01
EBMultigrid::solve iter = 1, |resid| = 3.159e-13@ (2 ,0 ,0 ), rate = 5.584e+11
EBMultigrid::solve iter = 1, |resid| = 2.183e+01@ (0 ,0 ,0 ), rate = 3.656e+01
EBMultigrid::solve iter = 2, |resid| = 6.264e-02@ (0 ,0 ,0 ), rate = 4.815e+01
EBMultigrid::solve iter = 7, |resid| = 6.745e-09@ (0 ,0 ,0 ), rate = 3.174e+01
EBMultigrid::solve iter = 2, |resid| = 6.264e-02@ (0 ,0 ,0 ), rate = 4.815e+01
EBMultigrid::solve iter = 6, |resid| = 3.401e-08@ (0 ,63,63), rate = 3.221e+01
EBMultigrid::solve iter = 5, |resid| = 1.096e-06@ (0 ,63,63), rate = 3.395e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,1 )
calling heat solver for variable 2
EBMultigrid::solve iter = 2, |resid| = 3.689e-01@ (0 ,0 ,0 ), rate = 5.918e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.764e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 2, |resid| = 3.689e-01@ (0 ,0 ,0 ), rate = 5.918e+01
EBMultigrid::solve iter = 3, |resid| = 1.383e-03@ (0 ,63,63), rate = 4.530e+01
EBMultigrid:solve: final     |resid| = 2.159e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 3, |resid| = 1.383e-03@ (0 ,63,63), rate = 4.530e+01
EBMultigrid::solve iter = 7, |resid| = 1.088e-09@ (0 ,63,63), rate = 3.125e+01
calling heat solver for variable 0
EBMultigrid::solve iter = 1, |resid| = 3.158e-13@ (2 ,0 ,0 ), rate = 5.585e+11
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.085e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 3, |resid| = 8.751e-03@ (0 ,0 ,0 ), rate = 4.216e+01
EBMultigrid::solve iter = 3, |resid| = 8.751e-03@ (0 ,0 ,0 ), rate = 4.216e+01
EBMultigrid::solve iter = 6, |resid| = 3.401e-08@ (0 ,63,63), rate = 3.221e+01
EBMultigrid::solve iter = 4, |resid| = 3.720e-05@ (0 ,63,63), rate = 3.718e+01
EBMultigrid:solve: final     |resid| = 3.558e-11@ (0 ,63,63)
EBCCProjector::project: |phi|max  = 3.468e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 4, |resid| = 3.720e-05@ (0 ,63,63), rate = 3.718e+01
EBLevelCCProjector::project:|gph|max = (8.506e-01@(0 ,31,32),2.445e-01@(1 ,63,5 ),2.445e-01@(1 ,5 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,1 ,0 )
cc projecting vel + gphi*dt
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid:solve: final     |resid| = 2.061e-12@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve iter = 4, |resid| = 2.362e-04@ (0 ,0 ,0 ), rate = 3.705e+01
EBMultigrid::solve iter = 7, |resid| = 1.088e-09@ (0 ,0 ,0 ), rate = 3.125e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.764e-01@ (1 ,63,5 )
EBCCProjector::project: |input velo|max = (1.893e+01@(0 ,1 ,1 ),9.630e-01@(1 ,63,5 ),9.630e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
maxvel = 1.932e+01, dx = 1.562e-02, dt = 4.044e-04
step = 8, time = 2.447e-03 dt = 4.044e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 4, |resid| = 2.362e-04@ (0 ,0 ,0 ), rate = 3.705e+01
EBCCProjector::project: |kappa DiVU|max  = 4.197e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.197e+02@ (1 ,1 ,1 )
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.982e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 5, |resid| = 1.096e-06@ (0 ,63,63), rate = 3.395e+01
EBMultigrid::solve iter = 5, |resid| = 1.096e-06@ (0 ,63,63), rate = 3.395e+01
EBMultigrid::solve iter = 5, |resid| = 6.982e-06@ (0 ,0 ,63), rate = 3.383e+01
EBMultigrid:solve: final     |resid| = 3.558e-11@ (0 ,63,63)
EBCCProjector::project: |phi|max  = 3.468e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (8.506e-01@(0 ,31,32),2.445e-01@(1 ,63,5 ),2.445e-01@(1 ,5 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 1, |resid| = 2.640e+00@ (0 ,0 ,0 ), rate = 1.590e+02
EBMultigrid::solve iter = 1, |resid| = 3.159e-13@ (2 ,63,63), rate = 5.584e+11
EBMultigrid::solve iter = 5, |resid| = 6.982e-06@ (0 ,0 ,63), rate = 3.383e+01
EBMultigrid::solve iter = 1, |resid| = 2.183e+01@ (0 ,0 ,0 ), rate = 3.656e+01
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.932e+01, dx = 1.562e-02, dt = 4.044e-04
step = 8, time = 2.447e-03 dt = 4.044e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 6, |resid| = 3.401e-08@ (0 ,63,63), rate = 3.221e+01
EBMultigrid::solve iter = 6, |resid| = 2.141e-07@ (0 ,0 ,0 ), rate = 3.261e+01
mac projecting advection velocity
EBMultigrid::solve iter = 6, |resid| = 3.401e-08@ (0 ,63,63), rate = 3.221e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.982e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 2, |resid| = 5.543e-02@ (0 ,0 ,0 ), rate = 4.762e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,2 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.764e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 2, |resid| = 3.689e-01@ (0 ,0 ,0 ), rate = 5.918e+01
EBMultigrid::solve iter = 6, |resid| = 2.141e-07@ (0 ,0 ,0 ), rate = 3.261e+01
EBMultigrid::solve iter = 7, |resid| = 1.088e-09@ (0 ,0 ,0 ), rate = 3.125e+01
EBMultigrid::solve iter = 7, |resid| = 6.745e-09@ (0 ,0 ,0 ), rate = 3.175e+01
EBMultigrid::solve iter = 1, |resid| = 2.183e+01@ (0 ,0 ,0 ), rate = 3.656e+01
EBMultigrid::solve iter = 7, |resid| = 1.088e-09@ (0 ,0 ,0 ), rate = 3.125e+01
EBMultigrid::solve iter = 3, |resid| = 1.234e-03@ (0 ,63,63), rate = 4.494e+01
EBMultigrid::solve iter = 3, |resid| = 8.751e-03@ (0 ,0 ,0 ), rate = 4.216e+01
EBMultigrid::solve iter = 1, |resid| = 3.159e-13@ (2 ,63,63), rate = 5.584e+11
EBMultigrid::solve iter = 7, |resid| = 6.744e-09@ (0 ,0 ,0 ), rate = 3.175e+01
EBMultigrid:solve: final     |resid| = 2.158e-10@ (0 ,0 ,0 )
EBMultigrid:solve: final     |resid| = 3.556e-11@ (0 ,63,63)
EBCCProjector::project: |phi|max  = 3.468e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 2, |resid| = 3.689e-01@ (0 ,0 ,0 ), rate = 5.918e+01
EBMultigrid::solve iter = 4, |resid| = 3.330e-05@ (0 ,63,63), rate = 3.704e+01
EBMultigrid::solve iter = 4, |resid| = 2.362e-04@ (0 ,0 ,0 ), rate = 3.705e+01
EBMultigrid:solve: final     |resid| = 3.561e-11@ (0 ,63,63)
EBLevelCCProjector::project:|gph|max = (8.506e-01@(0 ,31,32),2.445e-01@(1 ,63,5 ),2.445e-01@(1 ,5 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBCCProjector::project: |phi|max  = 3.468e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.085e+00@ (0 ,63,0 )
EBLevelCCProjector::project:|gph|max = (8.506e-01@(0 ,31,32),2.445e-01@(1 ,63,5 ),2.445e-01@(1 ,5 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,6 ,0 )
cc projecting vel + gphi*dt
EBMultigrid:solve: final     |resid| = 2.157e-10@ (0 ,63,63)
EBCCProjector::project: |input velo|max = (1.893e+01@(0 ,1 ,1 ),9.630e-01@(1 ,63,5 ),9.630e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 4.197e+02@(1 ,1 ,1 )
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.197e+02@ (1 ,1 ,1 )
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.932e+01, dx = 1.562e-02, dt = 4.044e-04
step = 8, time = 2.447e-03 dt = 4.044e-04
advancing velocity and pressure fields 
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.085e+00@ (0 ,63,0 )
maxvel = 1.932e+01, dx = 1.562e-02, dt = 4.044e-04
step = 8, time = 2.447e-03 dt = 4.044e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 3, |resid| = 8.751e-03@ (0 ,0 ,0 ), rate = 4.216e+01
mac projecting advection velocity
EBMultigrid::solve iter = 1, |resid| = 2.640e+00@ (0 ,0 ,0 ), rate = 1.590e+02
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.982e+02@ (0 ,3 ,3 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.982e+02@ (0 ,3 ,3 )
EBMultigrid:solve: final     |resid| = 2.061e-12@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.764e-01@ (1 ,63,5 )
EBMultigrid::solve iter = 5, |resid| = 9.829e-07@ (0 ,63,63), rate = 3.388e+01
EBMultigrid::solve iter = 5, |resid| = 6.982e-06@ (0 ,0 ,63), rate = 3.383e+01
EBMultigrid:solve: final     |resid| = 2.061e-12@ (2 ,63,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.764e-01@ (1 ,63,5 )
EBMultigrid::solve iter = 4, |resid| = 2.362e-04@ (0 ,0 ,0 ), rate = 3.705e+01
EBMultigrid::solve iter = 2, |resid| = 5.543e-02@ (0 ,0 ,0 ), rate = 4.762e+01
EBMultigrid::solve iter = 1, |resid| = 3.159e-13@ (2 ,0 ,0 ), rate = 5.584e+11
EBMultigrid::solve iter = 1, |resid| = 2.183e+01@ (0 ,0 ,0 ), rate = 3.656e+01
EBMultigrid::solve iter = 1, |resid| = 2.183e+01@ (0 ,0 ,0 ), rate = 3.656e+01
EBMultigrid::solve iter = 6, |resid| = 3.054e-08@ (0 ,63,63), rate = 3.219e+01
EBMultigrid::solve iter = 6, |resid| = 2.141e-07@ (0 ,0 ,0 ), rate = 3.261e+01
EBMultigrid::solve iter = 3, |resid| = 1.234e-03@ (0 ,63,63), rate = 4.494e+01
EBMultigrid::solve iter = 1, |resid| = 3.159e-13@ (2 ,0 ,0 ), rate = 5.584e+11
EBMultigrid::solve iter = 5, |resid| = 6.982e-06@ (0 ,0 ,63), rate = 3.383e+01
EBMultigrid::solve iter = 7, |resid| = 9.773e-10@ (0 ,0 ,0 ), rate = 3.124e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,3 )
calling heat solver for variable 2
EBMultigrid::solve iter = 2, |resid| = 3.689e-01@ (0 ,0 ,0 ), rate = 5.918e+01
EBMultigrid::solve iter = 2, |resid| = 3.689e-01@ (0 ,0 ,0 ), rate = 5.918e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.764e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 4, |resid| = 3.330e-05@ (0 ,63,63), rate = 3.704e+01
EBMultigrid::solve iter = 7, |resid| = 6.745e-09@ (0 ,0 ,0 ), rate = 3.175e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,1 )
calling heat solver for variable 2
EBMultigrid::solve iter = 6, |resid| = 2.141e-07@ (0 ,0 ,0 ), rate = 3.261e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.764e-01@ (1 ,5 ,0 )
EBMultigrid:solve: final     |resid| = 3.195e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 3.158e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (7.397e-01@(0 ,31,32),2.588e-01@(1 ,63,6 ),2.588e-01@(1 ,6 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.823e+01, dx = 1.562e-02, dt = 4.286e-04
step = 9, time = 2.851e-03 dt = 4.286e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 1, |resid| = 3.158e-13@ (2 ,0 ,0 ), rate = 5.585e+11
EBMultigrid::solve iter = 3, |resid| = 8.751e-03@ (0 ,0 ,0 ), rate = 4.216e+01
EBMultigrid::solve iter = 3, |resid| = 8.751e-03@ (0 ,0 ,0 ), rate = 4.216e+01
EBMultigrid::solve iter = 5, |resid| = 9.829e-07@ (0 ,63,63), rate = 3.388e+01
EBMultigrid:solve: final     |resid| = 2.152e-10@ (0 ,0 ,0 )
EBMultigrid::solve iter = 7, |resid| = 6.744e-09@ (0 ,0 ,0 ), rate = 3.175e+01
EBMultigrid::solve iter = 1, |resid| = 3.158e-13@ (2 ,0 ,0 ), rate = 5.585e+11
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.637e+02@ (0 ,3 ,3 )
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.085e+00@ (0 ,63,0 )
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,2 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 6, |resid| = 3.054e-08@ (0 ,63,63), rate = 3.219e+01
EBCCProjector::project: |input velo|max = (1.893e+01@(0 ,1 ,1 ),9.630e-01@(1 ,63,5 ),9.630e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 4, |resid| = 2.362e-04@ (0 ,0 ,0 ), rate = 3.705e+01
EBMultigrid::solve iter = 4, |resid| = 2.362e-04@ (0 ,0 ,0 ), rate = 3.705e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,2 ,0 )
cc projecting vel + gphi*dt
EBMultigrid:solve: final     |resid| = 2.156e-10@ (0 ,63,63)
EBCCProjector::project: |input velo|max = (1.893e+01@(0 ,1 ,1 ),9.630e-01@(1 ,63,5 ),9.630e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 4.197e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.197e+02@ (1 ,1 ,1 )
EBCCProjector::project: |kappa DiVU|max  = 4.197e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.197e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 1, |resid| = 2.030e+01@ (0 ,0 ,0 ), rate = 3.763e+01
EBMultigrid:solve: final     |resid| = 2.061e-12@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.764e-01@ (1 ,63,5 )
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.085e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 7, |resid| = 9.773e-10@ (0 ,0 ,0 ), rate = 3.125e+01
EBMultigrid::solve iter = 5, |resid| = 6.982e-06@ (0 ,0 ,63), rate = 3.383e+01
EBMultigrid::solve iter = 5, |resid| = 6.982e-06@ (0 ,0 ,63), rate = 3.383e+01
EBMultigrid::solve iter = 1, |resid| = 2.640e+00@ (0 ,0 ,0 ), rate = 1.590e+02
EBMultigrid::solve iter = 1, |resid| = 2.640e+00@ (0 ,0 ,0 ), rate = 1.590e+02
EBMultigrid::solve iter = 2, |resid| = 3.412e-01@ (0 ,0 ,0 ), rate = 5.948e+01
EBMultigrid:solve: final     |resid| = 2.061e-12@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid::solve iter = 1, |resid| = 3.159e-13@ (2 ,63,63), rate = 5.584e+11
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.764e-01@ (1 ,63,5 )
EBMultigrid:solve: final     |resid| = 3.192e-11@ (0 ,63,63)
EBMultigrid::solve iter = 6, |resid| = 2.141e-07@ (0 ,0 ,0 ), rate = 3.261e+01
EBMultigrid::solve iter = 6, |resid| = 2.141e-07@ (0 ,0 ,0 ), rate = 3.261e+01
EBMultigrid::solve iter = 2, |resid| = 5.543e-02@ (0 ,0 ,0 ), rate = 4.762e+01
EBCCProjector::project: |phi|max  = 3.158e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (7.397e-01@(0 ,31,32),2.588e-01@(1 ,63,6 ),2.588e-01@(1 ,6 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,7 )
calling heat solver for variable 2
maxvel = 1.823e+01, dx = 1.562e-02, dt = 4.286e-04
step = 9, time = 2.851e-03 dt = 4.286e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 2, |resid| = 5.543e-02@ (0 ,0 ,0 ), rate = 4.762e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.764e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 3, |resid| = 8.072e-03@ (0 ,0 ,0 ), rate = 4.228e+01
EBMultigrid::solve iter = 1, |resid| = 3.159e-13@ (2 ,63,63), rate = 5.584e+11
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.637e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 7, |resid| = 6.744e-09@ (0 ,0 ,0 ), rate = 3.175e+01
EBMultigrid::solve iter = 7, |resid| = 6.745e-09@ (0 ,0 ,0 ), rate = 3.175e+01
EBMultigrid::solve iter = 3, |resid| = 1.234e-03@ (0 ,63,63), rate = 4.494e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,2 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.764e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 3, |resid| = 1.234e-03@ (0 ,63,63), rate = 4.494e+01
EBMultigrid::solve iter = 1, |resid| = 3.159e-13@ (2 ,63,63), rate = 5.584e+11
EBMultigrid::solve iter = 4, |resid| = 2.241e-04@ (0 ,0 ,63), rate = 3.602e+01
EBMultigrid::solve iter = 1, |resid| = 2.030e+01@ (0 ,0 ,0 ), rate = 3.763e+01
EBMultigrid:solve: final     |resid| = 2.158e-10@ (0 ,0 ,0 )
EBMultigrid:solve: final     |resid| = 2.153e-10@ (0 ,63,63)
EBMultigrid::solve iter = 4, |resid| = 3.330e-05@ (0 ,63,63), rate = 3.704e+01
calling heat solver for variable 0
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.085e+00@ (0 ,63,0 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.085e+00@ (0 ,63,0 )
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,3 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 1, |resid| = 3.159e-13@ (2 ,63,63), rate = 5.583e+11
EBMultigrid::solve iter = 5, |resid| = 6.654e-06@ (0 ,0 ,63), rate = 3.368e+01
EBMultigrid::solve iter = 4, |resid| = 3.330e-05@ (0 ,63,63), rate = 3.704e+01
EBCCProjector::project: |input velo|max = (1.893e+01@(0 ,1 ,1 ),9.630e-01@(1 ,63,5 ),9.630e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 4.197e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.197e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 2, |resid| = 3.412e-01@ (0 ,0 ,0 ), rate = 5.948e+01
EBMultigrid::solve iter = 5, |resid| = 9.829e-07@ (0 ,63,63), rate = 3.388e+01
EBMultigrid:solve: final     |resid| = 2.061e-12@ (2 ,0 ,0 )
calling heat solver for variable 1
EBMultigrid:solve: final     |resid| = 2.061e-12@ (2 ,63,63)
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.764e-01@ (1 ,63,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.764e-01@ (1 ,63,5 )
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,11,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 6, |resid| = 2.026e-07@ (0 ,0 ,63), rate = 3.285e+01
EBMultigrid::solve iter = 5, |resid| = 9.829e-07@ (0 ,63,63), rate = 3.388e+01
EBMultigrid::solve iter = 1, |resid| = 2.640e+00@ (0 ,0 ,0 ), rate = 1.590e+02
EBCCProjector::project: |input velo|max = (1.893e+01@(0 ,1 ,1 ),9.630e-01@(1 ,63,5 ),9.630e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 4.197e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.197e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 3, |resid| = 8.072e-03@ (0 ,0 ,0 ), rate = 4.228e+01
EBMultigrid::solve iter = 6, |resid| = 3.054e-08@ (0 ,63,63), rate = 3.219e+01
EBMultigrid::solve iter = 1, |resid| = 3.159e-13@ (2 ,0 ,0 ), rate = 5.584e+11
EBMultigrid::solve iter = 1, |resid| = 3.159e-13@ (2 ,0 ,0 ), rate = 5.584e+11
EBMultigrid::solve iter = 7, |resid| = 6.290e-09@ (0 ,0 ,63), rate = 3.221e+01
EBMultigrid::solve iter = 6, |resid| = 3.054e-08@ (0 ,63,63), rate = 3.219e+01
EBMultigrid::solve iter = 2, |resid| = 5.543e-02@ (0 ,0 ,0 ), rate = 4.762e+01
EBMultigrid::solve iter = 1, |resid| = 2.640e+00@ (0 ,0 ,0 ), rate = 1.590e+02
EBMultigrid::solve iter = 7, |resid| = 9.773e-10@ (0 ,0 ,0 ), rate = 3.125e+01
EBMultigrid::solve iter = 4, |resid| = 2.241e-04@ (0 ,0 ,63), rate = 3.602e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,1 )
calling heat solver for variable 2
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,7 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.764e-01@ (1 ,5 ,0 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.764e-01@ (1 ,5 ,0 )
EBMultigrid:solve: final     |resid| = 1.983e-10@ (0 ,0 ,63)
EBMultigrid::solve iter = 7, |resid| = 9.774e-10@ (0 ,63,63), rate = 3.124e+01
EBMultigrid::solve iter = 3, |resid| = 1.234e-03@ (0 ,63,63), rate = 4.494e+01
EBMultigrid::solve iter = 2, |resid| = 5.543e-02@ (0 ,0 ,0 ), rate = 4.762e+01
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.850e+00@ (0 ,63,0 )
EBMultigrid:solve: final     |resid| = 3.192e-11@ (0 ,63,63)
EBMultigrid::solve iter = 5, |resid| = 6.654e-06@ (0 ,0 ,63), rate = 3.368e+01
EBCCProjector::project: |phi|max  = 3.158e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 1, |resid| = 3.159e-13@ (2 ,63,63), rate = 5.584e+11
EBMultigrid::solve iter = 1, |resid| = 3.159e-13@ (2 ,0 ,0 ), rate = 5.584e+11
EBLevelCCProjector::project:|gph|max = (7.397e-01@(0 ,31,32),2.588e-01@(1 ,63,6 ),2.588e-01@(1 ,6 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.823e+01, dx = 1.562e-02, dt = 4.286e-04
step = 9, time = 2.851e-03 dt = 4.286e-04
advancing velocity and pressure fields 
EBMultigrid:solve: final     |resid| = 3.192e-11@ (0 ,63,63)
EBMultigrid::solve iter = 4, |resid| = 3.330e-05@ (0 ,63,63), rate = 3.704e+01
EBMultigrid::solve iter = 3, |resid| = 1.234e-03@ (0 ,63,63), rate = 4.494e+01
EBCCProjector::project: |phi|max  = 3.158e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 1, |resid| = 3.317e-12@ (2 ,0 ,0 ), rate = 5.577e+11
EBLevelCCProjector::project:|gph|max = (7.397e-01@(0 ,31,32),2.588e-01@(1 ,63,6 ),2.588e-01@(1 ,6 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.823e+01, dx = 1.562e-02, dt = 4.286e-04
step = 9, time = 2.851e-03 dt = 4.286e-04
advancing velocity and pressure fields 
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.637e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 6, |resid| = 2.026e-07@ (0 ,0 ,63), rate = 3.285e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,12,0 )
cc projecting vel + gphi*dt
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,5 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (1.893e+01@(0 ,1 ,1 ),9.630e-01@(1 ,63,5 ),9.630e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |input velo|max = (1.893e+01@(0 ,1 ,1 ),9.630e-01@(1 ,63,5 ),9.630e-01@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 4.197e+02@(1 ,1 ,1 )
EBCCProjector::project: |kappa DiVU|max  = 4.197e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.197e+02@ (1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.197e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 1, |resid| = 2.030e+01@ (0 ,0 ,0 ), rate = 3.763e+01
mac projecting advection velocity
EBMultigrid::solve iter = 5, |resid| = 9.829e-07@ (0 ,63,63), rate = 3.388e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.637e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 4, |resid| = 3.330e-05@ (0 ,63,63), rate = 3.704e+01
EBMultigrid:solve: final     |resid| = 3.553e-15@ (0 ,5 ,1 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.736e-01@ (1 ,63,5 )
EBMultigrid::solve iter = 7, |resid| = 6.290e-09@ (0 ,0 ,63), rate = 3.220e+01
EBMultigrid::solve iter = 1, |resid| = 2.640e+00@ (0 ,0 ,0 ), rate = 1.590e+02
EBMultigrid::solve iter = 1, |resid| = 2.640e+00@ (0 ,0 ,0 ), rate = 1.590e+02
EBMultigrid::solve iter = 2, |resid| = 3.412e-01@ (0 ,0 ,0 ), rate = 5.948e+01
EBMultigrid:solve: final     |resid| = 1.982e-10@ (0 ,0 ,63)
EBMultigrid::solve iter = 6, |resid| = 3.054e-08@ (0 ,63,63), rate = 3.219e+01
EBMultigrid::solve iter = 1, |resid| = 2.030e+01@ (0 ,0 ,0 ), rate = 3.763e+01
EBMultigrid::solve iter = 5, |resid| = 9.829e-07@ (0 ,63,63), rate = 3.388e+01
EBMultigrid::solve iter = 1, |resid| = 4.327e-13@ (2 ,0 ,0 ), rate = 4.012e+11
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.850e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 2, |resid| = 5.543e-02@ (0 ,0 ,0 ), rate = 4.762e+01
EBMultigrid::solve iter = 2, |resid| = 5.543e-02@ (0 ,0 ,0 ), rate = 4.762e+01
EBMultigrid::solve iter = 3, |resid| = 8.072e-03@ (0 ,0 ,0 ), rate = 4.228e+01
EBMultigrid::solve iter = 1, |resid| = 3.317e-12@ (2 ,0 ,0 ), rate = 5.577e+11
EBMultigrid::solve iter = 7, |resid| = 9.773e-10@ (0 ,63,63), rate = 3.124e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,4 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.736e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 2, |resid| = 3.412e-01@ (0 ,0 ,0 ), rate = 5.948e+01
EBMultigrid::solve iter = 6, |resid| = 3.054e-08@ (0 ,63,63), rate = 3.219e+01
EBMultigrid::solve iter = 3, |resid| = 1.234e-03@ (0 ,63,63), rate = 4.494e+01
EBMultigrid::solve iter = 3, |resid| = 1.234e-03@ (0 ,63,63), rate = 4.494e+01
EBMultigrid::solve iter = 4, |resid| = 2.241e-04@ (0 ,0 ,63), rate = 3.602e+01
EBMultigrid:solve: final     |resid| = 3.553e-15@ (0 ,7 ,1 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.736e-01@ (1 ,63,5 )
EBMultigrid:solve: final     |resid| = 3.195e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 3.158e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 1, |resid| = 4.327e-13@ (2 ,0 ,0 ), rate = 4.012e+11
EBMultigrid::solve iter = 3, |resid| = 8.072e-03@ (0 ,0 ,0 ), rate = 4.228e+01
EBMultigrid::solve iter = 7, |resid| = 9.773e-10@ (0 ,63,63), rate = 3.124e+01
EBLevelCCProjector::project:|gph|max = (7.397e-01@(0 ,31,32),2.588e-01@(1 ,63,6 ),2.588e-01@(1 ,6 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.823e+01, dx = 1.562e-02, dt = 4.286e-04
step = 9, time = 2.851e-03 dt = 4.286e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 4, |resid| = 3.330e-05@ (0 ,63,63), rate = 3.704e+01
EBMultigrid::solve iter = 4, |resid| = 3.330e-05@ (0 ,63,63), rate = 3.704e+01
EBMultigrid::solve iter = 5, |resid| = 6.654e-06@ (0 ,0 ,63), rate = 3.368e+01
EBMultigrid::solve iter = 1, |resid| = 4.327e-13@ (2 ,0 ,0 ), rate = 4.012e+11
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.637e+02@ (0 ,3 ,3 )
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,1 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 4, |resid| = 2.241e-04@ (0 ,0 ,63), rate = 3.602e+01
EBMultigrid:solve: final     |resid| = 3.192e-11@ (0 ,63,63)
EBCCProjector::project: |input velo|max = (1.782e+01@(0 ,1 ,1 ),1.107e+00@(1 ,63,5 ),1.107e+00@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |phi|max  = 3.158e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBCCProjector::project: |kappa DiVU|max  = 3.818e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.818e+02@ (1 ,1 ,1 )
EBLevelCCProjector::project:|gph|max = (7.397e-01@(0 ,31,32),2.588e-01@(1 ,63,6 ),2.588e-01@(1 ,6 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 1, |resid| = 2.030e+01@ (0 ,0 ,0 ), rate = 3.763e+01
advancing species advection/diffusion
getting reaction rates and evolving species
EBMultigrid::solve iter = 5, |resid| = 6.654e-06@ (0 ,0 ,63), rate = 3.368e+01
maxvel = 1.823e+01, dx = 1.562e-02, dt = 4.286e-04
step = 9, time = 2.851e-03 dt = 4.286e-04
advancing velocity and pressure fields 
EBMultigrid::solve iter = 5, |resid| = 9.829e-07@ (0 ,63,63), rate = 3.388e+01
EBMultigrid::solve iter = 5, |resid| = 9.829e-07@ (0 ,63,63), rate = 3.388e+01
EBMultigrid::solve iter = 6, |resid| = 2.026e-07@ (0 ,0 ,63), rate = 3.285e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,4 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.736e-01@ (1 ,5 ,0 )
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.637e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 1, |resid| = 2.354e+00@ (0 ,0 ,0 ), rate = 1.622e+02
EBMultigrid::solve iter = 6, |resid| = 3.054e-08@ (0 ,63,63), rate = 3.219e+01
EBMultigrid::solve iter = 2, |resid| = 3.412e-01@ (0 ,0 ,0 ), rate = 5.948e+01
EBMultigrid::solve iter = 6, |resid| = 2.026e-07@ (0 ,0 ,63), rate = 3.285e+01
EBMultigrid::solve iter = 1, |resid| = 2.030e+01@ (0 ,0 ,0 ), rate = 3.763e+01
EBMultigrid::solve iter = 6, |resid| = 3.054e-08@ (0 ,0 ,0 ), rate = 3.219e+01
EBMultigrid::solve iter = 7, |resid| = 6.290e-09@ (0 ,0 ,63), rate = 3.220e+01
EBMultigrid::solve iter = 1, |resid| = 4.327e-13@ (2 ,63,63), rate = 4.012e+11
EBMultigrid::solve iter = 7, |resid| = 9.773e-10@ (0 ,0 ,0 ), rate = 3.124e+01
EBMultigrid::solve iter = 2, |resid| = 4.975e-02@ (0 ,0 ,0 ), rate = 4.732e+01
EBMultigrid::solve iter = 3, |resid| = 8.072e-03@ (0 ,0 ,0 ), rate = 4.228e+01
EBMultigrid::solve iter = 7, |resid| = 6.290e-09@ (0 ,0 ,63), rate = 3.220e+01
EBMultigrid::solve iter = 2, |resid| = 3.412e-01@ (0 ,0 ,0 ), rate = 5.948e+01
EBMultigrid::solve iter = 7, |resid| = 9.773e-10@ (0 ,63,63), rate = 3.124e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,4 ,0 )
cc projecting vel + gphi*dt
EBMultigrid:solve: final     |resid| = 1.982e-10@ (0 ,0 ,63)
EBCCProjector::project: |input velo|max = (1.782e+01@(0 ,1 ,1 ),1.107e+00@(1 ,63,5 ),1.107e+00@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid:solve: final     |resid| = 3.189e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 3.158e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBCCProjector::project: |kappa DiVU|max  = 3.818e+02@(1 ,1 ,1 )
EBMultigrid::solve iter = 3, |resid| = 1.114e-03@ (0 ,63,63), rate = 4.465e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.818e+02@ (1 ,1 ,1 )
EBMultigrid:solve: final     |resid| = 3.195e-11@ (0 ,63,63)
EBMultigrid::solve iter = 4, |resid| = 2.241e-04@ (0 ,0 ,63), rate = 3.602e+01
EBCCProjector::project: |phi|max  = 3.158e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (7.397e-01@(0 ,31,32),2.588e-01@(1 ,63,6 ),2.588e-01@(1 ,6 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid:solve: final     |resid| = 1.983e-10@ (0 ,63,0 )
calling heat solver for variable 0
EBMultigrid::solve iter = 3, |resid| = 8.072e-03@ (0 ,0 ,0 ), rate = 4.228e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.850e+00@ (0 ,63,0 )
EBLevelCCProjector::project:|gph|max = (7.397e-01@(0 ,31,32),2.588e-01@(1 ,63,6 ),2.588e-01@(1 ,6 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.823e+01, dx = 1.562e-02, dt = 4.286e-04
step = 9, time = 2.851e-03 dt = 4.286e-04
advancing velocity and pressure fields 
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.823e+01, dx = 1.562e-02, dt = 4.286e-04
step = 9, time = 2.851e-03 dt = 4.286e-04
advancing velocity and pressure fields 
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.850e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 1, |resid| = 2.354e+00@ (0 ,0 ,0 ), rate = 1.622e+02
EBMultigrid::solve iter = 1, |resid| = 3.317e-12@ (2 ,0 ,0 ), rate = 5.577e+11
mac projecting advection velocity
EBMultigrid::solve iter = 4, |resid| = 3.018e-05@ (0 ,63,63), rate = 3.692e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.637e+02@ (0 ,3 ,3 )
mac projecting advection velocity
EBMultigrid::solve iter = 5, |resid| = 6.654e-06@ (0 ,0 ,63), rate = 3.368e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.637e+02@ (0 ,3 ,3 )
EBMultigrid::solve iter = 4, |resid| = 2.241e-04@ (0 ,0 ,63), rate = 3.602e+01
EBMultigrid::solve iter = 2, |resid| = 4.975e-02@ (0 ,0 ,0 ), rate = 4.732e+01
EBMultigrid::solve iter = 1, |resid| = 3.317e-12@ (2 ,0 ,0 ), rate = 5.577e+11
EBMultigrid:solve: final     |resid| = 3.553e-15@ (0 ,5 ,1 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.736e-01@ (1 ,63,5 )
EBMultigrid::solve iter = 5, |resid| = 8.920e-07@ (0 ,63,63), rate = 3.383e+01
EBMultigrid::solve iter = 1, |resid| = 2.030e+01@ (0 ,0 ,0 ), rate = 3.763e+01
EBMultigrid::solve iter = 6, |resid| = 2.026e-07@ (0 ,0 ,63), rate = 3.285e+01
EBMultigrid::solve iter = 1, |resid| = 2.030e+01@ (0 ,0 ,0 ), rate = 3.763e+01
EBMultigrid::solve iter = 5, |resid| = 6.654e-06@ (0 ,0 ,63), rate = 3.368e+01
EBMultigrid:solve: final     |resid| = 3.553e-15@ (0 ,1 ,1 )
calling heat solver for variable 1
EBMultigrid::solve iter = 3, |resid| = 1.114e-03@ (0 ,63,63), rate = 4.465e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.736e-01@ (1 ,63,5 )
EBMultigrid::solve iter = 1, |resid| = 4.327e-13@ (2 ,63,63), rate = 4.012e+11
EBMultigrid::solve iter = 6, |resid| = 2.773e-08@ (0 ,63,63), rate = 3.217e+01
EBMultigrid::solve iter = 2, |resid| = 3.412e-01@ (0 ,0 ,0 ), rate = 5.948e+01
EBMultigrid::solve iter = 7, |resid| = 6.291e-09@ (0 ,0 ,63), rate = 3.220e+01
EBMultigrid::solve iter = 2, |resid| = 3.412e-01@ (0 ,0 ,0 ), rate = 5.948e+01
EBMultigrid::solve iter = 6, |resid| = 2.026e-07@ (0 ,0 ,63), rate = 3.285e+01
EBMultigrid::solve iter = 1, |resid| = 4.327e-13@ (2 ,0 ,0 ), rate = 4.012e+11
EBMultigrid::solve iter = 4, |resid| = 3.018e-05@ (0 ,63,63), rate = 3.692e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.736e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 7, |resid| = 8.878e-10@ (0 ,63,63), rate = 3.124e+01
EBMultigrid::solve iter = 3, |resid| = 8.072e-03@ (0 ,0 ,0 ), rate = 4.228e+01
EBMultigrid::solve iter = 3, |resid| = 8.072e-03@ (0 ,0 ,0 ), rate = 4.228e+01
EBMultigrid:solve: final     |resid| = 1.983e-10@ (0 ,0 ,63)
EBMultigrid::solve iter = 7, |resid| = 6.291e-09@ (0 ,0 ,63), rate = 3.220e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,1 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.736e-01@ (1 ,5 ,0 )
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.850e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 5, |resid| = 8.920e-07@ (0 ,63,63), rate = 3.383e+01
EBMultigrid::solve iter = 1, |resid| = 4.327e-13@ (2 ,0 ,0 ), rate = 4.012e+11
EBMultigrid:solve: final     |resid| = 2.896e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 2.920e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (6.476e-01@(0 ,31,32),2.685e-01@(1 ,63,6 ),2.685e-01@(1 ,6 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 4, |resid| = 2.241e-04@ (0 ,0 ,63), rate = 3.602e+01
EBMultigrid::solve iter = 4, |resid| = 2.241e-04@ (0 ,0 ,63), rate = 3.602e+01
EBMultigrid:solve: final     |resid| = 1.983e-10@ (0 ,0 ,63)
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.721e+01, dx = 1.562e-02, dt = 4.540e-04
finished run
EBMultigrid::solve iter = 1, |resid| = 3.317e-12@ (2 ,0 ,0 ), rate = 5.577e+11
EBMultigrid::solve iter = 1, |resid| = 4.327e-13@ (2 ,0 ,0 ), rate = 4.012e+11
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.850e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 6, |resid| = 2.773e-08@ (0 ,63,63), rate = 3.217e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,6 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (1.782e+01@(0 ,1 ,1 ),1.107e+00@(1 ,63,5 ),1.107e+00@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 3.818e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.818e+02@ (1 ,1 ,1 )
printing time table 
EBMultigrid::solve iter = 5, |resid| = 6.654e-06@ (0 ,0 ,63), rate = 3.368e+01
EBMultigrid::solve iter = 5, |resid| = 6.654e-06@ (0 ,0 ,63), rate = 3.368e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,4 ,0 )
cc projecting vel + gphi*dt
EBMultigrid:solve: final     |resid| = 3.553e-15@ (0 ,1 ,1 )
calling heat solver for variable 1
EBMultigrid::solve iter = 1, |resid| = 3.317e-12@ (2 ,0 ,0 ), rate = 5.577e+11
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.736e-01@ (1 ,63,5 )
EBCCProjector::project: |input velo|max = (1.782e+01@(0 ,1 ,1 ),1.107e+00@(1 ,63,5 ),1.107e+00@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 7, |resid| = 8.878e-10@ (0 ,63,63), rate = 3.124e+01
EBCCProjector::project: |kappa DiVU|max  = 3.818e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.818e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 1, |resid| = 2.354e+00@ (0 ,0 ,0 ), rate = 1.622e+02
EBMultigrid::solve iter = 6, |resid| = 2.026e-07@ (0 ,0 ,63), rate = 3.285e+01
EBMultigrid::solve iter = 6, |resid| = 2.026e-07@ (0 ,0 ,63), rate = 3.285e+01
EBMultigrid:solve: final     |resid| = 3.553e-15@ (0 ,4 ,1 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.736e-01@ (1 ,63,5 )
EBMultigrid::solve iter = 1, |resid| = 4.327e-13@ (2 ,0 ,0 ), rate = 4.012e+11
EBMultigrid::solve iter = 1, |resid| = 2.354e+00@ (0 ,0 ,0 ), rate = 1.622e+02
EBMultigrid:solve: final     |resid| = 2.896e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 2.920e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (6.476e-01@(0 ,31,32),2.685e-01@(1 ,63,6 ),2.685e-01@(1 ,6 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.721e+01, dx = 1.562e-02, dt = 4.540e-04
finished run
EBMultigrid::solve iter = 2, |resid| = 4.975e-02@ (0 ,0 ,0 ), rate = 4.732e+01
EBMultigrid::solve iter = 7, |resid| = 6.291e-09@ (0 ,0 ,63), rate = 3.220e+01
EBMultigrid::solve iter = 7, |resid| = 6.291e-09@ (0 ,0 ,63), rate = 3.220e+01
EBMultigrid::solve iter = 1, |resid| = 4.327e-13@ (2 ,0 ,0 ), rate = 4.012e+11
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,8 )
calling heat solver for variable 2
EBMultigrid::solve iter = 2, |resid| = 4.975e-02@ (0 ,0 ,0 ), rate = 4.732e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.736e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 3, |resid| = 1.114e-03@ (0 ,63,63), rate = 4.465e+01
printing time table 
EBMultigrid:solve: final     |resid| = 1.978e-10@ (0 ,0 ,63)
EBMultigrid:solve: final     |resid| = 1.984e-10@ (0 ,63,0 )
EBMultigrid::solve iter = 4, |resid| = 3.018e-05@ (0 ,63,63), rate = 3.692e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,0 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.736e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 3, |resid| = 1.114e-03@ (0 ,63,63), rate = 4.465e+01
EBMultigrid::solve iter = 1, |resid| = 4.327e-13@ (2 ,0 ,0 ), rate = 4.012e+11
calling heat solver for variable 0
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.850e+00@ (0 ,63,0 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.850e+00@ (0 ,63,0 )
EBMultigrid::solve iter = 5, |resid| = 8.920e-07@ (0 ,63,63), rate = 3.383e+01
EBMultigrid::solve iter = 1, |resid| = 4.327e-13@ (2 ,0 ,0 ), rate = 4.012e+11
EBMultigrid::solve iter = 4, |resid| = 3.018e-05@ (0 ,63,63), rate = 3.692e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,0 )
cc projecting vel + gphi*dt
EBMultigrid::solve iter = 1, |resid| = 3.317e-12@ (2 ,0 ,0 ), rate = 5.577e+11
EBMultigrid::solve iter = 1, |resid| = 3.318e-12@ (2 ,0 ,0 ), rate = 5.575e+11
EBMultigrid::solve iter = 6, |resid| = 2.773e-08@ (0 ,63,63), rate = 3.217e+01
EBCCProjector::project: |input velo|max = (1.782e+01@(0 ,1 ,1 ),1.107e+00@(1 ,63,5 ),1.107e+00@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 3.818e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.818e+02@ (1 ,1 ,1 )
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (1.782e+01@(0 ,1 ,1 ),1.107e+00@(1 ,63,5 ),1.107e+00@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |kappa DiVU|max  = 3.818e+02@(1 ,1 ,1 )
EBMultigrid::solve iter = 5, |resid| = 8.920e-07@ (0 ,63,63), rate = 3.383e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.818e+02@ (1 ,1 ,1 )
EBMultigrid::solve iter = 1, |resid| = 2.354e+00@ (0 ,0 ,0 ), rate = 1.622e+02
EBMultigrid:solve: final     |resid| = 3.553e-15@ (0 ,15,1 )
calling heat solver for variable 1
EBMultigrid:solve: final     |resid| = 3.553e-15@ (0 ,3 ,1 )
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.736e-01@ (1 ,63,5 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.736e-01@ (1 ,63,5 )
EBMultigrid::solve iter = 7, |resid| = 8.878e-10@ (0 ,0 ,0 ), rate = 3.124e+01
EBMultigrid::solve iter = 6, |resid| = 2.773e-08@ (0 ,63,63), rate = 3.217e+01
EBMultigrid::solve iter = 1, |resid| = 2.354e+00@ (0 ,0 ,0 ), rate = 1.622e+02
EBMultigrid::solve iter = 2, |resid| = 4.975e-02@ (0 ,0 ,0 ), rate = 4.732e+01
EBMultigrid::solve iter = 1, |resid| = 4.327e-13@ (2 ,0 ,0 ), rate = 4.012e+11
EBMultigrid::solve iter = 1, |resid| = 4.327e-13@ (2 ,0 ,0 ), rate = 4.012e+11
EBMultigrid:solve: final     |resid| = 2.902e-11@ (0 ,63,63)
EBCCProjector::project: |phi|max  = 2.920e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (6.476e-01@(0 ,31,32),2.685e-01@(1 ,63,6 ),2.685e-01@(1 ,6 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.721e+01, dx = 1.562e-02, dt = 4.540e-04
finished run
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,1 )
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.736e-01@ (1 ,5 ,0 )
EBMultigrid::solve iter = 7, |resid| = 8.878e-10@ (0 ,63,63), rate = 3.124e+01
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,0 ,3 )
calling heat solver for variable 2
EBMultigrid::solve iter = 2, |resid| = 4.975e-02@ (0 ,0 ,0 ), rate = 4.732e+01
EBMultigrid::solve iter = 3, |resid| = 1.114e-03@ (0 ,63,63), rate = 4.465e+01
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.736e-01@ (1 ,5 ,0 )
printing time table 
EBMultigrid::solve iter = 1, |resid| = 4.327e-13@ (2 ,0 ,0 ), rate = 4.012e+11
EBMultigrid::solve iter = 1, |resid| = 4.327e-13@ (2 ,0 ,0 ), rate = 4.012e+11
EBMultigrid:solve: final     |resid| = 2.896e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 2.920e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBMultigrid::solve iter = 3, |resid| = 1.114e-03@ (0 ,63,63), rate = 4.465e+01
EBMultigrid::solve iter = 4, |resid| = 3.018e-05@ (0 ,63,63), rate = 3.692e+01
EBLevelCCProjector::project:|gph|max = (6.476e-01@(0 ,31,32),2.685e-01@(1 ,63,6 ),2.685e-01@(1 ,6 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.721e+01, dx = 1.562e-02, dt = 4.540e-04
finished run
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,1 ,0 )
cc projecting vel + gphi*dt
EBMultigrid:solve: final     |resid| = 2.220e-16@ (1 ,1 ,0 )
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max = (1.782e+01@(0 ,1 ,1 ),1.107e+00@(1 ,63,5 ),1.107e+00@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBCCProjector::project: |input velo|max = (1.782e+01@(0 ,1 ,1 ),1.107e+00@(1 ,63,5 ),1.107e+00@(1 ,5 ,0 )EBCCProjector::project: |input velo|max)
EBMultigrid::solve iter = 4, |resid| = 3.018e-05@ (0 ,63,63), rate = 3.692e+01
EBMultigrid::solve iter = 5, |resid| = 8.920e-07@ (0 ,63,63), rate = 3.383e+01
EBCCProjector::project: |kappa DiVU|max  = 3.818e+02@(1 ,1 ,1 )
EBCCProjector::project: |kappa DiVU|max  = 3.818e+02@(1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.818e+02@ (1 ,1 ,1 )
EBMultigrid::solve tol = 1.000e-12,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.818e+02@ (1 ,1 ,1 )
printing time table 
EBMultigrid::solve iter = 1, |resid| = 2.354e+00@ (0 ,0 ,0 ), rate = 1.622e+02
EBMultigrid::solve iter = 1, |resid| = 2.354e+00@ (0 ,0 ,0 ), rate = 1.622e+02
EBMultigrid::solve iter = 6, |resid| = 2.773e-08@ (0 ,63,63), rate = 3.217e+01
EBMultigrid::solve iter = 5, |resid| = 8.920e-07@ (0 ,63,63), rate = 3.383e+01
EBMultigrid::solve iter = 2, |resid| = 4.975e-02@ (0 ,0 ,0 ), rate = 4.732e+01
EBMultigrid::solve iter = 2, |resid| = 4.975e-02@ (0 ,0 ,0 ), rate = 4.732e+01
EBMultigrid::solve iter = 7, |resid| = 8.878e-10@ (0 ,63,63), rate = 3.124e+01
EBMultigrid::solve iter = 6, |resid| = 2.773e-08@ (0 ,63,63), rate = 3.217e+01
EBMultigrid::solve iter = 3, |resid| = 1.114e-03@ (0 ,63,63), rate = 4.465e+01
EBMultigrid::solve iter = 3, |resid| = 1.114e-03@ (0 ,63,63), rate = 4.465e+01
EBMultigrid:solve: final     |resid| = 2.902e-11@ (0 ,0 ,0 )
EBMultigrid::solve iter = 7, |resid| = 8.877e-10@ (0 ,63,63), rate = 3.124e+01
EBCCProjector::project: |phi|max  = 2.920e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (6.476e-01@(0 ,31,32),2.685e-01@(1 ,63,6 ),2.685e-01@(1 ,6 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid:solve: final     |resid| = 2.902e-11@ (0 ,0 ,0 )
advancing species advection/diffusion
getting reaction rates and evolving species
EBCCProjector::project: |phi|max  = 2.920e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
maxvel = 1.721e+01, dx = 1.562e-02, dt = 4.540e-04
finished run
EBLevelCCProjector::project:|gph|max = (6.476e-01@(0 ,31,32),2.685e-01@(1 ,63,6 ),2.685e-01@(1 ,6 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBMultigrid::solve iter = 4, |resid| = 3.018e-05@ (0 ,63,63), rate = 3.692e+01
EBMultigrid::solve iter = 4, |resid| = 3.018e-05@ (0 ,63,63), rate = 3.692e+01
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.721e+01, dx = 1.562e-02, dt = 4.540e-04
finished run
printing time table 
EBMultigrid::solve iter = 5, |resid| = 8.920e-07@ (0 ,63,63), rate = 3.383e+01
EBMultigrid::solve iter = 5, |resid| = 8.920e-07@ (0 ,63,63), rate = 3.383e+01
printing time table 
EBMultigrid::solve iter = 6, |resid| = 2.773e-08@ (0 ,63,63), rate = 3.217e+01
EBMultigrid::solve iter = 6, |resid| = 2.773e-08@ (0 ,63,63), rate = 3.217e+01
EBMultigrid::solve iter = 7, |resid| = 8.878e-10@ (0 ,63,63), rate = 3.124e+01
EBMultigrid::solve iter = 7, |resid| = 8.878e-10@ (0 ,63,63), rate = 3.124e+01
EBMultigrid:solve: final     |resid| = 2.905e-11@ (0 ,0 ,0 )
EBMultigrid:solve: final     |resid| = 2.899e-11@ (0 ,0 ,0 )
EBCCProjector::project: |phi|max  = 2.920e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBCCProjector::project: |phi|max  = 2.920e-02@(0 ,3 ,3 )
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (6.476e-01@(0 ,31,32),2.685e-01@(1 ,63,6 ),2.685e-01@(1 ,6 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
EBLevelCCProjector::project:|gph|max = (6.476e-01@(0 ,31,32),2.685e-01@(1 ,63,6 ),2.685e-01@(1 ,6 ,63)EBLevelCCProjector::project:|gph|max)
advancing passive scalar
advancing species advection/diffusion
getting reaction rates and evolving species
advancing species advection/diffusion
getting reaction rates and evolving species
maxvel = 1.721e+01, dx = 1.562e-02, dt = 4.540e-04
finished run
maxvel = 1.721e+01, dx = 1.562e-02, dt = 4.540e-04
finished run
printing time table 
printing time table 
