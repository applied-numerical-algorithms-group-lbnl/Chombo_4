max_step        = 5
max_time        = 10
checkpoint interval = -1
plotfile   interval = -1
defining geometry
nx       = 32
defining geometry
maxGrid  = 16
creating grid hierarchy
creating implicit function
sphere
geom_cen = 0.5
geom_rad = 0.1
creating geometry service
done with creating geometry service
making dictionary
inititializing data
using backward Euler for parabolic solver
==============================================
tolerance       = 1e-08
maxIter         = 27
blob cen        = 0.3
geom cen        = 0.5
max vel mag     = 1
max vel rad     = 0.25
max_step        = 5
max_time        = 10
viscosity       = 0.1
==============================================
initializing solver 
EBINS::defineInternals defining parabolic solvers
EBINS::defineInternals defining Helmoltz solver for velocity
EBINS::defineInternals defining Helmoltz solver for species
EBINS::defineInternals defining EBBackwrdEuler solver for velo
EBINS::defineInternals defining EBBackwrdEuler solver for spec
EBINS::defineInternals defining advection operator
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : done with
EBAdvection::constructor leaving
EBINS::defineInternals defining projection operators
procID = 0, numPtsThisProc = 4089, startgid = 0, totalNumPts = 32712
EBINS::defineInternals defining advection operator
EBAdvection::fillkappa : about to exchange
EBAdvection::fillkappa : done with
EBAdvection::constructor leaving
after EBINS constructor
going into initialize data 
zero velocity in the interior (potential flow ic)
calling initializespot for scalar 
just making all the species spots
Standard Treb pressure initializtion:
initializing pressure with (I-P)(v*).
(gphi out of initial projection).    
startiing run
inside run
projecting initial velocity
We are starting from scratch so we are projecting the initial velocity.
EBCCProjector::project: |input velo|max =(0, 0, 0)
EBCCProjector::project: |kappa DiVU|max  = 32
EBMultigrid::solve tol = 1e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.200e+01
going directly to bottom solve
EBMultigrid:solve: final     |resid| = 4.297e-11
EBCCProjector::project: |phi|max  = 9.922e-01
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.509e+00,7.619e-01, 7.619e-01)
maxvel = 1.509e+00, dx = 3.125e-02, dt = 1.036e-02
Using Stokes dt = 9.766e-03
We are starting from scratch so we are  initializing  pressure.
Since there is no Stokes flow initialization and the number of pressure iterations == 0, 
we are using the initial projection's pressure gradient as the initial  pressure.
step = 0, time = 0.000e+00 dt = 9.766e-03
advancing velocity and pressure fields 
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.578e+01
going directly to bottom solve
EBMultigrid:solve: final     |resid| = 7.897e-13
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.931e-01
EBMultigrid::solve iter = 1, |resid| = 3.953e-04, rate = 2.006e+03
EBMultigrid::solve iter = 2, |resid| = 1.157e-06, rate = 3.416e+02
EBMultigrid:solve: final     |resid| = 7.540e-09
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.001e-01
EBMultigrid::solve iter = 1, |resid| = 3.203e-04, rate = 2.186e+03
EBMultigrid::solve iter = 2, |resid| = 6.847e-07, rate = 4.678e+02
EBMultigrid:solve: final     |resid| = 1.965e-09
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.001e-01
EBMultigrid::solve iter = 1, |resid| = 3.203e-04, rate = 2.186e+03
EBMultigrid::solve iter = 2, |resid| = 6.847e-07, rate = 4.678e+02
EBMultigrid:solve: final     |resid| = 1.965e-09
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max =(1.210e+00, 2.645e-01, 2.645e-01)
EBCCProjector::project: |kappa DiVU|max  = 1.516e+01
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.516e+01
going directly to bottom solve
EBMultigrid:solve: final     |resid| = 1.439e-12
EBCCProjector::project: |phi|max  = 3.759e-02
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (7.076e-01,5.560e-01, 5.560e-01)
advancing passive scalar
advancing species advection/diffusion
advancing species number 0
get advection term divuphi
assembling  rhs = -divuphi + R
calling heat solver for variable 
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.707e-01
EBMultigrid::solve iter = 1, |resid| = 7.683e-04, rate = 4.824e+02
EBMultigrid::solve iter = 2, |resid| = 1.667e-06, rate = 4.610e+02
EBMultigrid::solve iter = 3, |resid| = 5.209e-09, rate = 3.200e+02
EBMultigrid:solve: final     |resid| = 2.093e-11
advancing species number 1
get advection term divuphi
assembling  rhs = -divuphi + R
calling heat solver for variable 
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 9.476e-02
EBMultigrid::solve iter = 1, |resid| = 1.319e-08, rate = 7.186e+06
EBMultigrid:solve: final     |resid| = 7.216e-16
advancing species number 2
get advection term divuphi
assembling  rhs = -divuphi + R
calling heat solver for variable 
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.841e-02
EBMultigrid:solve: final     |resid| = 1.110e-16
getting reaction rates and evolving species
maxvel = 1.335e+00, dx = 3.125e-02, dt = 1.170e-02
Using Stokes dt = 9.766e-03
step = 1, time = 9.766e-03 dt = 9.766e-03
advancing velocity and pressure fields 
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.091e+01
going directly to bottom solve
EBMultigrid:solve: final     |resid| = 8.646e-13
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 6.471e-01
EBMultigrid::solve iter = 1, |resid| = 4.873e-04, rate = 1.328e+03
EBMultigrid::solve iter = 2, |resid| = 2.479e-06, rate = 1.966e+02
EBMultigrid::solve iter = 3, |resid| = 1.365e-08, rate = 1.816e+02
EBMultigrid:solve: final     |resid| = 7.837e-11
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.655e-01
EBMultigrid::solve iter = 1, |resid| = 6.999e-05, rate = 6.652e+03
EBMultigrid::solve iter = 2, |resid| = 2.406e-07, rate = 2.908e+02
EBMultigrid:solve: final     |resid| = 1.152e-09
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 4.655e-01
EBMultigrid::solve iter = 1, |resid| = 6.999e-05, rate = 6.652e+03
EBMultigrid::solve iter = 2, |resid| = 2.406e-07, rate = 2.908e+02
EBMultigrid:solve: final     |resid| = 1.152e-09
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max =(1.279e+00, 4.397e-01, 4.397e-01)
EBCCProjector::project: |kappa DiVU|max  = 2.054e+01
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.054e+01
going directly to bottom solve
EBMultigrid:solve: final     |resid| = 1.839e-12
EBCCProjector::project: |phi|max  = 5.175e-02
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.041e+00,8.184e-01, 8.184e-01)
advancing passive scalar
advancing species advection/diffusion
advancing species number 0
get advection term divuphi
assembling  rhs = -divuphi + R
calling heat solver for variable 
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.607e-01
EBMultigrid::solve iter = 1, |resid| = 6.036e-04, rate = 4.319e+02
EBMultigrid::solve iter = 2, |resid| = 1.420e-06, rate = 4.251e+02
EBMultigrid::solve iter = 3, |resid| = 4.624e-09, rate = 3.070e+02
EBMultigrid:solve: final     |resid| = 1.904e-11
advancing species number 1
get advection term divuphi
assembling  rhs = -divuphi + R
calling heat solver for variable 
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 9.230e-02
EBMultigrid::solve iter = 1, |resid| = 1.240e-08, rate = 7.441e+06
EBMultigrid:solve: final     |resid| = 7.772e-16
advancing species number 2
get advection term divuphi
assembling  rhs = -divuphi + R
calling heat solver for variable 
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.683e-02
EBMultigrid:solve: final     |resid| = 1.110e-16
getting reaction rates and evolving species
maxvel = 1.131e+00, dx = 3.125e-02, dt = 1.382e-02
Using Stokes dt = 9.766e-03
step = 2, time = 1.953e-02 dt = 9.766e-03
advancing velocity and pressure fields 
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.869e+00
going directly to bottom solve
EBMultigrid:solve: final     |resid| = 8.276e-13
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 3.945e-01
EBMultigrid::solve iter = 1, |resid| = 5.491e-04, rate = 7.183e+02
EBMultigrid::solve iter = 2, |resid| = 2.784e-06, rate = 1.973e+02
EBMultigrid::solve iter = 3, |resid| = 1.502e-08, rate = 1.853e+02
EBMultigrid:solve: final     |resid| = 8.560e-11
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.715e-01
EBMultigrid::solve iter = 1, |resid| = 7.367e-05, rate = 3.685e+03
EBMultigrid::solve iter = 2, |resid| = 2.861e-07, rate = 2.575e+02
EBMultigrid:solve: final     |resid| = 1.382e-09
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.715e-01
EBMultigrid::solve iter = 1, |resid| = 7.367e-05, rate = 3.685e+03
EBMultigrid::solve iter = 2, |resid| = 2.861e-07, rate = 2.575e+02
EBMultigrid:solve: final     |resid| = 1.382e-09
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max =(1.483e+00, 6.972e-01, 6.972e-01)
EBCCProjector::project: |kappa DiVU|max  = 2.271e+01
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.271e+01
going directly to bottom solve
EBMultigrid:solve: final     |resid| = 1.914e-12
EBCCProjector::project: |phi|max  = 5.711e-02
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.192e+00,9.379e-01, 9.379e-01)
advancing passive scalar
advancing species advection/diffusion
advancing species number 0
get advection term divuphi
assembling  rhs = -divuphi + R
calling heat solver for variable 
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.884e-01
EBMultigrid::solve iter = 1, |resid| = 4.785e-04, rate = 3.938e+02
EBMultigrid::solve iter = 2, |resid| = 1.213e-06, rate = 3.946e+02
EBMultigrid::solve iter = 3, |resid| = 4.131e-09, rate = 2.936e+02
EBMultigrid:solve: final     |resid| = 1.725e-11
advancing species number 1
get advection term divuphi
assembling  rhs = -divuphi + R
calling heat solver for variable 
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.789e-02
EBMultigrid::solve iter = 1, |resid| = 1.202e-08, rate = 7.310e+06
EBMultigrid:solve: final     |resid| = 6.661e-16
advancing species number 2
get advection term divuphi
assembling  rhs = -divuphi + R
calling heat solver for variable 
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.711e-02
EBMultigrid:solve: final     |resid| = 1.110e-16
getting reaction rates and evolving species
maxvel = 1.078e+00, dx = 3.125e-02, dt = 1.449e-02
Using Stokes dt = 9.766e-03
step = 3, time = 2.930e-02 dt = 9.766e-03
advancing velocity and pressure fields 
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.120e+00
going directly to bottom solve
EBMultigrid:solve: final     |resid| = 7.847e-13
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.059e-01
EBMultigrid::solve iter = 1, |resid| = 5.339e-04, rate = 3.858e+02
EBMultigrid::solve iter = 2, |resid| = 2.673e-06, rate = 1.997e+02
EBMultigrid::solve iter = 3, |resid| = 1.450e-08, rate = 1.844e+02
EBMultigrid:solve: final     |resid| = 8.287e-11
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.438e-01
EBMultigrid::solve iter = 1, |resid| = 6.561e-05, rate = 2.192e+03
EBMultigrid::solve iter = 2, |resid| = 2.728e-07, rate = 2.405e+02
EBMultigrid:solve: final     |resid| = 1.335e-09
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.438e-01
EBMultigrid::solve iter = 1, |resid| = 6.561e-05, rate = 2.192e+03
EBMultigrid::solve iter = 2, |resid| = 2.728e-07, rate = 2.405e+02
EBMultigrid:solve: final     |resid| = 1.335e-09
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max =(1.559e+00, 8.168e-01, 8.168e-01)
EBCCProjector::project: |kappa DiVU|max  = 2.321e+01
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.321e+01
going directly to bottom solve
EBMultigrid:solve: final     |resid| = 1.852e-12
EBCCProjector::project: |phi|max  = 5.857e-02
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.248e+00,9.849e-01, 9.849e-01)
advancing passive scalar
advancing species advection/diffusion
advancing species number 0
get advection term divuphi
assembling  rhs = -divuphi + R
calling heat solver for variable 
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 1.342e-01
EBMultigrid::solve iter = 1, |resid| = 3.823e-04, rate = 3.510e+02
EBMultigrid::solve iter = 2, |resid| = 1.039e-06, rate = 3.678e+02
EBMultigrid::solve iter = 3, |resid| = 3.693e-09, rate = 2.814e+02
EBMultigrid:solve: final     |resid| = 1.563e-11
advancing species number 1
get advection term divuphi
assembling  rhs = -divuphi + R
calling heat solver for variable 
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.313e-02
EBMultigrid::solve iter = 1, |resid| = 1.163e-08, rate = 7.150e+06
EBMultigrid:solve: final     |resid| = 6.661e-16
advancing species number 2
get advection term divuphi
assembling  rhs = -divuphi + R
calling heat solver for variable 
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.725e-02
EBMultigrid:solve: final     |resid| = 1.110e-16
getting reaction rates and evolving species
maxvel = 1.069e+00, dx = 3.125e-02, dt = 1.462e-02
Using Stokes dt = 9.766e-03
step = 4, time = 3.906e-02 dt = 9.766e-03
advancing velocity and pressure fields 
mac projecting advection velocity
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.287e+00
going directly to bottom solve
EBMultigrid:solve: final     |resid| = 7.239e-13
calling heat solver for variable 0
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 9.340e-02
EBMultigrid::solve iter = 1, |resid| = 4.784e-04, rate = 1.952e+02
EBMultigrid::solve iter = 2, |resid| = 2.434e-06, rate = 1.966e+02
EBMultigrid::solve iter = 3, |resid| = 1.334e-08, rate = 1.825e+02
EBMultigrid:solve: final     |resid| = 7.662e-11
calling heat solver for variable 1
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.302e-02
EBMultigrid::solve iter = 1, |resid| = 5.658e-05, rate = 1.291e+03
EBMultigrid::solve iter = 2, |resid| = 2.450e-07, rate = 2.309e+02
EBMultigrid::solve iter = 3, |resid| = 1.220e-09, rate = 2.008e+02
EBMultigrid:solve: final     |resid| = 6.663e-12
calling heat solver for variable 2
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.302e-02
EBMultigrid::solve iter = 1, |resid| = 5.658e-05, rate = 1.291e+03
EBMultigrid::solve iter = 2, |resid| = 2.450e-07, rate = 2.309e+02
EBMultigrid::solve iter = 3, |resid| = 1.220e-09, rate = 2.008e+02
EBMultigrid:solve: final     |resid| = 6.663e-12
cc projecting vel + gphi*dt
EBCCProjector::project: |input velo|max =(1.574e+00, 8.657e-01, 8.657e-01)
EBCCProjector::project: |kappa DiVU|max  = 2.299e+01
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 2.299e+01
going directly to bottom solve
EBMultigrid:solve: final     |resid| = 1.788e-12
EBCCProjector::project: |phi|max  = 5.834e-02
Using the ***average of MAC gradients*** for the CC gradient.
EBLevelCCProjector::project:|gph|max = (1.258e+00,9.958e-01, 9.958e-01)
advancing passive scalar
advancing species advection/diffusion
advancing species number 0
get advection term divuphi
assembling  rhs = -divuphi + R
calling heat solver for variable 
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 9.374e-02
EBMultigrid::solve iter = 1, |resid| = 3.099e-04, rate = 3.025e+02
EBMultigrid::solve iter = 2, |resid| = 8.942e-07, rate = 3.465e+02
EBMultigrid::solve iter = 3, |resid| = 3.306e-09, rate = 2.705e+02
EBMultigrid:solve: final     |resid| = 1.422e-11
advancing species number 1
get advection term divuphi
assembling  rhs = -divuphi + R
calling heat solver for variable 
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 8.108e-02
EBMultigrid::solve iter = 1, |resid| = 1.153e-08, rate = 7.035e+06
EBMultigrid:solve: final     |resid| = 6.661e-16
advancing species number 2
get advection term divuphi
assembling  rhs = -divuphi + R
calling heat solver for variable 
EBMultigrid::solve tol = 1.000e-08,  max iter = 27
EBMultigrid::solve iter = 0, |resid| = 7.626e-02
EBMultigrid:solve: final     |resid| = 1.110e-16
getting reaction rates and evolving species
maxvel = 1.063e+00, dx = 3.125e-02, dt = 1.469e-02
Using Stokes dt = 9.766e-03
finished run
printing time table 
about to call petsc Finalize
